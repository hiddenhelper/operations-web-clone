// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuPopover Component close the popup when menu item is clicked 1`] = `
<div
  class="makeStyles-iconInactive-9"
  data-testid="popover-wrapper"
>
  <span
    class=""
    data-testid="controlled-button"
    tabindex="-1"
  >
    <button
      aria-haspopup="true"
      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorPrimary"
      data-testid="popover-button"
      tabindex="0"
      type="button"
    >
      <span
        class="MuiIconButton-label"
      >
        <svg>
          expand.svg
        </svg>
      </span>
    </button>
  </span>
  
</div>
`;

exports[`MenuPopover Component open the popup 1`] = `
<div
  class="makeStyles-iconActive-6"
  data-testid="popover-wrapper"
>
  <span
    class=""
    data-testid="controlled-button"
    tabindex="-1"
  >
    <button
      aria-controls="menu-list-grow"
      aria-haspopup="true"
      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorPrimary"
      data-testid="popover-button"
      tabindex="0"
      type="button"
    >
      <span
        class="MuiIconButton-label"
      >
        <svg>
          expand.svg
        </svg>
      </span>
    </button>
  </span>
  
</div>
`;

exports[`MenuPopover Component should render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="makeStyles-iconInactive-1"
        data-testid="popover-wrapper"
      >
        <span
          class=""
          data-testid="controlled-button"
          tabindex="-1"
        >
          <button
            aria-haspopup="true"
            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorPrimary"
            data-testid="popover-button"
            tabindex="0"
            type="button"
          >
            <span
              class="MuiIconButton-label"
            >
              <svg>
                expand.svg
              </svg>
            </span>
          </button>
        </span>
        
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="makeStyles-iconInactive-1"
      data-testid="popover-wrapper"
    >
      <span
        class=""
        data-testid="controlled-button"
        tabindex="-1"
      >
        <button
          aria-haspopup="true"
          class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorPrimary"
          data-testid="popover-button"
          tabindex="0"
          type="button"
        >
          <span
            class="MuiIconButton-label"
          >
            <svg>
              expand.svg
            </svg>
          </span>
        </button>
      </span>
      
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
