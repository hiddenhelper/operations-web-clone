<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="2572" failures="14" time="321.356">
  <testsuite name="Dashboard Component" errors="0" failures="3" skipped="0" timestamp="2021-05-14T18:13:34" time="6.75" tests="8">
    <testcase classname="Dashboard Component should render FcaDashboard" name="Dashboard Component should render FcaDashboard" time="0.398">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `Dashboard Component should render FcaDashboard 1`

- Snapshot
+ Received

@@ -838,11 +838,11 @@
                &lt;div
                  style=&quot;width: 100%; display: flex;&quot;
                &gt;
                  &lt;a
                    class=&quot;MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary&quot;
-                   href=&quot;/dashboard/projects?stateCode=&amp;period=1&amp;timeZoneOffset=-08:00&quot;
+                   href=&quot;/dashboard/projects?stateCode=&amp;period=1&amp;timeZoneOffset=-06:00&quot;
                  &gt;
                    &lt;span
                      class=&quot;makeStyles-widgetCta-44&quot;
                    &gt;
                      See more details
@@ -1958,11 +1958,11 @@
                &lt;div
                  style=&quot;width: 100%; display: flex;&quot;
                &gt;
                  &lt;a
                    class=&quot;MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary&quot;
-                   href=&quot;/dashboard/workers?stateCode=&amp;period=1&amp;timeZoneOffset=-08:00&quot;
+                   href=&quot;/dashboard/workers?stateCode=&amp;period=1&amp;timeZoneOffset=-06:00&quot;
                  &gt;
                    &lt;span
                      class=&quot;makeStyles-widgetCta-44&quot;
                    &gt;
                      See more details
@@ -2086,11 +2086,11 @@
                  &lt;hr
                    class=&quot;MuiDivider-root makeStyles-widgetDivider-184 makeStyles-widgetDividerTopMargin-185&quot;
                  /&gt;
                  &lt;a
                    class=&quot;MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary&quot;
-                   href=&quot;/dashboard/clients?stateCode=&amp;period=1&amp;timeZoneOffset=-08:00&quot;
+                   href=&quot;/dashboard/clients?stateCode=&amp;period=1&amp;timeZoneOffset=-06:00&quot;
                  &gt;
                    &lt;span
                      class=&quot;makeStyles-widgetCta-44&quot;
                    &gt;
                      See more details
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\Dashboard\Dashboard.test.tsx:63:31)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="Dashboard Component should render ClientDashboard" name="Dashboard Component should render ClientDashboard" time="0.264">
    </testcase>
    <testcase classname="Dashboard Component should fetchNewBadges" name="Dashboard Component should fetchNewBadges" time="0.063">
    </testcase>
    <testcase classname="Dashboard Component should render loading new badges" name="Dashboard Component should render loading new badges" time="0.054">
    </testcase>
    <testcase classname="Dashboard Component should render no new badges" name="Dashboard Component should render no new badges" time="0.081">
    </testcase>
    <testcase classname="Dashboard Component should clear statistics" name="Dashboard Component should clear statistics" time="0.067">
    </testcase>
    <testcase classname="Dashboard Component should change state filter" name="Dashboard Component should change state filter" time="0.313">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: &quot;path?stateCode=\&quot;AZ\&quot;&amp;period=1&amp;timeZoneOffset=\&quot;-08:00\&quot;&quot;
Received: &quot;path?stateCode=\&quot;AZ\&quot;&amp;period=1&amp;timeZoneOffset=\&quot;-06:00\&quot;&quot;

Number of calls: 1
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\Dashboard\Dashboard.test.tsx:155:18)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="Dashboard Component should change period filter" name="Dashboard Component should change period filter" time="0.189">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: &quot;path?stateCode=\&quot;\&quot;&amp;period=2&amp;timeZoneOffset=\&quot;-08:00\&quot;&quot;
Received
       1: &quot;path?stateCode=\&quot;AZ\&quot;&amp;period=1&amp;timeZoneOffset=\&quot;-06:00\&quot;&quot;
       2: &quot;path?stateCode=\&quot;\&quot;&amp;period=2&amp;timeZoneOffset=\&quot;-06:00\&quot;&quot;

Number of calls: 2
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\Dashboard\Dashboard.test.tsx:178:18)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
  </testsuite>
  <testsuite name="ProjectList Component" errors="0" failures="3" skipped="0" timestamp="2021-05-14T18:13:41" time="6.066" tests="22">
    <testcase classname="ProjectList Component should render" name="ProjectList Component should render" time="0.299">
    </testcase>
    <testcase classname="ProjectList Component should fetchProjectList when FCA_ADMIN" name="ProjectList Component should fetchProjectList when FCA_ADMIN" time="0.297">
    </testcase>
    <testcase classname="ProjectList Component should fetchInvoiceStatistics when NOT FC_ADMIN" name="ProjectList Component should fetchInvoiceStatistics when NOT FC_ADMIN" time="0.153">
    </testcase>
    <testcase classname="ProjectList Component should render loading" name="ProjectList Component should render loading" time="0.148">
    </testcase>
    <testcase classname="ProjectList Component should clearProjectMap" name="ProjectList Component should clearProjectMap" time="0.154">
    </testcase>
    <testcase classname="ProjectList Component should render drawer" name="ProjectList Component should render drawer" time="0.253">
    </testcase>
    <testcase classname="ProjectList Component should show alternative values in project drawer" name="ProjectList Component should show alternative values in project drawer" time="0.164">
    </testcase>
    <testcase classname="ProjectList Component should not show related companies if null" name="ProjectList Component should not show related companies if null" time="0.185">
    </testcase>
    <testcase classname="ProjectList Component should change filter option" name="ProjectList Component should change filter option" time="0.171">
    </testcase>
    <testcase classname="ProjectList Component should change page" name="ProjectList Component should change page" time="0.314">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;filter&quot;: &quot;draft&quot;, &quot;limit&quot;: 15, &quot;page&quot;: 1, &quot;period&quot;: &quot;&quot;, &quot;status&quot;: 0, &quot;timeZoneOffset&quot;: &quot;-07:00&quot;}
Received
       1
        @@ -2,7 +2,7 @@
            &quot;filter&quot;: &quot;draft&quot;,
            &quot;limit&quot;: 15,
            &quot;page&quot;: 1,
            &quot;period&quot;: &quot;&quot;,
            &quot;status&quot;: 0,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
        +   &quot;timeZoneOffset&quot;: &quot;-05:00&quot;,
          },
       2
          Object {
            &quot;filter&quot;: &quot;draft&quot;,
            &quot;limit&quot;: 15,
        -   &quot;page&quot;: 1,
        +   &quot;page&quot;: 2,
            &quot;period&quot;: &quot;&quot;,
            &quot;status&quot;: 0,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
        +   &quot;timeZoneOffset&quot;: &quot;-05:00&quot;,
          },

Number of calls: 2
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\ProjectList\ProjectList.test.tsx:252:36)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="ProjectList Component should change state filter" name="ProjectList Component should change state filter" time="0.259">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;filter&quot;: &quot;draft&quot;, &quot;limit&quot;: 15, &quot;page&quot;: 1, &quot;period&quot;: &quot;&quot;, &quot;stateCode&quot;: &quot;AZ&quot;, &quot;status&quot;: 0, &quot;timeZoneOffset&quot;: &quot;-07:00&quot;}
Received
       1
          Object {
            &quot;filter&quot;: &quot;draft&quot;,
            &quot;limit&quot;: 15,
            &quot;page&quot;: 1,
            &quot;period&quot;: &quot;&quot;,
        -   &quot;stateCode&quot;: &quot;AZ&quot;,
            &quot;status&quot;: 0,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
        +   &quot;timeZoneOffset&quot;: &quot;-05:00&quot;,
          },
       2
        @@ -3,7 +3,7 @@
            &quot;limit&quot;: 15,
            &quot;page&quot;: 1,
            &quot;period&quot;: &quot;&quot;,
            &quot;stateCode&quot;: &quot;AZ&quot;,
            &quot;status&quot;: 0,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
        +   &quot;timeZoneOffset&quot;: &quot;-05:00&quot;,
          },

Number of calls: 2
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\ProjectList\ProjectList.test.tsx:288:36)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="ProjectList Component should change period filter" name="ProjectList Component should change period filter" time="0.167">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;filter&quot;: &quot;draft&quot;, &quot;limit&quot;: 15, &quot;page&quot;: 1, &quot;period&quot;: 0, &quot;status&quot;: 0, &quot;timeZoneOffset&quot;: &quot;-07:00&quot;}
Received
       1
          Object {
            &quot;filter&quot;: &quot;draft&quot;,
            &quot;limit&quot;: 15,
            &quot;page&quot;: 1,
        -   &quot;period&quot;: 0,
        +   &quot;period&quot;: &quot;&quot;,
            &quot;status&quot;: 0,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
        +   &quot;timeZoneOffset&quot;: &quot;-05:00&quot;,
          },
       2
        @@ -2,7 +2,7 @@
            &quot;filter&quot;: &quot;draft&quot;,
            &quot;limit&quot;: 15,
            &quot;page&quot;: 1,
            &quot;period&quot;: 0,
            &quot;status&quot;: 0,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
        +   &quot;timeZoneOffset&quot;: &quot;-05:00&quot;,
          },

Number of calls: 2
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\ProjectList\ProjectList.test.tsx:319:36)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="ProjectList Component should close drawer on navigate away" name="ProjectList Component should close drawer on navigate away" time="0.174">
    </testcase>
    <testcase classname="ProjectList Component should navigate to project wizard" name="ProjectList Component should navigate to project wizard" time="0.169">
    </testcase>
    <testcase classname="ProjectList Component should delete project" name="ProjectList Component should delete project" time="0.233">
    </testcase>
    <testcase classname="ProjectList Component should delete last project in page" name="ProjectList Component should delete last project in page" time="0.198">
    </testcase>
    <testcase classname="ProjectList Component should show loading list" name="ProjectList Component should show loading list" time="0.099">
    </testcase>
    <testcase classname="ProjectList Component should hide elements based on role" name="ProjectList Component should hide elements based on role" time="0.131">
    </testcase>
    <testcase classname="ProjectList Component should navigate to create Project device" name="ProjectList Component should navigate to create Project device" time="0.122">
    </testcase>
    <testcase classname="ProjectList Component should navigate to project information" name="ProjectList Component should navigate to project information" time="0.106">
    </testcase>
    <testcase classname="ProjectList Component should show loading widgets" name="ProjectList Component should show loading widgets" time="0.211">
    </testcase>
    <testcase classname="ProjectList Component should fetch project statistics" name="ProjectList Component should fetch project statistics" time="0.24">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceList" errors="0" failures="1" skipped="0" timestamp="2021-05-14T18:13:47" time="4.985" tests="16">
    <testcase classname="InvoiceList should render" name="InvoiceList should render" time="0.189">
    </testcase>
    <testcase classname="InvoiceList should render without invoices" name="InvoiceList should render without invoices" time="0.215">
    </testcase>
    <testcase classname="InvoiceList should render no FcAdmin" name="InvoiceList should render no FcAdmin" time="0.278">
    </testcase>
    <testcase classname="InvoiceList should fetch invoice statistics" name="InvoiceList should fetch invoice statistics" time="0.104">
    </testcase>
    <testcase classname="InvoiceList should fetch invoice list on edit" name="InvoiceList should fetch invoice list on edit" time="0.086">
    </testcase>
    <testcase classname="InvoiceList should fetchInvoiceList" name="InvoiceList should fetchInvoiceList" time="0.091">
    </testcase>
    <testcase classname="InvoiceList should unmount" name="InvoiceList should unmount" time="0.083">
    </testcase>
    <testcase classname="InvoiceList should refresh when pay invoice has error" name="InvoiceList should refresh when pay invoice has error" time="0.083">
    </testcase>
    <testcase classname="InvoiceList should open invoice modal" name="InvoiceList should open invoice modal" time="0.341">
    </testcase>
    <testcase classname="InvoiceList should change filter option" name="InvoiceList should change filter option" time="0.107">
    </testcase>
    <testcase classname="InvoiceList should save invoice" name="InvoiceList should save invoice" time="0.571">
    </testcase>
    <testcase classname="InvoiceList should save invoice as draft" name="InvoiceList should save invoice as draft" time="0.465">
    </testcase>
    <testcase classname="InvoiceList should change period filter" name="InvoiceList should change period filter" time="0.165">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;isPaid&quot;: false, &quot;pageNumber&quot;: 1, &quot;pageSize&quot;: 15, &quot;period&quot;: 0, &quot;sortType&quot;: &quot;descending&quot;, &quot;timeZoneOffset&quot;: &quot;-07:00&quot;}
Received
       1
          Object {
            &quot;isPaid&quot;: false,
            &quot;pageNumber&quot;: 1,
            &quot;pageSize&quot;: 15,
        -   &quot;period&quot;: 0,
        +   &quot;period&quot;: &quot;&quot;,
            &quot;sortType&quot;: &quot;descending&quot;,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
          },
       2
        @@ -2,7 +2,7 @@
            &quot;isPaid&quot;: false,
            &quot;pageNumber&quot;: 1,
            &quot;pageSize&quot;: 15,
            &quot;period&quot;: 0,
            &quot;sortType&quot;: &quot;descending&quot;,
        -   &quot;timeZoneOffset&quot;: &quot;-07:00&quot;,
        +   &quot;timeZoneOffset&quot;: &quot;-05:00&quot;,
          },

Number of calls: 2
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\InvoiceList\InvoiceList.test.tsx:443:36)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="InvoiceList should edit invoice" name="InvoiceList should edit invoice" time="0.668">
    </testcase>
    <testcase classname="InvoiceList should show edit loading" name="InvoiceList should show edit loading" time="0.235">
    </testcase>
    <testcase classname="InvoiceList should open edit draft invoice" name="InvoiceList should open edit draft invoice" time="0.28">
    </testcase>
  </testsuite>
  <testsuite name="ClientWizard Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:13:53" time="6.742" tests="27">
    <testcase classname="ClientWizard Component should render" name="ClientWizard Component should render" time="0.249">
    </testcase>
    <testcase classname="ClientWizard Component should render with fallback" name="ClientWizard Component should render with fallback" time="0.174">
    </testcase>
    <testcase classname="ClientWizard Component should unmount" name="ClientWizard Component should unmount" time="0.162">
    </testcase>
    <testcase classname="ClientWizard Component should render errors coming from server" name="ClientWizard Component should render errors coming from server" time="0.191">
    </testcase>
    <testcase classname="ClientWizard Component should fetchClient on load" name="ClientWizard Component should fetchClient on load" time="0.299">
    </testcase>
    <testcase classname="ClientWizard Component should fetchTradeList on load" name="ClientWizard Component should fetchTradeList on load" time="0.348">
    </testcase>
    <testcase classname="ClientWizard Component should fetchMwbe on load" name="ClientWizard Component should fetchMwbe on load" time="0.146">
    </testcase>
    <testcase classname="ClientWizard Component should reset form" name="ClientWizard Component should reset form" time="0.21">
    </testcase>
    <testcase classname="ClientWizard Component should save form" name="ClientWizard Component should save form" time="0.224">
    </testcase>
    <testcase classname="ClientWizard Component should show validations when save invalid data" name="ClientWizard Component should show validations when save invalid data" time="0.225">
    </testcase>
    <testcase classname="ClientWizard Component should show validations when save invalid users data" name="ClientWizard Component should show validations when save invalid users data" time="0.321">
    </testcase>
    <testcase classname="ClientWizard Component should show validations when save invalid address" name="ClientWizard Component should show validations when save invalid address" time="0.196">
    </testcase>
    <testcase classname="ClientWizard Component should update form" name="ClientWizard Component should update form" time="0.286">
    </testcase>
    <testcase classname="ClientWizard Component should send client for approval" name="ClientWizard Component should send client for approval" time="0.129">
    </testcase>
    <testcase classname="ClientWizard Component should approve client" name="ClientWizard Component should approve client" time="0.135">
    </testcase>
    <testcase classname="ClientWizard Component should not send client for approval when no admin user present" name="ClientWizard Component should not send client for approval when no admin user present" time="0.144">
    </testcase>
    <testcase classname="ClientWizard Component should send developer client for approval" name="ClientWizard Component should send developer client for approval" time="0.15">
    </testcase>
    <testcase classname="ClientWizard Component should update form with users" name="ClientWizard Component should update form with users" time="0.238">
    </testcase>
    <testcase classname="ClientWizard Component should render dialog when moves step without saving changes" name="ClientWizard Component should render dialog when moves step without saving changes" time="0.316">
    </testcase>
    <testcase classname="ClientWizard Component should render dialog when moves away from client flow" name="ClientWizard Component should render dialog when moves away from client flow" time="0.565">
    </testcase>
    <testcase classname="ClientWizard Component should render addresses form" name="ClientWizard Component should render addresses form" time="0.254">
    </testcase>
    <testcase classname="ClientWizard Component should render addresses form with default values" name="ClientWizard Component should render addresses form with default values" time="0.204">
    </testcase>
    <testcase classname="ClientWizard Component should render users form" name="ClientWizard Component should render users form" time="0.17">
    </testcase>
    <testcase classname="ClientWizard Component should change state" name="ClientWizard Component should change state" time="0.137">
    </testcase>
    <testcase classname="ClientWizard Component should change line 1" name="ClientWizard Component should change line 1" time="0.315">
    </testcase>
    <testcase classname="ClientWizard Component should render previous user" name="ClientWizard Component should render previous user" time="0.13">
    </testcase>
    <testcase classname="ClientWizard Component should render review" name="ClientWizard Component should render review" time="0.107">
    </testcase>
  </testsuite>
  <testsuite name="AssignUser" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:13:59" time="4.726" tests="15">
    <testcase classname="AssignUser should fetchUserProjectList" name="AssignUser should fetchUserProjectList" time="0.129">
    </testcase>
    <testcase classname="AssignUser should fetchClientList" name="AssignUser should fetchClientList" time="0.227">
    </testcase>
    <testcase classname="AssignUser assign tab should render" name="AssignUser assign tab should render" time="0.222">
    </testcase>
    <testcase classname="AssignUser assign tab should render loading" name="AssignUser assign tab should render loading" time="0.093">
    </testcase>
    <testcase classname="AssignUser assign tab should search" name="AssignUser assign tab should search" time="0.208">
    </testcase>
    <testcase classname="AssignUser assign tab should select item" name="AssignUser assign tab should select item" time="0.243">
    </testcase>
    <testcase classname="AssignUser assign tab should change page" name="AssignUser assign tab should change page" time="0.21">
    </testcase>
    <testcase classname="AssignUser assign tab should submit" name="AssignUser assign tab should submit" time="0.263">
    </testcase>
    <testcase classname="AssignUser assign tab should show selected" name="AssignUser assign tab should show selected" time="0.286">
    </testcase>
    <testcase classname="AssignUser assign tab should search by name on show selected filter" name="AssignUser assign tab should search by name on show selected filter" time="0.338">
    </testcase>
    <testcase classname="AssignUser assign tab should render not found" name="AssignUser assign tab should render not found" time="0.467">
    </testcase>
    <testcase classname="AssignUser create tab should render" name="AssignUser create tab should render" time="0.585">
    </testcase>
    <testcase classname="AssignUser create tab should render default" name="AssignUser create tab should render default" time="0.283">
    </testcase>
    <testcase classname="AssignUser create tab should create user" name="AssignUser create tab should create user" time="0.396">
    </testcase>
    <testcase classname="AssignUser create tab should show validation" name="AssignUser create tab should show validation" time="0.321">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemWizard Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:04" time="5.303" tests="16">
    <testcase classname="AccessControlSystemWizard Component should render" name="AccessControlSystemWizard Component should render" time="0.303">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should render fallback" name="AccessControlSystemWizard Component should render fallback" time="0.22">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should unmount" name="AccessControlSystemWizard Component should unmount" time="0.191">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should fetchAccessControlSystem on load" name="AccessControlSystemWizard Component should fetchAccessControlSystem on load" time="0.176">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should reset form" name="AccessControlSystemWizard Component should reset form" time="0.303">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should reset form reader 2" name="AccessControlSystemWizard Component should reset form reader 2" time="0.323">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should save access point" name="AccessControlSystemWizard Component should save access point" time="0.97">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should update access point" name="AccessControlSystemWizard Component should update access point" time="0.279">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should save handheld" name="AccessControlSystemWizard Component should save handheld" time="0.27">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should render server errors" name="AccessControlSystemWizard Component should render server errors" time="0.182">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should show validations" name="AccessControlSystemWizard Component should show validations" time="0.264">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should NOT navigate when loading and click away" name="AccessControlSystemWizard Component should NOT navigate when loading and click away" time="0.201">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should NOT navigate when loading and click away" name="AccessControlSystemWizard Component should NOT navigate when loading and click away" time="0.188">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should render dialog when moves away from ACS flow" name="AccessControlSystemWizard Component should render dialog when moves away from ACS flow" time="0.341">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should change reader 2" name="AccessControlSystemWizard Component should change reader 2" time="0.334">
    </testcase>
    <testcase classname="AccessControlSystemWizard Component should validate when reader 2 is checked" name="AccessControlSystemWizard Component should validate when reader 2 is checked" time="0.315">
    </testcase>
  </testsuite>
  <testsuite name="ClientDetail" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:10" time="5.275" tests="21">
    <testcase classname="ClientDetail should render project tab empty list" name="ClientDetail should render project tab empty list" time="0.085">
    </testcase>
    <testcase classname="ClientDetail should render workers tab" name="ClientDetail should render workers tab" time="0.09">
    </testcase>
    <testcase classname="ClientDetail should render invoices tab" name="ClientDetail should render invoices tab" time="0.319">
    </testcase>
    <testcase classname="ClientDetail should render default values" name="ClientDetail should render default values" time="0.093">
    </testcase>
    <testcase classname="ClientDetail should render loading" name="ClientDetail should render loading" time="0.065">
    </testcase>
    <testcase classname="ClientDetail should fetchClientStatistics" name="ClientDetail should fetchClientStatistics" time="0.058">
    </testcase>
    <testcase classname="ClientDetail should change project page" name="ClientDetail should change project page" time="0.088">
    </testcase>
    <testcase classname="ClientDetail should fetchClient" name="ClientDetail should fetchClient" time="0.058">
    </testcase>
    <testcase classname="ClientDetail should unmount" name="ClientDetail should unmount" time="0.049">
    </testcase>
    <testcase classname="ClientDetail should fetchMwbe" name="ClientDetail should fetchMwbe" time="0.052">
    </testcase>
    <testcase classname="ClientDetail should fetchTradeList" name="ClientDetail should fetchTradeList" time="0.052">
    </testcase>
    <testcase classname="ClientDetail should render users tab" name="ClientDetail should render users tab" time="0.045">
    </testcase>
    <testcase classname="ClientDetail should render workers tab" name="ClientDetail should render workers tab" time="0.081">
    </testcase>
    <testcase classname="ClientDetail should render information tab" name="ClientDetail should render information tab" time="0.081">
    </testcase>
    <testcase classname="ClientDetail should edit information" name="ClientDetail should edit information" time="1.166">
    </testcase>
    <testcase classname="ClientDetail should show validations" name="ClientDetail should show validations" time="0.486">
    </testcase>
    <testcase classname="ClientDetail should show server errors" name="ClientDetail should show server errors" time="0.313">
    </testcase>
    <testcase classname="ClientDetail should edit developer information" name="ClientDetail should edit developer information" time="0.38">
    </testcase>
    <testcase classname="ClientDetail should archive" name="ClientDetail should archive" time="0.357">
    </testcase>
    <testcase classname="ClientDetail should un archive" name="ClientDetail should un archive" time="0.196">
    </testcase>
    <testcase classname="ClientDetail should discard information" name="ClientDetail should discard information" time="0.53">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrinterSystemWizard Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:15" time="5.579" tests="11">
    <testcase classname="BadgePrinterSystemWizard Component should render" name="BadgePrinterSystemWizard Component should render" time="0.51">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should render fallback" name="BadgePrinterSystemWizard Component should render fallback" time="0.414">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should unmount" name="BadgePrinterSystemWizard Component should unmount" time="0.316">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should fetchBadgePrinterSystem on load" name="BadgePrinterSystemWizard Component should fetchBadgePrinterSystem on load" time="0.609">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should reset" name="BadgePrinterSystemWizard Component should reset" time="0.752">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should save" name="BadgePrinterSystemWizard Component should save" time="0.892">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should update" name="BadgePrinterSystemWizard Component should update" time="0.37">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should render dialog when moves away from ACS flow" name="BadgePrinterSystemWizard Component should render dialog when moves away from ACS flow" time="0.444">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should NOT navigate when loading and click away" name="BadgePrinterSystemWizard Component should NOT navigate when loading and click away" time="0.254">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should render server errors" name="BadgePrinterSystemWizard Component should render server errors" time="0.248">
    </testcase>
    <testcase classname="BadgePrinterSystemWizard Component should show validations" name="BadgePrinterSystemWizard Component should show validations" time="0.292">
    </testcase>
  </testsuite>
  <testsuite name="ClientList Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:21" time="2.975" tests="15">
    <testcase classname="ClientList Component should render" name="ClientList Component should render" time="0.159">
    </testcase>
    <testcase classname="ClientList Component should open client detail" name="ClientList Component should open client detail" time="0.242">
    </testcase>
    <testcase classname="ClientList Component should navigate to client wizard" name="ClientList Component should navigate to client wizard" time="0.567">
    </testcase>
    <testcase classname="ClientList Component should show client detail info" name="ClientList Component should show client detail info" time="0.257">
    </testcase>
    <testcase classname="ClientList Component should close client detail" name="ClientList Component should close client detail" time="0.147">
    </testcase>
    <testcase classname="ClientList Component should fetchMwbe on load" name="ClientList Component should fetchMwbe on load" time="0.1">
    </testcase>
    <testcase classname="ClientList Component should clearClientMap on unmount" name="ClientList Component should clearClientMap on unmount" time="0.107">
    </testcase>
    <testcase classname="ClientList Component should change filter option" name="ClientList Component should change filter option" time="0.114">
    </testcase>
    <testcase classname="ClientList Component should delete client" name="ClientList Component should delete client" time="0.183">
    </testcase>
    <testcase classname="ClientList Component should delete last client in page" name="ClientList Component should delete last client in page" time="0.168">
    </testcase>
    <testcase classname="ClientList Component should show loading list" name="ClientList Component should show loading list" time="0.092">
    </testcase>
    <testcase classname="ClientList Component should change page" name="ClientList Component should change page" time="0.12">
    </testcase>
    <testcase classname="ClientList Component should close drawer when navigate away" name="ClientList Component should close drawer when navigate away" time="0.163">
    </testcase>
    <testcase classname="ClientList Component should navigate create Client" name="ClientList Component should navigate create Client" time="0.098">
    </testcase>
    <testcase classname="ClientList Component should fetchClientStatistics" name="ClientList Component should fetchClientStatistics" time="0.096">
    </testcase>
  </testsuite>
  <testsuite name="ApiService" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:24" time="1.468" tests="217">
    <testcase classname="ApiService should getProject" name="ApiService should getProject" time="0.003">
    </testcase>
    <testcase classname="ApiService should getDraftProject" name="ApiService should getDraftProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should getStatusProcore" name="ApiService should getStatusProcore" time="0.002">
    </testcase>
    <testcase classname="ApiService should connectProcore" name="ApiService should connectProcore" time="0.002">
    </testcase>
    <testcase classname="ApiService should disconnectProcore" name="ApiService should disconnectProcore" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorker" name="ApiService should getWorker" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerStatistics" name="ApiService should getWorkerStatistics" time="0.002">
    </testcase>
    <testcase classname="ApiService should getClientDetailStatistics" name="ApiService should getClientDetailStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectDetailStatistics" name="ApiService should getProjectDetailStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getSelfWorkerStatistics" name="ApiService should getSelfWorkerStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectList" name="ApiService should getProjectList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerList" name="ApiService should getWorkerList" time="0.002">
    </testcase>
    <testcase classname="ApiService should assignWorkerProject" name="ApiService should assignWorkerProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should getSelfWorkerList" name="ApiService should getSelfWorkerList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectClientList" name="ApiService should getProjectClientList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectUserList" name="ApiService should getProjectUserList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectSummary" name="ApiService should getProjectSummary" time="0.002">
    </testcase>
    <testcase classname="ApiService should saveProject" name="ApiService should saveProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveWorker" name="ApiService should saveWorker" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveSelfWorker" name="ApiService should saveSelfWorker" time="0.002">
    </testcase>
    <testcase classname="ApiService should updateWorker" name="ApiService should updateWorker" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveAccessControlSystemAccessPoint" name="ApiService should saveAccessControlSystemAccessPoint" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveHandheld" name="ApiService should saveHandheld" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateDraftProject" name="ApiService should updateDraftProject" time="0.002">
    </testcase>
    <testcase classname="ApiService should updateProject" name="ApiService should updateProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateAccessControlSystemAccessPoint" name="ApiService should updateAccessControlSystemAccessPoint" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateAccessControlSystemHandheld" name="ApiService should updateAccessControlSystemHandheld" time="0.002">
    </testcase>
    <testcase classname="ApiService should sendApproveClient" name="ApiService should sendApproveClient" time="0.002">
    </testcase>
    <testcase classname="ApiService should approveClient" name="ApiService should approveClient" time="0.002">
    </testcase>
    <testcase classname="ApiService should sendApproveProject" name="ApiService should sendApproveProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should approveProject" name="ApiService should approveProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should acceptProjectInvitation" name="ApiService should acceptProjectInvitation" time="0.002">
    </testcase>
    <testcase classname="ApiService should deleteClient" name="ApiService should deleteClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should deleteProject" name="ApiService should deleteProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should deleteAccessControlSystem" name="ApiService should deleteAccessControlSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClient" name="ApiService should getClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should getDraftClient" name="ApiService should getDraftClient" time="0.006">
    </testcase>
    <testcase classname="ApiService should getClientList" name="ApiService should getClientList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getAccessControlSystemList" name="ApiService should getAccessControlSystemList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getGrossRevenueStatistics" name="ApiService should getGrossRevenueStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersActivityStatistics" name="ApiService should getWorkersActivityStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerObservation" name="ApiService should getWorkerObservation" time="0.001">
    </testcase>
    <testcase classname="ApiService should get Worker Activity List" name="ApiService should get Worker Activity List" time="0.001">
    </testcase>
    <testcase classname="ApiService should get Worker Observation List" name="ApiService should get Worker Observation List" time="0.001">
    </testcase>
    <testcase classname="ApiService should getGrossRevenueWidgetStatistics" name="ApiService should getGrossRevenueWidgetStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersActivityWidgetStatistics" name="ApiService should getWorkersActivityWidgetStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientRevenueWidgetStatistics" name="ApiService should getClientRevenueWidgetStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientWorkersActivityWidgetStatistics" name="ApiService should getClientWorkersActivityWidgetStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectWorkersActivityStatistics" name="ApiService should getProjectWorkersActivityStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectAccessControlSystemStatistics" name="ApiService should getProjectAccessControlSystemStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectBadgePrintingSystemStatistics" name="ApiService should getProjectBadgePrintingSystemStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectClientsStatistics" name="ApiService should getProjectClientsStatistics" time="0.002">
    </testcase>
    <testcase classname="ApiService should getProjectActivesStatistics" name="ApiService should getProjectActivesStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectBadgeLocationStatistics" name="ApiService should getProjectBadgeLocationStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectBadgeProjectStatistics" name="ApiService should getProjectBadgeProjectStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectRevenueProjectStatistics" name="ApiService should getProjectRevenueProjectStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectTopTenStatistics" name="ApiService should getProjectTopTenStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientTopTenStatistics" name="ApiService should getClientTopTenStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientActivesStatistics" name="ApiService should getClientActivesStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientsByTrades" name="ApiService should getClientsByTrades" time="0.001">
    </testcase>
    <testcase classname="ApiService should getNewAssignedWorkersWidgetStatistics" name="ApiService should getNewAssignedWorkersWidgetStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByProject" name="ApiService should getWorkersByProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByClient" name="ApiService should getWorkersByClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByLocation" name="ApiService should getWorkersByLocation" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByJobData" name="ApiService should getWorkersByJobData" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByJobDataByTrades" name="ApiService should getWorkersByJobDataByTrades" time="0.002">
    </testcase>
    <testcase classname="ApiService should getWorkersByJobDataByExperience" name="ApiService should getWorkersByJobDataByExperience" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByTradesMinority" name="ApiService should getWorkersByTradesMinority" time="0.006">
    </testcase>
    <testcase classname="ApiService should getWorkersByTradesNonMinority" name="ApiService should getWorkersByTradesNonMinority" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersCertifications" name="ApiService should getWorkersCertifications" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersObservations" name="ApiService should getWorkersObservations" time="0.002">
    </testcase>
    <testcase classname="ApiService should getWorkersByDemographicDataByLanguage" name="ApiService should getWorkersByDemographicDataByLanguage" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByDemographicDataByEthnicity" name="ApiService should getWorkersByDemographicDataByEthnicity" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersByDemographicDataByGender" name="ApiService should getWorkersByDemographicDataByGender" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersTrainings" name="ApiService should getWorkersTrainings" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkersNewWorkers" name="ApiService should getWorkersNewWorkers" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientUserList" name="ApiService should getClientUserList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientWorkerList" name="ApiService should getClientWorkerList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientProjectList" name="ApiService should getClientProjectList" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveClient" name="ApiService should saveClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateDraftClient" name="ApiService should updateDraftClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should getMwbeTypes" name="ApiService should getMwbeTypes" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientSummary" name="ApiService should getClientSummary" time="0.001">
    </testcase>
    <testcase classname="ApiService should getAccessControlSystemSummary" name="ApiService should getAccessControlSystemSummary" time="0.001">
    </testcase>
    <testcase classname="ApiService should getAccessControlSystem" name="ApiService should getAccessControlSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should getTrades" name="ApiService should getTrades" time="0">
    </testcase>
    <testcase classname="ApiService should getEthnicities" name="ApiService should getEthnicities" time="0">
    </testcase>
    <testcase classname="ApiService should getLanguages" name="ApiService should getLanguages" time="0.001">
    </testcase>
    <testcase classname="ApiService should getJobTitles" name="ApiService should getJobTitles" time="0.001">
    </testcase>
    <testcase classname="ApiService should getTradeStatuses" name="ApiService should getTradeStatuses" time="0.001">
    </testcase>
    <testcase classname="ApiService should getSkilledTrades" name="ApiService should getSkilledTrades" time="0.001">
    </testcase>
    <testcase classname="ApiService should getIdentificationTypes" name="ApiService should getIdentificationTypes" time="0.001">
    </testcase>
    <testcase classname="ApiService should getSocJobTitles" name="ApiService should getSocJobTitles" time="0.001">
    </testcase>
    <testcase classname="ApiService should getUserList" name="ApiService should getUserList" time="0.003">
    </testcase>
    <testcase classname="ApiService should searchClient" name="ApiService should searchClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerProjectByCompany" name="ApiService should getWorkerProjectByCompany" time="0.001">
    </testcase>
    <testcase classname="ApiService should searchClients without developer flag" name="ApiService should searchClients without developer flag" time="0.001">
    </testcase>
    <testcase classname="ApiService should searchProject" name="ApiService should searchProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should assignClientProject" name="ApiService should assignClientProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should assignUserProject" name="ApiService should assignUserProject" time="0.005">
    </testcase>
    <testcase classname="ApiService should getProjectCategories" name="ApiService should getProjectCategories" time="0.002">
    </testcase>
    <testcase classname="ApiService should getFcaNae" name="ApiService should getFcaNae" time="0.001">
    </testcase>
    <testcase classname="ApiService should getFcaRegion" name="ApiService should getFcaRegion" time="0.001">
    </testcase>
    <testcase classname="ApiService should getSizeCategories" name="ApiService should getSizeCategories" time="0.001">
    </testcase>
    <testcase classname="ApiService should getCertifications" name="ApiService should getCertifications" time="0.001">
    </testcase>
    <testcase classname="ApiService should getCertificationTemplates" name="ApiService should getCertificationTemplates" time="0.001">
    </testcase>
    <testcase classname="ApiService should getTrainings" name="ApiService should getTrainings" time="0.001">
    </testcase>
    <testcase classname="ApiService should getBillingTiers" name="ApiService should getBillingTiers" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientDetail" name="ApiService should getClientDetail" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveUser" name="ApiService should saveUser" time="0.001">
    </testcase>
    <testcase classname="ApiService should getUserRoles" name="ApiService should getUserRoles" time="0.001">
    </testcase>
    <testcase classname="ApiService should validateToken" name="ApiService should validateToken" time="0.001">
    </testcase>
    <testcase classname="ApiService should createAccount" name="ApiService should createAccount" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateClient" name="ApiService should updateClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should getVisitorBadgeList" name="ApiService should getVisitorBadgeList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getVisitorBadge" name="ApiService should getVisitorBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateBadgeVisitor" name="ApiService should updateBadgeVisitor" time="0.001">
    </testcase>
    <testcase classname="ApiService should getBadgeHistory" name="ApiService should getBadgeHistory" time="0.001">
    </testcase>
    <testcase classname="ApiService should createBadgeVisitors" name="ApiService should createBadgeVisitors" time="0.001">
    </testcase>
    <testcase classname="ApiService should getBadgeVisitorEntity" name="ApiService should getBadgeVisitorEntity" time="0.001">
    </testcase>
    <testcase classname="ApiService should archiveClient" name="ApiService should archiveClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should unarchiveClient" name="ApiService should unarchiveClient" time="0.001">
    </testcase>
    <testcase classname="ApiService should archiveProject" name="ApiService should archiveProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectClientHirearchyList" name="ApiService should getProjectClientHirearchyList" time="0.001">
    </testcase>
    <testcase classname="ApiService should unarchiveProject" name="ApiService should unarchiveProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should getBadgePrinterSystem" name="ApiService should getBadgePrinterSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectAccessControlSystemList" name="ApiService should getProjectAccessControlSystemList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectAccessControlSystem" name="ApiService should getProjectAccessControlSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveBadgePrinterSystem" name="ApiService should saveBadgePrinterSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectAccessControlSystemLocationList" name="ApiService should getProjectAccessControlSystemLocationList" time="0.001">
    </testcase>
    <testcase classname="ApiService should assignAcsProject" name="ApiService should assignAcsProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should unAssignAccessControlSystemProject" name="ApiService should unAssignAccessControlSystemProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateBadgePrinterSystem" name="ApiService should updateBadgePrinterSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateProjectAccessControlSystem" name="ApiService should updateProjectAccessControlSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should getBadgePrinterSystemList" name="ApiService should getBadgePrinterSystemList" time="0.001">
    </testcase>
    <testcase classname="ApiService should deleteBadgePrinterSystem" name="ApiService should deleteBadgePrinterSystem" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerCertificationList" name="ApiService should getWorkerCertificationList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerTrainingList" name="ApiService should getWorkerTrainingList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerProjectList" name="ApiService should getWorkerProjectList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectBadgePrintingSystemList" name="ApiService should getProjectBadgePrintingSystemList" time="0.005">
    </testcase>
    <testcase classname="ApiService should getProjectWorkerList" name="ApiService should getProjectWorkerList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerCertification" name="ApiService should getWorkerCertification" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerTraining" name="ApiService should getWorkerTraining" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerProjectNameList" name="ApiService should getWorkerProjectNameList" time="0.001">
    </testcase>
    <testcase classname="ApiService should assignBadgePrintingSystemProject" name="ApiService should assignBadgePrintingSystemProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should unAssignBadgePrintingSystemProject" name="ApiService should unAssignBadgePrintingSystemProject" time="0.001">
    </testcase>
    <testcase classname="ApiService should addWorkerCertification" name="ApiService should addWorkerCertification" time="0.001">
    </testcase>
    <testcase classname="ApiService should addWorkerTraining" name="ApiService should addWorkerTraining" time="0.001">
    </testcase>
    <testcase classname="ApiService should getWorkerCertificationResource" name="ApiService should getWorkerCertificationResource" time="0.002">
    </testcase>
    <testcase classname="ApiService should getWorkerTrainingResource" name="ApiService should getWorkerTrainingResource" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateBadgePrintingSystemProjectDate" name="ApiService should updateBadgePrintingSystemProjectDate" time="0.001">
    </testcase>
    <testcase classname="ApiService should getConsentForm" name="ApiService should getConsentForm" time="0.001">
    </testcase>
    <testcase classname="ApiService should getEditableConsentForm" name="ApiService should getEditableConsentForm" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveConsentForm" name="ApiService should saveConsentForm" time="0.001">
    </testcase>
    <testcase classname="ApiService should getBadge" name="ApiService should getBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService should activateBadge" name="ApiService should activateBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateBadge" name="ApiService should updateBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService should revokeBadge" name="ApiService should revokeBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService should deactivateBadge" name="ApiService should deactivateBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService should uploadConfirm" name="ApiService should uploadConfirm" time="0.001">
    </testcase>
    <testcase classname="ApiService should getPaymentMethods" name="ApiService should getPaymentMethods" time="0.001">
    </testcase>
    <testcase classname="ApiService should createPayment" name="ApiService should createPayment" time="0.001">
    </testcase>
    <testcase classname="ApiService should deletePayment" name="ApiService should deletePayment" time="0.001">
    </testcase>
    <testcase classname="ApiService should replacePayment" name="ApiService should replacePayment" time="0.001">
    </testcase>
    <testcase classname="ApiService should getPrintableWorkerBadge" name="ApiService should getPrintableWorkerBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService should getPrintableVisitorBadge" name="ApiService should getPrintableVisitorBadge" time="0.001">
    </testcase>
    <testcase classname="ApiService uploadFile should send" name="ApiService uploadFile should send" time="0.001">
    </testcase>
    <testcase classname="ApiService uploadFile should progress" name="ApiService uploadFile should progress" time="0.002">
    </testcase>
    <testcase classname="ApiService uploadFile should onload" name="ApiService uploadFile should onload" time="0.001">
    </testcase>
    <testcase classname="ApiService uploadFile should onload error" name="ApiService uploadFile should onload error" time="0.001">
    </testcase>
    <testcase classname="ApiService uploadFile should onerror" name="ApiService uploadFile should onerror" time="0.001">
    </testcase>
    <testcase classname="ApiService downloadFile should send" name="ApiService downloadFile should send" time="0.001">
    </testcase>
    <testcase classname="ApiService downloadFile should onload" name="ApiService downloadFile should onload" time="0.002">
    </testcase>
    <testcase classname="ApiService downloadFile should onload error" name="ApiService downloadFile should onload error" time="0.001">
    </testcase>
    <testcase classname="ApiService downloadFile should onerror" name="ApiService downloadFile should onerror" time="0.001">
    </testcase>
    <testcase classname="ApiService protectedRequest should make a protectedRequest" name="ApiService protectedRequest should make a protectedRequest" time="0.001">
    </testcase>
    <testcase classname="ApiService protectedRequest should make a protectedRequest with a body" name="ApiService protectedRequest should make a protectedRequest with a body" time="0.001">
    </testcase>
    <testcase classname="ApiService publicRequest should make a publicRequest" name="ApiService publicRequest should make a publicRequest" time="0.004">
    </testcase>
    <testcase classname="ApiService publicRequest should make a publicRequest with a body" name="ApiService publicRequest should make a publicRequest with a body" time="0.001">
    </testcase>
    <testcase classname="ApiService should parse a body" name="ApiService should parse a body" time="0">
    </testcase>
    <testcase classname="ApiService should format error" name="ApiService should format error" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectStatistics" name="ApiService should getProjectStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getCompanyProjectStatistics" name="ApiService should getCompanyProjectStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getClientStatistics" name="ApiService should getClientStatistics" time="0.002">
    </testcase>
    <testcase classname="ApiService should getInventoryStatistics" name="ApiService should getInventoryStatistics" time="0.002">
    </testcase>
    <testcase classname="ApiService should getProjectWidgetStatistics" name="ApiService should getProjectWidgetStatistics" time="0.002">
    </testcase>
    <testcase classname="ApiService should getClientWidgetStatistics" name="ApiService should getClientWidgetStatistics" time="0.002">
    </testcase>
    <testcase classname="ApiService should getConsentFormFields" name="ApiService should getConsentFormFields" time="0.002">
    </testcase>
    <testcase classname="ApiService should getProjectBadgeResources" name="ApiService should getProjectBadgeResources" time="0.002">
    </testcase>
    <testcase classname="ApiService should getConsentFormFields" name="ApiService should getConsentFormFields" time="0.002">
    </testcase>
    <testcase classname="ApiService should resetPassword" name="ApiService should resetPassword" time="0.002">
    </testcase>
    <testcase classname="ApiService should confirmResetPassword" name="ApiService should confirmResetPassword" time="0.001">
    </testcase>
    <testcase classname="ApiService should getInvoiceList" name="ApiService should getInvoiceList" time="0.002">
    </testcase>
    <testcase classname="ApiService should getServiceTypeList" name="ApiService should getServiceTypeList" time="0.001">
    </testcase>
    <testcase classname="ApiService should saveInvoice" name="ApiService should saveInvoice" time="0.001">
    </testcase>
    <testcase classname="ApiService should getInvoiceStatistics" name="ApiService should getInvoiceStatistics" time="0.001">
    </testcase>
    <testcase classname="ApiService should getInvoiceSummary" name="ApiService should getInvoiceSummary" time="0.001">
    </testcase>
    <testcase classname="ApiService should deleteInvoice" name="ApiService should deleteInvoice" time="0.001">
    </testcase>
    <testcase classname="ApiService should markInvoiceAsPaid" name="ApiService should markInvoiceAsPaid" time="0.001">
    </testcase>
    <testcase classname="ApiService should markInvoiceAsVoid" name="ApiService should markInvoiceAsVoid" time="0.001">
    </testcase>
    <testcase classname="ApiService should payInvoice" name="ApiService should payInvoice" time="0.001">
    </testcase>
    <testcase classname="ApiService should confirmInvoice" name="ApiService should confirmInvoice" time="0.001">
    </testcase>
    <testcase classname="ApiService should downloadInvoice" name="ApiService should downloadInvoice" time="0.001">
    </testcase>
    <testcase classname="ApiService should downloadConsentForm" name="ApiService should downloadConsentForm" time="0">
    </testcase>
    <testcase classname="ApiService should editInvoice" name="ApiService should editInvoice" time="0.002">
    </testcase>
    <testcase classname="ApiService should getInvoice" name="ApiService should getInvoice" time="0.001">
    </testcase>
    <testcase classname="ApiService should changePassword" name="ApiService should changePassword" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateProfile" name="ApiService should updateProfile" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateCompanyUserProfile" name="ApiService should updateCompanyUserProfile" time="0.001">
    </testcase>
    <testcase classname="ApiService should getAccount" name="ApiService should getAccount" time="0.001">
    </testcase>
    <testcase classname="ApiService should getCompanyUserAccount" name="ApiService should getCompanyUserAccount" time="0">
    </testcase>
    <testcase classname="ApiService should getCountryList" name="ApiService should getCountryList" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProfilePhotoResource" name="ApiService should getProfilePhotoResource" time="0.001">
    </testcase>
    <testcase classname="ApiService should getProjectClientSummary" name="ApiService should getProjectClientSummary" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateClientProjectTaxCondition" name="ApiService should updateClientProjectTaxCondition" time="0.001">
    </testcase>
    <testcase classname="ApiService should updateProjectPaymentMethod" name="ApiService should updateProjectPaymentMethod" time="0.001">
    </testcase>
    <testcase classname="ApiService should getTimeZones" name="ApiService should getTimeZones" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="client epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:25" time="0.846" tests="46">
    <testcase classname="client epics fetchClientStart should get epic for clients fetch client" name="client epics fetchClientStart should get epic for clients fetch client" time="0.016">
    </testcase>
    <testcase classname="client epics fetchClientStart should catch errors" name="client epics fetchClientStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="client epics fetchSelfCompanyStart should get epic for clients fetch self company" name="client epics fetchSelfCompanyStart should get epic for clients fetch self company" time="0.004">
    </testcase>
    <testcase classname="client epics fetchSelfCompanyStart should catch errors" name="client epics fetchSelfCompanyStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="client epics fetchDraftClientStart should get epic for clients fetch draft client" name="client epics fetchDraftClientStart should get epic for clients fetch draft client" time="0.016">
    </testcase>
    <testcase classname="client epics fetchDraftClientStart should catch errors" name="client epics fetchDraftClientStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="client epics sendApproveClientStart should get epic for send for approve client" name="client epics sendApproveClientStart should get epic for send for approve client" time="0.005">
    </testcase>
    <testcase classname="client epics sendApproveClientStart should catch errors" name="client epics sendApproveClientStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="client epics deleteClientStart should delete client and navigate to previous page" name="client epics deleteClientStart should delete client and navigate to previous page" time="0.017">
    </testcase>
    <testcase classname="client epics deleteClientStart should delete client and fetch client list" name="client epics deleteClientStart should delete client and fetch client list" time="0.018">
    </testcase>
    <testcase classname="client epics deleteClientStart should catch errors" name="client epics deleteClientStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="client epics approveClientStart should get epic for approve client" name="client epics approveClientStart should get epic for approve client" time="0.014">
    </testcase>
    <testcase classname="client epics approveClientStart should catch errors" name="client epics approveClientStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="client epics fetchClientListStart should get epic for clients fetch client list" name="client epics fetchClientListStart should get epic for clients fetch client list" time="0.013">
    </testcase>
    <testcase classname="client epics fetchClientListStart should catch errors" name="client epics fetchClientListStart should catch errors" time="0.018">
    </testcase>
    <testcase classname="client epics fetchUserClientListStart should get epic for clients fetch client list" name="client epics fetchUserClientListStart should get epic for clients fetch client list" time="0.016">
    </testcase>
    <testcase classname="client epics fetchUserClientListStart should catch errors" name="client epics fetchUserClientListStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="client epics fetchMwbeTypesStart should get epic for clients mwbe list" name="client epics fetchMwbeTypesStart should get epic for clients mwbe list" time="0.016">
    </testcase>
    <testcase classname="client epics fetchMwbeTypesStart should catch errors" name="client epics fetchMwbeTypesStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="client epics fetchTrades should get epic for trades list" name="client epics fetchTrades should get epic for trades list" time="0.016">
    </testcase>
    <testcase classname="client epics fetchTrades should catch errors" name="client epics fetchTrades should catch errors" time="0.012">
    </testcase>
    <testcase classname="client epics saveClientStart should get epic for save client" name="client epics saveClientStart should get epic for save client" time="0.006">
    </testcase>
    <testcase classname="client epics saveClientStart should catch errors" name="client epics saveClientStart should catch errors" time="0.013">
    </testcase>
    <testcase classname="client epics saveClientStart should catch relation errors" name="client epics saveClientStart should catch relation errors" time="0.016">
    </testcase>
    <testcase classname="client epics updateDraftClientStart should get epic for update draft client" name="client epics updateDraftClientStart should get epic for update draft client" time="0.016">
    </testcase>
    <testcase classname="client epics updateDraftClientStart should catch errors" name="client epics updateDraftClientStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="client epics updateClientStart should get epic for update client" name="client epics updateClientStart should get epic for update client" time="0.014">
    </testcase>
    <testcase classname="client epics updateClientStart should catch errors" name="client epics updateClientStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="client epics archiveClientStart should get epic for archive client" name="client epics archiveClientStart should get epic for archive client" time="0.015">
    </testcase>
    <testcase classname="client epics archiveClientStart should catch errors" name="client epics archiveClientStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="client epics unarchiveClientStart should get epic for archive client" name="client epics unarchiveClientStart should get epic for archive client" time="0.015">
    </testcase>
    <testcase classname="client epics unarchiveClientStart should catch errors" name="client epics unarchiveClientStart should catch errors" time="0.004">
    </testcase>
    <testcase classname="client epics fetchClientSummaryStart should get epic for summary client" name="client epics fetchClientSummaryStart should get epic for summary client" time="0.012">
    </testcase>
    <testcase classname="client epics fetchClientSummaryStart should catch errors" name="client epics fetchClientSummaryStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="client epics searchClientStart should get epic for general search" name="client epics searchClientStart should get epic for general search" time="0.02">
    </testcase>
    <testcase classname="client epics searchClientStart should catch errors" name="client epics searchClientStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="client epics fetchProjectClientListStart should get epic for project fetch client list" name="client epics fetchProjectClientListStart should get epic for project fetch client list" time="0.016">
    </testcase>
    <testcase classname="client epics fetchProjectClientListStart should catch errors" name="client epics fetchProjectClientListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="client epics fetchSubContractorListStart should get epic for project fetch client list" name="client epics fetchSubContractorListStart should get epic for project fetch client list" time="0.016">
    </testcase>
    <testcase classname="client epics fetchSubContractorListStart should catch errors" name="client epics fetchSubContractorListStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="client epics fetchProjectClientHirearchyListStart should get epic for project fetch client hirearchy list" name="client epics fetchProjectClientHirearchyListStart should get epic for project fetch client hirearchy list" time="0.006">
    </testcase>
    <testcase classname="client epics fetchProjectClientHirearchyListStart should catch errors" name="client epics fetchProjectClientHirearchyListStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="client epics fetchProjectClientSummaryStart should get epic for project fetch client summary" name="client epics fetchProjectClientSummaryStart should get epic for project fetch client summary" time="0.005">
    </testcase>
    <testcase classname="client epics fetchProjectClientSummaryStart should catch errors" name="client epics fetchProjectClientSummaryStart should catch errors" time="0.004">
    </testcase>
    <testcase classname="client epics updateProjectClientTaxConditionStart should get epic for project update client tax condition summary" name="client epics updateProjectClientTaxConditionStart should get epic for project update client tax condition summary" time="0.009">
    </testcase>
    <testcase classname="client epics updateProjectClientTaxConditionStart should catch errors" name="client epics updateProjectClientTaxConditionStart should catch errors" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="project epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:26" time="1.948" tests="72">
    <testcase classname="project epics fetchProjectStart should get epic for projects fetch project" name="project epics fetchProjectStart should get epic for projects fetch project" time="0.047">
    </testcase>
    <testcase classname="project epics fetchProjectStart should catch errors" name="project epics fetchProjectStart should catch errors" time="0.088">
    </testcase>
    <testcase classname="project epics fetchDraftProjectStart should get epic for projects fetch project" name="project epics fetchDraftProjectStart should get epic for projects fetch project" time="0.094">
    </testcase>
    <testcase classname="project epics fetchDraftProjectStart should catch errors" name="project epics fetchDraftProjectStart should catch errors" time="0.124">
    </testcase>
    <testcase classname="project epics fetchProjectListStart should get epic for projects fetch project list when FC Admin" name="project epics fetchProjectListStart should get epic for projects fetch project list when FC Admin" time="0.132">
    </testcase>
    <testcase classname="project epics fetchProjectListStart should get epic for projects fetch project list when No FC Admin" name="project epics fetchProjectListStart should get epic for projects fetch project list when No FC Admin" time="0.073">
    </testcase>
    <testcase classname="project epics fetchProjectListStart should catch errors" name="project epics fetchProjectListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="project epics saveProjectStart should get epic for save project" name="project epics saveProjectStart should get epic for save project" time="0.063">
    </testcase>
    <testcase classname="project epics saveProjectStart should catch errors" name="project epics saveProjectStart should catch errors" time="0.137">
    </testcase>
    <testcase classname="project epics updateDraftProjectStart should get epic for update draft project" name="project epics updateDraftProjectStart should get epic for update draft project" time="0.006">
    </testcase>
    <testcase classname="project epics updateDraftProjectStart should catch errors" name="project epics updateDraftProjectStart should catch errors" time="0.004">
    </testcase>
    <testcase classname="project epics updateProjectStart should get epic for update project" name="project epics updateProjectStart should get epic for update project" time="0.005">
    </testcase>
    <testcase classname="project epics updateProjectStart should catch errors" name="project epics updateProjectStart should catch errors" time="0.006">
    </testcase>
    <testcase classname="project epics updateProjectStart should get epic for update project" name="project epics updateProjectStart should get epic for update project" time="0.005">
    </testcase>
    <testcase classname="project epics updateProjectStart should catch errors" name="project epics updateProjectStart should catch errors" time="0.006">
    </testcase>
    <testcase classname="project epics archiveProjectStart should get epic for archive project" name="project epics archiveProjectStart should get epic for archive project" time="0.006">
    </testcase>
    <testcase classname="project epics archiveProjectStart should catch errors" name="project epics archiveProjectStart should catch errors" time="0.005">
    </testcase>
    <testcase classname="project epics unarchiveProjectStart should get epic for unarchive project" name="project epics unarchiveProjectStart should get epic for unarchive project" time="0.01">
    </testcase>
    <testcase classname="project epics unarchiveProjectStart should catch default error" name="project epics unarchiveProjectStart should catch default error" time="0.005">
    </testcase>
    <testcase classname="project epics unarchiveProjectStart should catch errors" name="project epics unarchiveProjectStart should catch errors" time="0.004">
    </testcase>
    <testcase classname="project epics fetchCategoryListStart should get epic for project fetch categories" name="project epics fetchCategoryListStart should get epic for project fetch categories" time="0.004">
    </testcase>
    <testcase classname="project epics fetchCategoryListStart should catch default error" name="project epics fetchCategoryListStart should catch default error" time="0.004">
    </testcase>
    <testcase classname="project epics fetchRegionListStart should get epic for project fetch regions" name="project epics fetchRegionListStart should get epic for project fetch regions" time="0.012">
    </testcase>
    <testcase classname="project epics fetchRegionListStart should catch errors" name="project epics fetchRegionListStart should catch errors" time="0.02">
    </testcase>
    <testcase classname="project epics fetchFcaNaeListStart should get epic for project fetch nae" name="project epics fetchFcaNaeListStart should get epic for project fetch nae" time="0.016">
    </testcase>
    <testcase classname="project epics fetchFcaNaeListStart should catch errors" name="project epics fetchFcaNaeListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="project epics fetchBillingTierListStart should get epic for project fetch BillingTierList" name="project epics fetchBillingTierListStart should get epic for project fetch BillingTierList" time="0.004">
    </testcase>
    <testcase classname="project epics fetchBillingTierListStart should catch errors" name="project epics fetchBillingTierListStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="project epics fetchClientProjectListStart should get epic for clients fetch project list" name="project epics fetchClientProjectListStart should get epic for clients fetch project list" time="0.016">
    </testcase>
    <testcase classname="project epics fetchClientProjectListStart should catch errors" name="project epics fetchClientProjectListStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="project epics fetchProjectSummaryStart should get epic for product fetch summary" name="project epics fetchProjectSummaryStart should get epic for product fetch summary" time="0.02">
    </testcase>
    <testcase classname="project epics fetchProjectSummaryStart should catch errors" name="project epics fetchProjectSummaryStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="project epics sendApproveProjectStart should get epic for send for approve project" name="project epics sendApproveProjectStart should get epic for send for approve project" time="0.004">
    </testcase>
    <testcase classname="project epics sendApproveProjectStart should catch errors" name="project epics sendApproveProjectStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="project epics sendApproveProjectStart should catch errors" name="project epics sendApproveProjectStart should catch errors" time="0.02">
    </testcase>
    <testcase classname="project epics approveProjectStart should get epic for approve project" name="project epics approveProjectStart should get epic for approve project" time="0.016">
    </testcase>
    <testcase classname="project epics approveProjectStart should catch errors" name="project epics approveProjectStart should catch errors" time="0.008">
    </testcase>
    <testcase classname="project epics acceptProjectInvitationStart should get epic for accept project" name="project epics acceptProjectInvitationStart should get epic for accept project" time="0.017">
    </testcase>
    <testcase classname="project epics acceptProjectInvitationStart should catch errors" name="project epics acceptProjectInvitationStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="project epics deleteProjectStart should get epic for delete project" name="project epics deleteProjectStart should get epic for delete project" time="0.004">
    </testcase>
    <testcase classname="project epics deleteProjectStart should delete project and navigate to previous page" name="project epics deleteProjectStart should delete project and navigate to previous page" time="0.012">
    </testcase>
    <testcase classname="project epics deleteProjectStart should catch errors" name="project epics deleteProjectStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="project epics assignClientProjectStart should get epic for assign client to a project" name="project epics assignClientProjectStart should get epic for assign client to a project" time="0.005">
    </testcase>
    <testcase classname="project epics assignClientProjectStart should get epic for assign multiple client to a project" name="project epics assignClientProjectStart should get epic for assign multiple client to a project" time="0.009">
    </testcase>
    <testcase classname="project epics assignClientProjectStart should catch errors" name="project epics assignClientProjectStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="project epics assignUserProjectStart should get epic for assign users to a project" name="project epics assignUserProjectStart should get epic for assign users to a project" time="0.015">
    </testcase>
    <testcase classname="project epics assignUserProjectStart should get epic for assign multiple users to a project" name="project epics assignUserProjectStart should get epic for assign multiple users to a project" time="0.015">
    </testcase>
    <testcase classname="project epics assignUserProjectStart should catch default errors" name="project epics assignUserProjectStart should catch default errors" time="0.015">
    </testcase>
    <testcase classname="project epics assignAccessControlSystemProjectStart should get epic for assign access control system project" name="project epics assignAccessControlSystemProjectStart should get epic for assign access control system project" time="0.006">
    </testcase>
    <testcase classname="project epics assignAccessControlSystemProjectStart should catch default errors" name="project epics assignAccessControlSystemProjectStart should catch default errors" time="0.017">
    </testcase>
    <testcase classname="project epics unassignAccessControlSystemProjectStart should get epic for unassign access control system project" name="project epics unassignAccessControlSystemProjectStart should get epic for unassign access control system project" time="0.023">
    </testcase>
    <testcase classname="project epics unassignAccessControlSystemProjectStart should catch default errors" name="project epics unassignAccessControlSystemProjectStart should catch default errors" time="0.016">
    </testcase>
    <testcase classname="project epics unassignBadgePrintingSystemProjectStart should get epic for unassign badge printintg system project" name="project epics unassignBadgePrintingSystemProjectStart should get epic for unassign badge printintg system project" time="0.015">
    </testcase>
    <testcase classname="project epics unassignBadgePrintingSystemProjectStart should catch default errors" name="project epics unassignBadgePrintingSystemProjectStart should catch default errors" time="0.016">
    </testcase>
    <testcase classname="project epics assignBadgePrintingSystemProjectStart should get epic for assign badge printing system project" name="project epics assignBadgePrintingSystemProjectStart should get epic for assign badge printing system project" time="0.015">
    </testcase>
    <testcase classname="project epics assignBadgePrintingSystemProjectStart should catch default errors" name="project epics assignBadgePrintingSystemProjectStart should catch default errors" time="0.01">
    </testcase>
    <testcase classname="project epics assignWorkerProjectStart should get epic for assign worker project" name="project epics assignWorkerProjectStart should get epic for assign worker project" time="0.02">
    </testcase>
    <testcase classname="project epics assignWorkerProjectStart should get epic for assign workers project" name="project epics assignWorkerProjectStart should get epic for assign workers project" time="0.015">
    </testcase>
    <testcase classname="project epics assignWorkerProjectStart should catch default errors" name="project epics assignWorkerProjectStart should catch default errors" time="0.016">
    </testcase>
    <testcase classname="project epics fetchWorkerProjectListStart should get epic for worker fetch project list" name="project epics fetchWorkerProjectListStart should get epic for worker fetch project list" time="0.018">
    </testcase>
    <testcase classname="project epics fetchWorkerProjectListStart should catch errors" name="project epics fetchWorkerProjectListStart should catch errors" time="0.013">
    </testcase>
    <testcase classname="project epics fetchConsentFormFields should get epic for consent form fields" name="project epics fetchConsentFormFields should get epic for consent form fields" time="0.016">
    </testcase>
    <testcase classname="project epics fetchConsentFormFields should catch errors" name="project epics fetchConsentFormFields should catch errors" time="0.011">
    </testcase>
    <testcase classname="project epics addProjectBadgesStart should get epic for project add badges start" name="project epics addProjectBadgesStart should get epic for project add badges start" time="0.004">
    </testcase>
    <testcase classname="project epics uploadProjectBadgeLogosStart should get epic for project upload project badges" name="project epics uploadProjectBadgeLogosStart should get epic for project upload project badges" time="0.014">
    </testcase>
    <testcase classname="project epics uploadProjectBadgeLogosStart should catch errors" name="project epics uploadProjectBadgeLogosStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="project epics fetchBadgeVisitorEntityListStart should get epic for get badge visitor entity list" name="project epics fetchBadgeVisitorEntityListStart should get epic for get badge visitor entity list" time="0.016">
    </testcase>
    <testcase classname="project epics fetchBadgeVisitorEntityListStart should catch errors" name="project epics fetchBadgeVisitorEntityListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="project epics searchProjectStart should get epic for general search project" name="project epics searchProjectStart should get epic for general search project" time="0.012">
    </testcase>
    <testcase classname="project epics searchProjectStart should catch errors" name="project epics searchProjectStart should catch errors" time="0.004">
    </testcase>
    <testcase classname="project epics updateProjectPaymentMethodStart should get epic for update project payment method start" name="project epics updateProjectPaymentMethodStart should get epic for update project payment method start" time="0.014">
    </testcase>
    <testcase classname="project epics updateProjectPaymentMethodStart should catch errors" name="project epics updateProjectPaymentMethodStart should catch errors" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="DashboardClient" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:28" time="1.119" tests="3">
    <testcase classname="DashboardClient should render" name="DashboardClient should render" time="0.192">
    </testcase>
    <testcase classname="DashboardClient should change state filter" name="DashboardClient should change state filter" time="0.218">
    </testcase>
    <testcase classname="DashboardClient should change period filter" name="DashboardClient should change period filter" time="0.141">
    </testcase>
  </testsuite>
  <testsuite name="DashboardWorker Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:29" time="1.234" tests="4">
    <testcase classname="DashboardWorker Component should render" name="DashboardWorker Component should render" time="0.211">
    </testcase>
    <testcase classname="DashboardWorker Component should clear statistics" name="DashboardWorker Component should clear statistics" time="0.157">
    </testcase>
    <testcase classname="DashboardWorker Component should change state filter" name="DashboardWorker Component should change state filter" time="0.23">
    </testcase>
    <testcase classname="DashboardWorker Component should change period filter" name="DashboardWorker Component should change period filter" time="0.152">
    </testcase>
  </testsuite>
  <testsuite name="statistics epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:31" time="1.481" tests="86">
    <testcase classname="statistics epics fetchNewBadgesStart should get epic for statistics fetch new badges" name="statistics epics fetchNewBadgesStart should get epic for statistics fetch new badges" time="0.025">
    </testcase>
    <testcase classname="statistics epics fetchNewBadgesStart should catch errors" name="statistics epics fetchNewBadgesStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchWorkersActivityStart should get epic for statistics fetch workers activity" name="statistics epics fetchWorkersActivityStart should get epic for statistics fetch workers activity" time="0.014">
    </testcase>
    <testcase classname="statistics epics fetchWorkersActivityStart should catch errors" name="statistics epics fetchWorkersActivityStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="statistics epics fetchGrossRevenueStart should get epic for statistics fetch gross revenue" name="statistics epics fetchGrossRevenueStart should get epic for statistics fetch gross revenue" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchGrossRevenueStart should catch errors" name="statistics epics fetchGrossRevenueStart should catch errors" time="0.027">
    </testcase>
    <testcase classname="statistics epics fetchProjectStatisticsStart should get epic for project fetch statistics" name="statistics epics fetchProjectStatisticsStart should get epic for project fetch statistics" time="0.01">
    </testcase>
    <testcase classname="statistics epics fetchProjectStatisticsStart should get epic for company project fetch statistics" name="statistics epics fetchProjectStatisticsStart should get epic for company project fetch statistics" time="0.007">
    </testcase>
    <testcase classname="statistics epics fetchProjectStatisticsStart should catch errors" name="statistics epics fetchProjectStatisticsStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchClientStatisticsStart should get epic for client fetch statistics" name="statistics epics fetchClientStatisticsStart should get epic for client fetch statistics" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchClientStatisticsStart should catch errors" name="statistics epics fetchClientStatisticsStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="statistics epics fetchInventoryStatisticsStart should get epic for inventory fetch statistics" name="statistics epics fetchInventoryStatisticsStart should get epic for inventory fetch statistics" time="0.018">
    </testcase>
    <testcase classname="statistics epics fetchInventoryStatisticsStart should catch errors" name="statistics epics fetchInventoryStatisticsStart should catch errors" time="0.018">
    </testcase>
    <testcase classname="statistics epics fetchWorkerStatisticsStart should get epic for worker fetch statistics" name="statistics epics fetchWorkerStatisticsStart should get epic for worker fetch statistics" time="0.012">
    </testcase>
    <testcase classname="statistics epics fetchWorkerStatisticsStart should get epic for worker fetch self statistics" name="statistics epics fetchWorkerStatisticsStart should get epic for worker fetch self statistics" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchWorkerStatisticsStart should catch errors" name="statistics epics fetchWorkerStatisticsStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchProjectWidgetStatisticsStart should get epic for statistics fetch project widget" name="statistics epics fetchProjectWidgetStatisticsStart should get epic for statistics fetch project widget" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchProjectWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectWidgetStatisticsStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchClientWidgetStatisticsStart should get epic for statistics fetch project widget" name="statistics epics fetchClientWidgetStatisticsStart should get epic for statistics fetch project widget" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchClientWidgetStatisticsStart should catch errors" name="statistics epics fetchClientWidgetStatisticsStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="statistics epics fetchInvoiceStatisticsStart should get epic for invoice fetch statistics" name="statistics epics fetchInvoiceStatisticsStart should get epic for invoice fetch statistics" time="0.006">
    </testcase>
    <testcase classname="statistics epics fetchInvoiceStatisticsStart should catch errors" name="statistics epics fetchInvoiceStatisticsStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchGrossRevenueWidgetStatisticsStart should fetch Gross Revenue Widget Statistics Start" name="statistics epics fetchGrossRevenueWidgetStatisticsStart should fetch Gross Revenue Widget Statistics Start" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchGrossRevenueWidgetStatisticsStart should catch errors" name="statistics epics fetchGrossRevenueWidgetStatisticsStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchWorkersActivityWidgetStatisticsStart should fetch Workers Activity Widget Statistics Start" name="statistics epics fetchWorkersActivityWidgetStatisticsStart should fetch Workers Activity Widget Statistics Start" time="0.013">
    </testcase>
    <testcase classname="statistics epics fetchWorkersActivityWidgetStatisticsStart should catch errors" name="statistics epics fetchWorkersActivityWidgetStatisticsStart should catch errors" time="0.021">
    </testcase>
    <testcase classname="statistics epics fetchNewAssignedWorkersWidgetStatisticsStart should fetch new assigned workers widget statistics start" name="statistics epics fetchNewAssignedWorkersWidgetStatisticsStart should fetch new assigned workers widget statistics start" time="0.011">
    </testcase>
    <testcase classname="statistics epics fetchNewAssignedWorkersWidgetStatisticsStart should catch errors" name="statistics epics fetchNewAssignedWorkersWidgetStatisticsStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchProjectAccessControlSystemWidgetStatisticsStart should fetch project acs widget start" name="statistics epics fetchProjectAccessControlSystemWidgetStatisticsStart should fetch project acs widget start" time="0.014">
    </testcase>
    <testcase classname="statistics epics fetchProjectAccessControlSystemWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectAccessControlSystemWidgetStatisticsStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchProjectBadgePrintingSystemWidgetStatisticsStart should fetch project bps widget start" name="statistics epics fetchProjectBadgePrintingSystemWidgetStatisticsStart should fetch project bps widget start" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchProjectBadgePrintingSystemWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectBadgePrintingSystemWidgetStatisticsStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchProjectWorkersActivityWidgetStatisticsStart should fetch project workers activity widget start" name="statistics epics fetchProjectWorkersActivityWidgetStatisticsStart should fetch project workers activity widget start" time="0.01">
    </testcase>
    <testcase classname="statistics epics fetchProjectWorkersActivityWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectWorkersActivityWidgetStatisticsStart should catch errors" time="0.005">
    </testcase>
    <testcase classname="statistics epics fetchProjectClientsWidgetStatisticsStart should fetch project client widget start" name="statistics epics fetchProjectClientsWidgetStatisticsStart should fetch project client widget start" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchProjectClientsWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectClientsWidgetStatisticsStart should catch errors" time="0.003">
    </testcase>
    <testcase classname="statistics epics fetchActiveLocationsWidgetStatisticsStart should fetch project locations widget start" name="statistics epics fetchActiveLocationsWidgetStatisticsStart should fetch project locations widget start" time="0.012">
    </testcase>
    <testcase classname="statistics epics fetchActiveLocationsWidgetStatisticsStart should fetch client locations widget start" name="statistics epics fetchActiveLocationsWidgetStatisticsStart should fetch client locations widget start" time="0.018">
    </testcase>
    <testcase classname="statistics epics fetchActiveLocationsWidgetStatisticsStart should catch errors" name="statistics epics fetchActiveLocationsWidgetStatisticsStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="statistics epics fetchProjectBadgeLocationWidgetStatisticsStart should fetch project badge location widget start" name="statistics epics fetchProjectBadgeLocationWidgetStatisticsStart should fetch project badge location widget start" time="0.011">
    </testcase>
    <testcase classname="statistics epics fetchProjectBadgeLocationWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectBadgeLocationWidgetStatisticsStart should catch errors" time="0.004">
    </testcase>
    <testcase classname="statistics epics fetchProjectBadgeProjectWidgetStatisticsStart should fetch project badge project widget start" name="statistics epics fetchProjectBadgeProjectWidgetStatisticsStart should fetch project badge project widget start" time="0.018">
    </testcase>
    <testcase classname="statistics epics fetchProjectBadgeProjectWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectBadgeProjectWidgetStatisticsStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="statistics epics fetchProjectRevenueWidgetStatisticsStart should fetch project acs widget start" name="statistics epics fetchProjectRevenueWidgetStatisticsStart should fetch project acs widget start" time="0.018">
    </testcase>
    <testcase classname="statistics epics fetchProjectRevenueWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectRevenueWidgetStatisticsStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchProjectTopTenWidgetStatisticsStart should fetch project acs widget start" name="statistics epics fetchProjectTopTenWidgetStatisticsStart should fetch project acs widget start" time="0.013">
    </testcase>
    <testcase classname="statistics epics fetchProjectTopTenWidgetStatisticsStart should catch errors" name="statistics epics fetchProjectTopTenWidgetStatisticsStart should catch errors" time="0.006">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByProjectStart should fetch workers by project widget start" name="statistics epics fetchWorkersByProjectStart should fetch workers by project widget start" time="0.024">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByProjectStart should catch errors" name="statistics epics fetchWorkersByProjectStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByClientStart should fetch workers by client widget start" name="statistics epics fetchWorkersByClientStart should fetch workers by client widget start" time="0.014">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByClientStart should catch errors" name="statistics epics fetchWorkersByClientStart should catch errors" time="0.009">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByLocationStart should fetch workers by location widget start" name="statistics epics fetchWorkersByLocationStart should fetch workers by location widget start" time="0.019">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByLocationStart should catch errors" name="statistics epics fetchWorkersByLocationStart should catch errors" time="0.019">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByJobDataStart should fetch workers by job data widget start filtered by job title" name="statistics epics fetchWorkersByJobDataStart should fetch workers by job data widget start filtered by job title" time="0.01">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByJobDataStart should fetch workers by job data widget start filtered by trade" name="statistics epics fetchWorkersByJobDataStart should fetch workers by job data widget start filtered by trade" time="0.005">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByJobDataStart should fetch workers by job data widget start filtered by work experience" name="statistics epics fetchWorkersByJobDataStart should fetch workers by job data widget start filtered by work experience" time="0.019">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByJobDataStart should catch errors" name="statistics epics fetchWorkersByJobDataStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByTradesMinorityStart should fetch workers by trades minority widget start" name="statistics epics fetchWorkersByTradesMinorityStart should fetch workers by trades minority widget start" time="0.014">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByTradesMinorityStart should catch errors" name="statistics epics fetchWorkersByTradesMinorityStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByTradesNonMinorityStart should fetch workers by trades non minority widget start" name="statistics epics fetchWorkersByTradesNonMinorityStart should fetch workers by trades non minority widget start" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByTradesNonMinorityStart should catch errors" name="statistics epics fetchWorkersByTradesNonMinorityStart should catch errors" time="0.009">
    </testcase>
    <testcase classname="statistics epics fetchWorkersCertificationsStart should fetch workers certifications widget start" name="statistics epics fetchWorkersCertificationsStart should fetch workers certifications widget start" time="0.006">
    </testcase>
    <testcase classname="statistics epics fetchWorkersCertificationsStart should catch errors" name="statistics epics fetchWorkersCertificationsStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchWorkersObservationsStart should fetch workers certifications widget start" name="statistics epics fetchWorkersObservationsStart should fetch workers certifications widget start" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchWorkersObservationsStart should catch errors" name="statistics epics fetchWorkersObservationsStart should catch errors" time="0.018">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByDemographicDataStart should fetch workers by demographic data by language widget start" name="statistics epics fetchWorkersByDemographicDataStart should fetch workers by demographic data by language widget start" time="0.013">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByDemographicDataStart should fetch workers by demographic data widget start" name="statistics epics fetchWorkersByDemographicDataStart should fetch workers by demographic data widget start" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByDemographicDataStart should catch errors" name="statistics epics fetchWorkersByDemographicDataStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="statistics epics fetchWorkersTrainingsStart should fetch workers trainings data widget start" name="statistics epics fetchWorkersTrainingsStart should fetch workers trainings data widget start" time="0.007">
    </testcase>
    <testcase classname="statistics epics fetchWorkersTrainingsStart should catch errors" name="statistics epics fetchWorkersTrainingsStart should catch errors" time="0.006">
    </testcase>
    <testcase classname="statistics epics fetchWorkersNewWorkersStart should fetch workers new workers widget start" name="statistics epics fetchWorkersNewWorkersStart should fetch workers new workers widget start" time="0.019">
    </testcase>
    <testcase classname="statistics epics fetchWorkersNewWorkersStart should catch errors" name="statistics epics fetchWorkersNewWorkersStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="statistics epics fetchClientDetailStatisticsStart should fetch client detail statistics start" name="statistics epics fetchClientDetailStatisticsStart should fetch client detail statistics start" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchClientDetailStatisticsStart should catch errors" name="statistics epics fetchClientDetailStatisticsStart should catch errors" time="0.009">
    </testcase>
    <testcase classname="statistics epics fetchProjectDetailStatisticsStart should fetch project detail statistics start" name="statistics epics fetchProjectDetailStatisticsStart should fetch project detail statistics start" time="0.007">
    </testcase>
    <testcase classname="statistics epics fetchProjectDetailStatisticsStart should catch errors" name="statistics epics fetchProjectDetailStatisticsStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchClientsByTradesStart should fetch client detail statistics start" name="statistics epics fetchClientsByTradesStart should fetch client detail statistics start" time="0.013">
    </testcase>
    <testcase classname="statistics epics fetchClientsByTradesStart should catch errors" name="statistics epics fetchClientsByTradesStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="statistics epics fetchClientRevenueWidgetStatisticsStart should fetch client revenue statistics start" name="statistics epics fetchClientRevenueWidgetStatisticsStart should fetch client revenue statistics start" time="0.005">
    </testcase>
    <testcase classname="statistics epics fetchClientRevenueWidgetStatisticsStart should catch errors" name="statistics epics fetchClientRevenueWidgetStatisticsStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="statistics epics fetchClientTopTenWidgetStatisticsStart should fetch client top ten statistics start" name="statistics epics fetchClientTopTenWidgetStatisticsStart should fetch client top ten statistics start" time="0.014">
    </testcase>
    <testcase classname="statistics epics fetchClientTopTenWidgetStatisticsStart should catch errors" name="statistics epics fetchClientTopTenWidgetStatisticsStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByEthnicityStart should fetch workers by ethnicity start" name="statistics epics fetchWorkersByEthnicityStart should fetch workers by ethnicity start" time="0.012">
    </testcase>
    <testcase classname="statistics epics fetchWorkersByEthnicityStart should catch errors" name="statistics epics fetchWorkersByEthnicityStart should catch errors" time="0.018">
    </testcase>
    <testcase classname="statistics epics fetchClientWorkersActivityWidgetStatisticsStart should fetch Workers Activity Widget Statistics Start" name="statistics epics fetchClientWorkersActivityWidgetStatisticsStart should fetch Workers Activity Widget Statistics Start" time="0.017">
    </testcase>
    <testcase classname="statistics epics fetchClientWorkersActivityWidgetStatisticsStart should catch errors" name="statistics epics fetchClientWorkersActivityWidgetStatisticsStart should catch errors" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="DashboardProject Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:32" time="1.176" tests="4">
    <testcase classname="DashboardProject Component should render" name="DashboardProject Component should render" time="0.2">
    </testcase>
    <testcase classname="DashboardProject Component should clear statistics" name="DashboardProject Component should clear statistics" time="0.14">
    </testcase>
    <testcase classname="DashboardProject Component should change state filter" name="DashboardProject Component should change state filter" time="0.235">
    </testcase>
    <testcase classname="DashboardProject Component should change period filter" name="DashboardProject Component should change period filter" time="0.139">
    </testcase>
  </testsuite>
  <testsuite name="InventoryList" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:34" time="1.982" tests="5">
    <testcase classname="InventoryList should render access control system tab" name="InventoryList should render access control system tab" time="0.13">
    </testcase>
    <testcase classname="InventoryList should render badge printing system tab" name="InventoryList should render badge printing system tab" time="0.146">
    </testcase>
    <testcase classname="InventoryList should open drawer" name="InventoryList should open drawer" time="0.361">
    </testcase>
    <testcase classname="InventoryList should close drawer on navigate away" name="InventoryList should close drawer on navigate away" time="0.852">
    </testcase>
    <testcase classname="InventoryList should fetch inventory statistics" name="InventoryList should fetch inventory statistics" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="worker epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:36" time="0.86" tests="46">
    <testcase classname="worker epics saveWorkerStart should get epic for save worker" name="worker epics saveWorkerStart should get epic for save worker" time="0.013">
    </testcase>
    <testcase classname="worker epics saveWorkerStart should get epic for save self worker" name="worker epics saveWorkerStart should get epic for save self worker" time="0.021">
    </testcase>
    <testcase classname="worker epics saveWorkerStart should catch errors" name="worker epics saveWorkerStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="worker epics saveWorkerStart should catch existing worker error" name="worker epics saveWorkerStart should catch existing worker error" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchWorkerActivityListStart should get epic for fetch workers activity list start" name="worker epics fetchWorkerActivityListStart should get epic for fetch workers activity list start" time="0.003">
    </testcase>
    <testcase classname="worker epics fetchWorkerActivityListStart should catch errors" name="worker epics fetchWorkerActivityListStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="worker epics fetchWorkerObservationListStart should get epic for fetch workers observation list start" name="worker epics fetchWorkerObservationListStart should get epic for fetch workers observation list start" time="0.009">
    </testcase>
    <testcase classname="worker epics fetchWorkerObservationListStart should catch errors" name="worker epics fetchWorkerObservationListStart should catch errors" time="0.006">
    </testcase>
    <testcase classname="worker epics fetchWorkerStart should get epic for workers fetch worker" name="worker epics fetchWorkerStart should get epic for workers fetch worker" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchWorkerStart should catch errors" name="worker epics fetchWorkerStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchWorkerObservationStart should get epic for workers fetch worker observation" name="worker epics fetchWorkerObservationStart should get epic for workers fetch worker observation" time="0.019">
    </testcase>
    <testcase classname="worker epics fetchWorkerObservationStart should catch errors" name="worker epics fetchWorkerObservationStart should catch errors" time="0.013">
    </testcase>
    <testcase classname="worker epics updateWorkerStart should get epic for update worker" name="worker epics updateWorkerStart should get epic for update worker" time="0.021">
    </testcase>
    <testcase classname="worker epics updateWorkerStart should catch errors" name="worker epics updateWorkerStart should catch errors" time="0.003">
    </testcase>
    <testcase classname="worker epics fetchWorkerListStart should get epic for workers fetch worker list" name="worker epics fetchWorkerListStart should get epic for workers fetch worker list" time="0.008">
    </testcase>
    <testcase classname="worker epics fetchWorkerListStart should get epic for workers fetch self worker list" name="worker epics fetchWorkerListStart should get epic for workers fetch self worker list" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchWorkerListStart should catch errors" name="worker epics fetchWorkerListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchEthnicityListStart should get epic for worker fetch ethnicities" name="worker epics fetchEthnicityListStart should get epic for worker fetch ethnicities" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchEthnicityListStart should catch errors" name="worker epics fetchEthnicityListStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="worker epics fetchLanguageListStart should get epic for worker fetch languages" name="worker epics fetchLanguageListStart should get epic for worker fetch languages" time="0.005">
    </testcase>
    <testcase classname="worker epics fetchLanguageListStart should catch errors" name="worker epics fetchLanguageListStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="worker epics fetchJobTitleListStart should get epic for worker fetch job titles" name="worker epics fetchJobTitleListStart should get epic for worker fetch job titles" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchJobTitleListStart should catch errors" name="worker epics fetchJobTitleListStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="worker epics fetchTradeStatusListStart should get epic for worker fetch trade statuses" name="worker epics fetchTradeStatusListStart should get epic for worker fetch trade statuses" time="0.009">
    </testcase>
    <testcase classname="worker epics fetchTradeStatusListStart should catch errors" name="worker epics fetchTradeStatusListStart should catch errors" time="0.02">
    </testcase>
    <testcase classname="worker epics fetchSkilledTradeListStart should get epic for worker fetch skilled trades" name="worker epics fetchSkilledTradeListStart should get epic for worker fetch skilled trades" time="0.013">
    </testcase>
    <testcase classname="worker epics fetchSkilledTradeListStart should catch errors" name="worker epics fetchSkilledTradeListStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="worker epics fetchWorkerProjectListStart should get epic for worker fetch worker project list" name="worker epics fetchWorkerProjectListStart should get epic for worker fetch worker project list" time="0.017">
    </testcase>
    <testcase classname="worker epics fetchWorkerProjectListStart should catch errors" name="worker epics fetchWorkerProjectListStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="worker epics fetchIdentificationTypeListStart should get epic for worker fetch identification type" name="worker epics fetchIdentificationTypeListStart should get epic for worker fetch identification type" time="0.016">
    </testcase>
    <testcase classname="worker epics fetchIdentificationTypeListStart should catch errors" name="worker epics fetchIdentificationTypeListStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="worker epics fetchSocJobTitleListStart should get epic for worker fetch soc job titles" name="worker epics fetchSocJobTitleListStart should get epic for worker fetch soc job titles" time="0.012">
    </testcase>
    <testcase classname="worker epics fetchSocJobTitleListStart should catch errors" name="worker epics fetchSocJobTitleListStart should catch errors" time="0.008">
    </testcase>
    <testcase classname="worker epics fetchProjectWorkerListStart should get epic for worker project list start" name="worker epics fetchProjectWorkerListStart should get epic for worker project list start" time="0.026">
    </testcase>
    <testcase classname="worker epics fetchProjectWorkerListStart should catch errors" name="worker epics fetchProjectWorkerListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="worker epics fetchWorkerProjectAssignListStart should get epic for worker assign list start" name="worker epics fetchWorkerProjectAssignListStart should get epic for worker assign list start" time="0.016">
    </testcase>
    <testcase classname="worker epics fetchWorkerProjectAssignListStart should catch errors" name="worker epics fetchWorkerProjectAssignListStart should catch errors" time="0.003">
    </testcase>
    <testcase classname="worker epics fetchClientWorkerListStart should get epic for clients fetch worker list" name="worker epics fetchClientWorkerListStart should get epic for clients fetch worker list" time="0.014">
    </testcase>
    <testcase classname="worker epics fetchClientWorkerListStart should catch errors" name="worker epics fetchClientWorkerListStart should catch errors" time="0.003">
    </testcase>
    <testcase classname="worker epics fetchConsentFormStart should get epic for worker fetch consentForm" name="worker epics fetchConsentFormStart should get epic for worker fetch consentForm" time="0.011">
    </testcase>
    <testcase classname="worker epics fetchConsentFormStart should get epic for worker fetch editable consentForm" name="worker epics fetchConsentFormStart should get epic for worker fetch editable consentForm" time="0.017">
    </testcase>
    <testcase classname="worker epics fetchConsentFormStart should catch errors" name="worker epics fetchConsentFormStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="worker epics saveConsentFormStart should get epic for workers save consent form" name="worker epics saveConsentFormStart should get epic for workers save consent form" time="0.016">
    </testcase>
    <testcase classname="worker epics saveConsentFormStart should catch errors" name="worker epics saveConsentFormStart should catch errors" time="0.013">
    </testcase>
    <testcase classname="worker epics downloadConsentFormStart should get epic for download consent form" name="worker epics downloadConsentFormStart should get epic for download consent form" time="0.004">
    </testcase>
    <testcase classname="worker epics downloadConsentFormStart should catch errors" name="worker epics downloadConsentFormStart should catch errors" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="user epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:37" time="0.671" tests="38">
    <testcase classname="user epics userSignUp should get epic for user sign up" name="user epics userSignUp should get epic for user sign up" time="0.018">
    </testcase>
    <testcase classname="user epics userSignUp should catch errors" name="user epics userSignUp should catch errors" time="0.014">
    </testcase>
    <testcase classname="user epics validateToken should get epic for user validateToken" name="user epics validateToken should get epic for user validateToken" time="0.015">
    </testcase>
    <testcase classname="user epics validateToken should catch errors with service response" name="user epics validateToken should catch errors with service response" time="0.009">
    </testcase>
    <testcase classname="user epics validateToken should catch errors default response" name="user epics validateToken should catch errors default response" time="0.007">
    </testcase>
    <testcase classname="user epics fetchClientUserListStart should get epic for clients fetch user list" name="user epics fetchClientUserListStart should get epic for clients fetch user list" time="0.004">
    </testcase>
    <testcase classname="user epics fetchClientUserListStart should catch errors" name="user epics fetchClientUserListStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="user epics fetchClientUserListStart should get epic for clients fetch user list" name="user epics fetchClientUserListStart should get epic for clients fetch user list" time="0.004">
    </testcase>
    <testcase classname="user epics fetchClientUserListStart should catch errors" name="user epics fetchClientUserListStart should catch errors" time="0.013">
    </testcase>
    <testcase classname="user epics fetchProjectUserListStart should get epic for clients fetch user list" name="user epics fetchProjectUserListStart should get epic for clients fetch user list" time="0.016">
    </testcase>
    <testcase classname="user epics fetchProjectUserListStart should catch errors" name="user epics fetchProjectUserListStart should catch errors" time="0.008">
    </testcase>
    <testcase classname="user epics fetchUserProjectStart should get epic for user fetch project user list" name="user epics fetchUserProjectStart should get epic for user fetch project user list" time="0.005">
    </testcase>
    <testcase classname="user epics fetchUserProjectStart should catch errors" name="user epics fetchUserProjectStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="user epics fetchRoleListStart should get epic for user fetch role list" name="user epics fetchRoleListStart should get epic for user fetch role list" time="0.015">
    </testcase>
    <testcase classname="user epics fetchRoleListStart should catch errors" name="user epics fetchRoleListStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="user epics saveUserStart should get epic for user fetch role list" name="user epics saveUserStart should get epic for user fetch role list" time="0.016">
    </testcase>
    <testcase classname="user epics saveUserStart should catch errors" name="user epics saveUserStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="user epics resetPasswordStart should get epic for user reset password" name="user epics resetPasswordStart should get epic for user reset password" time="0.019">
    </testcase>
    <testcase classname="user epics resetPasswordStart should catch errors" name="user epics resetPasswordStart should catch errors" time="0.003">
    </testcase>
    <testcase classname="user epics confirmResetPasswordStart should get epic for user reset password" name="user epics confirmResetPasswordStart should get epic for user reset password" time="0.013">
    </testcase>
    <testcase classname="user epics confirmResetPasswordStart should catch errors" name="user epics confirmResetPasswordStart should catch errors" time="0.005">
    </testcase>
    <testcase classname="user epics changePasswordStart should get epic for user change password" name="user epics changePasswordStart should get epic for user change password" time="0.01">
    </testcase>
    <testcase classname="user epics changePasswordStart should catch errors" name="user epics changePasswordStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="user epics updateProfileStart should get epic for user update profile" name="user epics updateProfileStart should get epic for user update profile" time="0.01">
    </testcase>
    <testcase classname="user epics updateProfileStart should get epic for user update profile for client admin" name="user epics updateProfileStart should get epic for user update profile for client admin" time="0.004">
    </testcase>
    <testcase classname="user epics updateProfileStart should catch errors" name="user epics updateProfileStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="user epics fetchAccountStart should get epic for user fetch account" name="user epics fetchAccountStart should get epic for user fetch account" time="0.015">
    </testcase>
    <testcase classname="user epics fetchAccountStart should get epic for user fetch company user account" name="user epics fetchAccountStart should get epic for user fetch company user account" time="0.017">
    </testcase>
    <testcase classname="user epics fetchAccountStart should catch errors" name="user epics fetchAccountStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="user epics updateProfilePhotoStart should get epic for user update profile photo" name="user epics updateProfilePhotoStart should get epic for user update profile photo" time="0.01">
    </testcase>
    <testcase classname="user epics uploadProfilePhotoStart should get epic for user upload profile photo" name="user epics uploadProfilePhotoStart should get epic for user upload profile photo" time="0.003">
    </testcase>
    <testcase classname="user epics uploadProfilePhotoStart should catch errors" name="user epics uploadProfilePhotoStart should catch errors" time="0.021">
    </testcase>
    <testcase classname="user epics fetchStatusProcore should get epic for status of Procore" name="user epics fetchStatusProcore should get epic for status of Procore" time="0.015">
    </testcase>
    <testcase classname="user epics fetchStatusProcore should catch errors" name="user epics fetchStatusProcore should catch errors" time="0.015">
    </testcase>
    <testcase classname="user epics connectProcore should get epic for connect Procore" name="user epics connectProcore should get epic for connect Procore" time="0.018">
    </testcase>
    <testcase classname="user epics connectProcore should catch errors" name="user epics connectProcore should catch errors" time="0.01">
    </testcase>
    <testcase classname="user epics disconnectProcore should get epic for disconnectProcore" name="user epics disconnectProcore should get epic for disconnectProcore" time="0.015">
    </testcase>
    <testcase classname="user epics disconnectProcore should catch errors" name="user epics disconnectProcore should catch errors" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Settings" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:37" time="1.429" tests="3">
    <testcase classname="Settings should render" name="Settings should render" time="0.173">
    </testcase>
    <testcase classname="Settings should change filter option" name="Settings should change filter option" time="0.205">
    </testcase>
    <testcase classname="Settings should render tabs" name="Settings should render tabs" time="0.329">
    </testcase>
  </testsuite>
  <testsuite name="invoice epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:39" time="0.835" tests="27">
    <testcase classname="invoice epics fetchServiceTypeListStart should get epic for project fetch service type list" name="invoice epics fetchServiceTypeListStart should get epic for project fetch service type list" time="0.019">
    </testcase>
    <testcase classname="invoice epics fetchServiceTypeListStart should catch errors" name="invoice epics fetchServiceTypeListStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="invoice epics fetchInvoiceListStart should get epic for invoice fetch invoice list" name="invoice epics fetchInvoiceListStart should get epic for invoice fetch invoice list" time="0.017">
    </testcase>
    <testcase classname="invoice epics fetchInvoiceListStart should catch errors" name="invoice epics fetchInvoiceListStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="invoice epics saveInvoiceStart should get epic for save invoice" name="invoice epics saveInvoiceStart should get epic for save invoice" time="0.017">
    </testcase>
    <testcase classname="invoice epics saveInvoiceStart should get epic for save invoice and confirm" name="invoice epics saveInvoiceStart should get epic for save invoice and confirm" time="0.01">
    </testcase>
    <testcase classname="invoice epics saveInvoiceStart should catch errors" name="invoice epics saveInvoiceStart should catch errors" time="0.007">
    </testcase>
    <testcase classname="invoice epics editInvoiceStart should get epic for edit invoice" name="invoice epics editInvoiceStart should get epic for edit invoice" time="0.013">
    </testcase>
    <testcase classname="invoice epics editInvoiceStart should get epic for edit invoice and confirm" name="invoice epics editInvoiceStart should get epic for edit invoice and confirm" time="0.017">
    </testcase>
    <testcase classname="invoice epics editInvoiceStart should catch errors" name="invoice epics editInvoiceStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="invoice epics fetchInvoiceSummaryStart should get epic for invoice fetch invoice summary" name="invoice epics fetchInvoiceSummaryStart should get epic for invoice fetch invoice summary" time="0.015">
    </testcase>
    <testcase classname="invoice epics fetchInvoiceSummaryStart should catch errors" name="invoice epics fetchInvoiceSummaryStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="invoice epics fetchInvoiceStart should get epic for invoice fetch invoice" name="invoice epics fetchInvoiceStart should get epic for invoice fetch invoice" time="0.017">
    </testcase>
    <testcase classname="invoice epics fetchInvoiceStart should catch errors" name="invoice epics fetchInvoiceStart should catch errors" time="0.006">
    </testcase>
    <testcase classname="invoice epics deleteInvoiceStart should get epic for delete invoice" name="invoice epics deleteInvoiceStart should get epic for delete invoice" time="0.007">
    </testcase>
    <testcase classname="invoice epics deleteInvoiceStart should catch errors" name="invoice epics deleteInvoiceStart should catch errors" time="0.003">
    </testcase>
    <testcase classname="invoice epics markInvoiceAsPaidStart should get epic for mark as paid invoice" name="invoice epics markInvoiceAsPaidStart should get epic for mark as paid invoice" time="0.013">
    </testcase>
    <testcase classname="invoice epics markInvoiceAsPaidStart should catch errors" name="invoice epics markInvoiceAsPaidStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="invoice epics payInvoiceStart should get epic for pay invoice" name="invoice epics payInvoiceStart should get epic for pay invoice" time="0.021">
    </testcase>
    <testcase classname="invoice epics payInvoiceStart should catch errors" name="invoice epics payInvoiceStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="invoice epics confirmInvoiceStart should get epic for confirm invoice" name="invoice epics confirmInvoiceStart should get epic for confirm invoice" time="0.046">
    </testcase>
    <testcase classname="invoice epics confirmInvoiceStart should get epic for confirm invoice without toast" name="invoice epics confirmInvoiceStart should get epic for confirm invoice without toast" time="0.01">
    </testcase>
    <testcase classname="invoice epics confirmInvoiceStart should catch errors" name="invoice epics confirmInvoiceStart should catch errors" time="0.013">
    </testcase>
    <testcase classname="invoice epics markInvoiceAsVoidStart should get epic for mark as void invoice" name="invoice epics markInvoiceAsVoidStart should get epic for mark as void invoice" time="0.045">
    </testcase>
    <testcase classname="invoice epics markInvoiceAsVoidStart should catch errors" name="invoice epics markInvoiceAsVoidStart should catch errors" time="0.106">
    </testcase>
    <testcase classname="invoice epics downloadInvoiceStart should get epic for download invoice" name="invoice epics downloadInvoiceStart should get epic for download invoice" time="0.059">
    </testcase>
    <testcase classname="invoice epics downloadInvoiceStart should catch errors" name="invoice epics downloadInvoiceStart should catch errors" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="general epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:40" time="1.087" tests="6">
    <testcase classname="general epics addToast should get epic for addToast" name="general epics addToast should get epic for addToast" time="0.522">
    </testcase>
    <testcase classname="general epics destroyPrinter should get epic for destroy printer" name="general epics destroyPrinter should get epic for destroy printer" time="0.021">
    </testcase>
    <testcase classname="general epics fetchCountryListStart should get epic for get country list" name="general epics fetchCountryListStart should get epic for get country list" time="0.018">
    </testcase>
    <testcase classname="general epics fetchCountryListStart should catch errors" name="general epics fetchCountryListStart should catch errors" time="0.018">
    </testcase>
    <testcase classname="general epics fetchTimeZoneListStart should get epic for project fetch time zones" name="general epics fetchTimeZoneListStart should get epic for project fetch time zones" time="0.015">
    </testcase>
    <testcase classname="general epics fetchTimeZoneListStart should catch default error" name="general epics fetchTimeZoneListStart should catch default error" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="AuthService" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:41" time="0.356" tests="9">
    <testcase classname="AuthService configure should call configure from serviceProvider" name="AuthService configure should call configure from serviceProvider" time="0.001">
    </testcase>
    <testcase classname="AuthService getSession should call currentSession from serviceProvider" name="AuthService getSession should call currentSession from serviceProvider" time="0.001">
    </testcase>
    <testcase classname="AuthService getSession should catch error" name="AuthService getSession should catch error" time="0.002">
    </testcase>
    <testcase classname="AuthService isSignedIn should call currentAuthenticatedUser from serviceProvider" name="AuthService isSignedIn should call currentAuthenticatedUser from serviceProvider" time="0.001">
    </testcase>
    <testcase classname="AuthService isSignedIn should catch error" name="AuthService isSignedIn should catch error" time="0.001">
    </testcase>
    <testcase classname="AuthService signIn should call signIn from serviceProvider" name="AuthService signIn should call signIn from serviceProvider" time="0.001">
    </testcase>
    <testcase classname="AuthService signIn should catch error should throw an error message for auth code" name="AuthService signIn should catch error should throw an error message for auth code" time="0.001">
    </testcase>
    <testcase classname="AuthService signIn should catch error should throw default error message" name="AuthService signIn should catch error should throw default error message" time="0.001">
    </testcase>
    <testcase classname="AuthService should call signOut from serviceProvider should signIn with items" name="AuthService should call signOut from serviceProvider should signIn with items" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AutocompleteService" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:41" time="0.147" tests="4">
    <testcase classname="AutocompleteService initMap should create a map" name="AutocompleteService initMap should create a map" time="0.004">
    </testcase>
    <testcase classname="AutocompleteService initMap should create a map with markers" name="AutocompleteService initMap should create a map with markers" time="0.001">
    </testcase>
    <testcase classname="AutocompleteService getResponse should call onResponse with address" name="AutocompleteService getResponse should call onResponse with address" time="0.001">
    </testcase>
    <testcase classname="AutocompleteService replaceResponse should call onResponse with query" name="AutocompleteService replaceResponse should call onResponse with query" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="badge epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:42" time="0.647" tests="29">
    <testcase classname="badge epics fetchBadgeStart should get epic for fetch badge" name="badge epics fetchBadgeStart should get epic for fetch badge" time="0.021">
    </testcase>
    <testcase classname="badge epics fetchBadgeStart should catch errors" name="badge epics fetchBadgeStart should catch errors" time="0.005">
    </testcase>
    <testcase classname="badge epics activateBadgeStart should get epic for approve badge" name="badge epics activateBadgeStart should get epic for approve badge" time="0.012">
    </testcase>
    <testcase classname="badge epics activateBadgeStart should catch errors" name="badge epics activateBadgeStart should catch errors" time="0.013">
    </testcase>
    <testcase classname="badge epics revokeBadgeStart should get epic for revoke badge" name="badge epics revokeBadgeStart should get epic for revoke badge" time="0.014">
    </testcase>
    <testcase classname="badge epics revokeBadgeStart should catch errors" name="badge epics revokeBadgeStart should catch errors" time="0.003">
    </testcase>
    <testcase classname="badge epics deactivateBadgeStart should get epic for deactive badge" name="badge epics deactivateBadgeStart should get epic for deactive badge" time="0.013">
    </testcase>
    <testcase classname="badge epics deactivateBadgeStart should catch errors" name="badge epics deactivateBadgeStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="badge epics fetchProjectBadgeVisitorListStart should get epic for project badge visitor list" name="badge epics fetchProjectBadgeVisitorListStart should get epic for project badge visitor list" time="0.009">
    </testcase>
    <testcase classname="badge epics fetchProjectBadgeVisitorListStart should catch errors" name="badge epics fetchProjectBadgeVisitorListStart should catch errors" time="0.007">
    </testcase>
    <testcase classname="badge epics fetchBadgeVisitorStart should get epic for badge visitor" name="badge epics fetchBadgeVisitorStart should get epic for badge visitor" time="0.019">
    </testcase>
    <testcase classname="badge epics fetchBadgeVisitorStart should catch errors" name="badge epics fetchBadgeVisitorStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="badge epics saveProjectVisitorBadgeStart should get epic for project save badge visitor" name="badge epics saveProjectVisitorBadgeStart should get epic for project save badge visitor" time="0.013">
    </testcase>
    <testcase classname="badge epics saveProjectVisitorBadgeStart should catch errors" name="badge epics saveProjectVisitorBadgeStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="badge epics assignBadgeVisitorStart should get epic for badge assign project badge visitor start" name="badge epics assignBadgeVisitorStart should get epic for badge assign project badge visitor start" time="0.016">
    </testcase>
    <testcase classname="badge epics assignBadgeVisitorStart should get epic for badge update project badge visitor start" name="badge epics assignBadgeVisitorStart should get epic for badge update project badge visitor start" time="0.013">
    </testcase>
    <testcase classname="badge epics assignBadgeVisitorStart should catch errors" name="badge epics assignBadgeVisitorStart should catch errors" time="0.02">
    </testcase>
    <testcase classname="badge epics unassignBadgeVisitorStart should get epic for badge unassign project badge visitor start" name="badge epics unassignBadgeVisitorStart should get epic for badge unassign project badge visitor start" time="0.013">
    </testcase>
    <testcase classname="badge epics unassignBadgeVisitorStart should catch errors" name="badge epics unassignBadgeVisitorStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="badge epics printWorkerBadgeStart should get epic for badge print worker badge start" name="badge epics printWorkerBadgeStart should get epic for badge print worker badge start" time="0.014">
    </testcase>
    <testcase classname="badge epics printWorkerBadgeStart should catch errors" name="badge epics printWorkerBadgeStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="badge epics printVisitorBadgeStart should get epic for badge print visitor badge start" name="badge epics printVisitorBadgeStart should get epic for badge print visitor badge start" time="0.005">
    </testcase>
    <testcase classname="badge epics printVisitorBadgeStart should catch errors" name="badge epics printVisitorBadgeStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="badge epics updateBadgeStart should get epic for badge update start" name="badge epics updateBadgeStart should get epic for badge update start" time="0.017">
    </testcase>
    <testcase classname="badge epics updateBadgeStart should catch errors" name="badge epics updateBadgeStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="badge epics updateVisitorBadgeStart should get epic for visitor badge update start" name="badge epics updateVisitorBadgeStart should get epic for visitor badge update start" time="0.015">
    </testcase>
    <testcase classname="badge epics updateVisitorBadgeStart should catch errors" name="badge epics updateVisitorBadgeStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="badge epics fetchBadgeHistoryStart should get epic for badge history start" name="badge epics fetchBadgeHistoryStart should get epic for badge history start" time="0.018">
    </testcase>
    <testcase classname="badge epics fetchBadgeHistoryStart should catch errors" name="badge epics fetchBadgeHistoryStart should catch errors" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="access-control-system epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:42" time="0.525" tests="25">
    <testcase classname="access-control-system epics fetchAccessControlSystemListStart should get epic for access-control-system fetch accessControlSystem list start" name="access-control-system epics fetchAccessControlSystemListStart should get epic for access-control-system fetch accessControlSystem list start" time="0.007">
    </testcase>
    <testcase classname="access-control-system epics fetchAccessControlSystemListStart should catch errors" name="access-control-system epics fetchAccessControlSystemListStart should catch errors" time="0.004">
    </testcase>
    <testcase classname="access-control-system epics fetchAccessControlSystemSummaryStart should get epic for access-control-system fetch accessControlSystem summary start" name="access-control-system epics fetchAccessControlSystemSummaryStart should get epic for access-control-system fetch accessControlSystem summary start" time="0.005">
    </testcase>
    <testcase classname="access-control-system epics fetchAccessControlSystemSummaryStart should catch errors" name="access-control-system epics fetchAccessControlSystemSummaryStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="access-control-system epics fetchAccessControlSystemStart should get epic for access-control-system fetch access control system" name="access-control-system epics fetchAccessControlSystemStart should get epic for access-control-system fetch access control system" time="0.007">
    </testcase>
    <testcase classname="access-control-system epics fetchAccessControlSystemStart should catch errors" name="access-control-system epics fetchAccessControlSystemStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="access-control-system epics saveAccessControlSystemStart should get epic for save access control system access point" name="access-control-system epics saveAccessControlSystemStart should get epic for save access control system access point" time="0.012">
    </testcase>
    <testcase classname="access-control-system epics saveAccessControlSystemStart should get epic for save access control system handheld" name="access-control-system epics saveAccessControlSystemStart should get epic for save access control system handheld" time="0.017">
    </testcase>
    <testcase classname="access-control-system epics saveAccessControlSystemStart should catch errors" name="access-control-system epics saveAccessControlSystemStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="access-control-system epics updateAccessControlSystemStart should get epic for update access control system access point" name="access-control-system epics updateAccessControlSystemStart should get epic for update access control system access point" time="0.015">
    </testcase>
    <testcase classname="access-control-system epics updateAccessControlSystemStart should get epic for update access control system handheld" name="access-control-system epics updateAccessControlSystemStart should get epic for update access control system handheld" time="0.004">
    </testcase>
    <testcase classname="access-control-system epics updateAccessControlSystemStart should catch errors" name="access-control-system epics updateAccessControlSystemStart should catch errors" time="0.01">
    </testcase>
    <testcase classname="access-control-system epics deleteAccessControlSystemStart should get epic for access-control-system delete accessControlSystem start" name="access-control-system epics deleteAccessControlSystemStart should get epic for access-control-system delete accessControlSystem start" time="0.018">
    </testcase>
    <testcase classname="access-control-system epics deleteAccessControlSystemStart should delete accessControlSystem and navigate to a new page" name="access-control-system epics deleteAccessControlSystemStart should delete accessControlSystem and navigate to a new page" time="0.015">
    </testcase>
    <testcase classname="access-control-system epics deleteAccessControlSystemStart should catch errors" name="access-control-system epics deleteAccessControlSystemStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="access-control-system epics fetchProjectAccessControlSystemLocationListStart should get epic for fetch project acces control system summary" name="access-control-system epics fetchProjectAccessControlSystemLocationListStart should get epic for fetch project acces control system summary" time="0.015">
    </testcase>
    <testcase classname="access-control-system epics fetchProjectAccessControlSystemLocationListStart should catch default errors" name="access-control-system epics fetchProjectAccessControlSystemLocationListStart should catch default errors" time="0.003">
    </testcase>
    <testcase classname="access-control-system epics updateProjectAccessControlSystemStart should get epic for update project access control system location" name="access-control-system epics updateProjectAccessControlSystemStart should get epic for update project access control system location" time="0.011">
    </testcase>
    <testcase classname="access-control-system epics updateProjectAccessControlSystemStart should catch default errors" name="access-control-system epics updateProjectAccessControlSystemStart should catch default errors" time="0.017">
    </testcase>
    <testcase classname="access-control-system epics fetchProjectAccessControlSystemListStart should get epic for update project access control system location" name="access-control-system epics fetchProjectAccessControlSystemListStart should get epic for update project access control system location" time="0.02">
    </testcase>
    <testcase classname="access-control-system epics fetchProjectAccessControlSystemListStart should catch default errors" name="access-control-system epics fetchProjectAccessControlSystemListStart should catch default errors" time="0.012">
    </testcase>
    <testcase classname="access-control-system epics fetchAccessControlSystemProjectListStart should get epic for access-control-system fetch project related" name="access-control-system epics fetchAccessControlSystemProjectListStart should get epic for access-control-system fetch project related" time="0.008">
    </testcase>
    <testcase classname="access-control-system epics fetchAccessControlSystemProjectListStart should catch errors" name="access-control-system epics fetchAccessControlSystemProjectListStart should catch errors" time="0.019">
    </testcase>
    <testcase classname="access-control-system epics fetchProjectAccessControlSystemStart should get epic for access-control-system fetch assign project" name="access-control-system epics fetchProjectAccessControlSystemStart should get epic for access-control-system fetch assign project" time="0.015">
    </testcase>
    <testcase classname="access-control-system epics fetchProjectAccessControlSystemStart should catch errors" name="access-control-system epics fetchProjectAccessControlSystemStart should catch errors" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Forgot Password Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:43" time="0.506" tests="6">
    <testcase classname="Forgot Password Component should render" name="Forgot Password Component should render" time="0.069">
    </testcase>
    <testcase classname="Forgot Password Component should render loading" name="Forgot Password Component should render loading" time="0.036">
    </testcase>
    <testcase classname="Forgot Password Component should clear loading on unmount" name="Forgot Password Component should clear loading on unmount" time="0.029">
    </testcase>
    <testcase classname="Forgot Password Component should render message" name="Forgot Password Component should render message" time="0.022">
    </testcase>
    <testcase classname="Forgot Password Component should send reset password request" name="Forgot Password Component should send reset password request" time="0.042">
    </testcase>
    <testcase classname="Forgot Password Component should validate on blur" name="Forgot Password Component should validate on blur" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="badge-printer-system epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:43" time="0.468" tests="20">
    <testcase classname="badge-printer-system epics fetchBadgePrinterSystemStart should get epic for badge-printer-system fetch start" name="badge-printer-system epics fetchBadgePrinterSystemStart should get epic for badge-printer-system fetch start" time="0.006">
    </testcase>
    <testcase classname="badge-printer-system epics fetchBadgePrinterSystemStart should catch errors" name="badge-printer-system epics fetchBadgePrinterSystemStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="badge-printer-system epics saveBadgePrinterSystemStart should get epic for badge-printer-system save start" name="badge-printer-system epics saveBadgePrinterSystemStart should get epic for badge-printer-system save start" time="0.012">
    </testcase>
    <testcase classname="badge-printer-system epics saveBadgePrinterSystemStart should catch errors" name="badge-printer-system epics saveBadgePrinterSystemStart should catch errors" time="0.012">
    </testcase>
    <testcase classname="badge-printer-system epics updateBadgePrinterSystemStart should get epic for badge-printer-system update start" name="badge-printer-system epics updateBadgePrinterSystemStart should get epic for badge-printer-system update start" time="0.017">
    </testcase>
    <testcase classname="badge-printer-system epics updateBadgePrinterSystemStart should catch errors" name="badge-printer-system epics updateBadgePrinterSystemStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="badge-printer-system epics fetchBadgePrintingSystemSummaryStart should get epic for badge-printer-system summary start" name="badge-printer-system epics fetchBadgePrintingSystemSummaryStart should get epic for badge-printer-system summary start" time="0.016">
    </testcase>
    <testcase classname="badge-printer-system epics fetchBadgePrintingSystemSummaryStart should catch errors" name="badge-printer-system epics fetchBadgePrintingSystemSummaryStart should catch errors" time="0.009">
    </testcase>
    <testcase classname="badge-printer-system epics fetchBadgePrinterSystemListStart should get epic for badge-printer-system list start" name="badge-printer-system epics fetchBadgePrinterSystemListStart should get epic for badge-printer-system list start" time="0.006">
    </testcase>
    <testcase classname="badge-printer-system epics fetchBadgePrinterSystemListStart should catch errors" name="badge-printer-system epics fetchBadgePrinterSystemListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="badge-printer-system epics deleteBadgePrinterSystemStart should get epic for badge-printer-system delete start" name="badge-printer-system epics deleteBadgePrinterSystemStart should get epic for badge-printer-system delete start" time="0.017">
    </testcase>
    <testcase classname="badge-printer-system epics deleteBadgePrinterSystemStart should delete badgePrintingSystem and navigate to a new page" name="badge-printer-system epics deleteBadgePrinterSystemStart should delete badgePrintingSystem and navigate to a new page" time="0.015">
    </testcase>
    <testcase classname="badge-printer-system epics deleteBadgePrinterSystemStart should catch default errors" name="badge-printer-system epics deleteBadgePrinterSystemStart should catch default errors" time="0.016">
    </testcase>
    <testcase classname="badge-printer-system epics deleteBadgePrinterSystemStart should catch errors" name="badge-printer-system epics deleteBadgePrinterSystemStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="badge-printer-system epics fetchBadgePrintingSystemProjectListStart should get epic for badge-printer-system list start" name="badge-printer-system epics fetchBadgePrintingSystemProjectListStart should get epic for badge-printer-system list start" time="0.024">
    </testcase>
    <testcase classname="badge-printer-system epics fetchBadgePrintingSystemProjectListStart should catch errors" name="badge-printer-system epics fetchBadgePrintingSystemProjectListStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="badge-printer-system epics fetchProjectBadgePrintingSystemListStart should get epic for badge-printer-system project list start" name="badge-printer-system epics fetchProjectBadgePrintingSystemListStart should get epic for badge-printer-system project list start" time="0.015">
    </testcase>
    <testcase classname="badge-printer-system epics fetchProjectBadgePrintingSystemListStart should catch errors" name="badge-printer-system epics fetchProjectBadgePrintingSystemListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="badge-printer-system epics updateBadgePrintingSystemDateStart should get epic for badge-printer-system project list start" name="badge-printer-system epics updateBadgePrintingSystemDateStart should get epic for badge-printer-system project list start" time="0.016">
    </testcase>
    <testcase classname="badge-printer-system epics updateBadgePrintingSystemDateStart should catch errors" name="badge-printer-system epics updateBadgePrintingSystemDateStart should catch errors" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="generalUtils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:44" time="0.309" tests="89">
    <testcase classname="generalUtils Conversion to rem should convert 16px to 1rem" name="generalUtils Conversion to rem should convert 16px to 1rem" time="0">
    </testcase>
    <testcase classname="generalUtils Conversion to rem should convert 18px to 1.125rem" name="generalUtils Conversion to rem should convert 18px to 1.125rem" time="0.001">
    </testcase>
    <testcase classname="generalUtils should getQueryParamsFromString should convert to query params from empty string" name="generalUtils should getQueryParamsFromString should convert to query params from empty string" time="0.001">
    </testcase>
    <testcase classname="generalUtils should getQueryParamsFromString should conver to query params from valid string" name="generalUtils should getQueryParamsFromString should conver to query params from valid string" time="0">
    </testcase>
    <testcase classname="generalUtils should getQueryParamsFromString should catch error because is an invalid string" name="generalUtils should getQueryParamsFromString should catch error because is an invalid string" time="0.001">
    </testcase>
    <testcase classname="generalUtils Convert HEX to RGB should convert &quot;#000000&quot; to &quot;0, 0, 0&quot;" name="generalUtils Convert HEX to RGB should convert &quot;#000000&quot; to &quot;0, 0, 0&quot;" time="0.001">
    </testcase>
    <testcase classname="generalUtils Convert HEX to RGB should convert &quot;#000&quot; to &quot;0, 0, 0&quot;" name="generalUtils Convert HEX to RGB should convert &quot;#000&quot; to &quot;0, 0, 0&quot;" time="0.002">
    </testcase>
    <testcase classname="generalUtils Convert HEX to RGB should catch invalid value" name="generalUtils Convert HEX to RGB should catch invalid value" time="0.001">
    </testcase>
    <testcase classname="generalUtils Format bytes to number with unit of measurement should return &quot;0 B&quot; if is 0" name="generalUtils Format bytes to number with unit of measurement should return &quot;0 B&quot; if is 0" time="0.002">
    </testcase>
    <testcase classname="generalUtils Format bytes to number with unit of measurement should convert &quot;1089&quot; to &quot;1 KB&quot; if decimals=0" name="generalUtils Format bytes to number with unit of measurement should convert &quot;1089&quot; to &quot;1 KB&quot; if decimals=0" time="0">
    </testcase>
    <testcase classname="generalUtils Format bytes to number with unit of measurement should convert &quot;1089&quot; to &quot;1 KB&quot; if decimals=-1" name="generalUtils Format bytes to number with unit of measurement should convert &quot;1089&quot; to &quot;1 KB&quot; if decimals=-1" time="0.001">
    </testcase>
    <testcase classname="generalUtils Format bytes to number with unit of measurement should convert &quot;1000&quot; to &quot;1 KB&quot;" name="generalUtils Format bytes to number with unit of measurement should convert &quot;1000&quot; to &quot;1 KB&quot;" time="0">
    </testcase>
    <testcase classname="generalUtils Format bytes to number with unit of measurement should convert &quot;999999&quot; to &quot;1000 KB&quot;" name="generalUtils Format bytes to number with unit of measurement should convert &quot;999999&quot; to &quot;1000 KB&quot;" time="0.001">
    </testcase>
    <testcase classname="generalUtils Format bytes to number with unit of measurement should convert &quot;1000000&quot; to &quot;1 MB&quot;" name="generalUtils Format bytes to number with unit of measurement should convert &quot;1000000&quot; to &quot;1 MB&quot;" time="0">
    </testcase>
    <testcase classname="generalUtils isEmpty should return true for Object" name="generalUtils isEmpty should return true for Object" time="0">
    </testcase>
    <testcase classname="generalUtils isEmpty should return true for Array" name="generalUtils isEmpty should return true for Array" time="0.001">
    </testcase>
    <testcase classname="generalUtils isEmpty should return true for undefined" name="generalUtils isEmpty should return true for undefined" time="0">
    </testcase>
    <testcase classname="generalUtils isEmpty should return true for string" name="generalUtils isEmpty should return true for string" time="0.001">
    </testcase>
    <testcase classname="generalUtils isEmpty should return true for NaN number" name="generalUtils isEmpty should return true for NaN number" time="0">
    </testcase>
    <testcase classname="generalUtils isEmpty should return true for Array" name="generalUtils isEmpty should return true for Array" time="0">
    </testcase>
    <testcase classname="generalUtils isUUID should return false when invalid" name="generalUtils isUUID should return false when invalid" time="0.001">
    </testcase>
    <testcase classname="generalUtils isUUID should return true when valid" name="generalUtils isUUID should return true when valid" time="0">
    </testcase>
    <testcase classname="generalUtils injectScript should inject script into dom" name="generalUtils injectScript should inject script into dom" time="0.003">
    </testcase>
    <testcase classname="generalUtils injectScript should inject script into dom" name="generalUtils injectScript should inject script into dom" time="0.001">
    </testcase>
    <testcase classname="generalUtils disableFocus should add the class using-mouse to the body" name="generalUtils disableFocus should add the class using-mouse to the body" time="0.002">
    </testcase>
    <testcase classname="generalUtils enableFocusOnTab should return true when keycode is 9 (tab)" name="generalUtils enableFocusOnTab should return true when keycode is 9 (tab)" time="0.001">
    </testcase>
    <testcase classname="generalUtils enableFocusOnTab should return false when keycode is different than 9 (tab)" name="generalUtils enableFocusOnTab should return false when keycode is different than 9 (tab)" time="0">
    </testcase>
    <testcase classname="generalUtils getNextObjectItem should return next item value" name="generalUtils getNextObjectItem should return next item value" time="0.001">
    </testcase>
    <testcase classname="generalUtils getNextObjectItem should return last item when next of last is requested" name="generalUtils getNextObjectItem should return last item when next of last is requested" time="0.001">
    </testcase>
    <testcase classname="generalUtils getCompletedStepFields should return completed fields client object" name="generalUtils getCompletedStepFields should return completed fields client object" time="0.002">
    </testcase>
    <testcase classname="generalUtils getCompletedStepFields should return completed fields project object" name="generalUtils getCompletedStepFields should return completed fields project object" time="0.001">
    </testcase>
    <testcase classname="generalUtils generateTempId should return an incremental temp id" name="generalUtils generateTempId should return an incremental temp id" time="0.001">
    </testcase>
    <testcase classname="generalUtils isTempId should validate temporal ids" name="generalUtils isTempId should validate temporal ids" time="0.001">
    </testcase>
    <testcase classname="generalUtils parseUrlSearch should parse a search" name="generalUtils parseUrlSearch should parse a search" time="0.004">
    </testcase>
    <testcase classname="generalUtils parseUrlSearch should parse a search with initial value" name="generalUtils parseUrlSearch should parse a search with initial value" time="0">
    </testcase>
    <testcase classname="generalUtils safeParse should parse a string" name="generalUtils safeParse should parse a string" time="0.001">
    </testcase>
    <testcase classname="generalUtils safeParse should use a fallback when parsing fails" name="generalUtils safeParse should use a fallback when parsing fails" time="0">
    </testcase>
    <testcase classname="generalUtils safeParse should return the entry item when parsing fails and there is no fallback" name="generalUtils safeParse should return the entry item when parsing fails and there is no fallback" time="0">
    </testcase>
    <testcase classname="generalUtils deleteObjectItem should delete an item of an object" name="generalUtils deleteObjectItem should delete an item of an object" time="0.001">
    </testcase>
    <testcase classname="generalUtils formatNumberWithCommas should format a number to number with commas" name="generalUtils formatNumberWithCommas should format a number to number with commas" time="0.001">
    </testcase>
    <testcase classname="generalUtils getDefaultValue should return value or defaultValue" name="generalUtils getDefaultValue should return value or defaultValue" time="0.001">
    </testcase>
    <testcase classname="generalUtils getConditionalDefaultValue should return value" name="generalUtils getConditionalDefaultValue should return value" time="0">
    </testcase>
    <testcase classname="generalUtils getConditionalDefaultValue should return defaultValue" name="generalUtils getConditionalDefaultValue should return defaultValue" time="0.002">
    </testcase>
    <testcase classname="generalUtils getFormattedDate should return MMM DD, YYYY date or null" name="generalUtils getFormattedDate should return MMM DD, YYYY date or null" time="0.003">
    </testcase>
    <testcase classname="generalUtils getFormattedDate should return MMMM YYYY date or null" name="generalUtils getFormattedDate should return MMMM YYYY date or null" time="0.001">
    </testcase>
    <testcase classname="generalUtils getFormattedDate should return DD MMM date or null" name="generalUtils getFormattedDate should return DD MMM date or null" time="0.001">
    </testcase>
    <testcase classname="generalUtils getFormattedDate should return MMM DD, YYYY date or null" name="generalUtils getFormattedDate should return MMM DD, YYYY date or null" time="0.001">
    </testcase>
    <testcase classname="generalUtils getFormattedDate should return MM/DD/YYYY date or null" name="generalUtils getFormattedDate should return MM/DD/YYYY date or null" time="0">
    </testcase>
    <testcase classname="generalUtils getDrawerButton should drawer button type" name="generalUtils getDrawerButton should drawer button type" time="0.001">
    </testcase>
    <testcase classname="generalUtils formatIdNumber should format number" name="generalUtils formatIdNumber should format number" time="0.001">
    </testcase>
    <testcase classname="generalUtils getListDefaultValue should get error from list" name="generalUtils getListDefaultValue should get error from list" time="0">
    </testcase>
    <testcase classname="generalUtils getListDefaultValue should return default value" name="generalUtils getListDefaultValue should return default value" time="0.001">
    </testcase>
    <testcase classname="generalUtils getHideOverflowClass should get class" name="generalUtils getHideOverflowClass should get class" time="0.001">
    </testcase>
    <testcase classname="generalUtils getHideOverflowClass should get empty" name="generalUtils getHideOverflowClass should get empty" time="0">
    </testcase>
    <testcase classname="generalUtils getOptionListFromMap should return option list" name="generalUtils getOptionListFromMap should return option list" time="0.001">
    </testcase>
    <testcase classname="generalUtils getImageUrl should return url" name="generalUtils getImageUrl should return url" time="0">
    </testcase>
    <testcase classname="generalUtils getImageUrl should return null" name="generalUtils getImageUrl should return null" time="0.001">
    </testcase>
    <testcase classname="generalUtils getFileNames should return file names" name="generalUtils getFileNames should return file names" time="0.001">
    </testcase>
    <testcase classname="generalUtils getBooleanDefaultValue should return empty" name="generalUtils getBooleanDefaultValue should return empty" time="0">
    </testcase>
    <testcase classname="generalUtils getBooleanDefaultValue should return default" name="generalUtils getBooleanDefaultValue should return default" time="0.001">
    </testcase>
    <testcase classname="generalUtils getBooleanDefaultValue should return truthy" name="generalUtils getBooleanDefaultValue should return truthy" time="0">
    </testcase>
    <testcase classname="generalUtils getBooleanDefaultValue should return falsy" name="generalUtils getBooleanDefaultValue should return falsy" time="0.001">
    </testcase>
    <testcase classname="generalUtils sortByCreatedDate should return sorted items" name="generalUtils sortByCreatedDate should return sorted items" time="0">
    </testcase>
    <testcase classname="generalUtils sortByCreatedDate should maintain order" name="generalUtils sortByCreatedDate should maintain order" time="0.001">
    </testcase>
    <testcase classname="generalUtils formatPhoneNumber should format phone number" name="generalUtils formatPhoneNumber should format phone number" time="0.005">
    </testcase>
    <testcase classname="generalUtils sanitizePhoneNumber should sanitize phone number" name="generalUtils sanitizePhoneNumber should sanitize phone number" time="0.001">
    </testcase>
    <testcase classname="generalUtils getDateFromMomentDateTime should get moment date given date and time AM" name="generalUtils getDateFromMomentDateTime should get moment date given date and time AM" time="0.005">
    </testcase>
    <testcase classname="generalUtils getDateFromMomentDateTime should get moment date given date and time PM" name="generalUtils getDateFromMomentDateTime should get moment date given date and time PM" time="0.001">
    </testcase>
    <testcase classname="generalUtils getDateFromMomentDateTime should return moment date acordinlly when invalid date" name="generalUtils getDateFromMomentDateTime should return moment date acordinlly when invalid date" time="0.001">
    </testcase>
    <testcase classname="generalUtils toggleArray should add item when it does not exist" name="generalUtils toggleArray should add item when it does not exist" time="0">
    </testcase>
    <testcase classname="generalUtils toggleArray should remove item when exist" name="generalUtils toggleArray should remove item when exist" time="0.001">
    </testcase>
    <testcase classname="generalUtils getTimeFromNow should return time from now" name="generalUtils getTimeFromNow should return time from now" time="0.003">
    </testcase>
    <testcase classname="generalUtils parseQuery should return queryParams as string and skip undefined values" name="generalUtils parseQuery should return queryParams as string and skip undefined values" time="0">
    </testcase>
    <testcase classname="generalUtils parseQuery should return queryParams as string" name="generalUtils parseQuery should return queryParams as string" time="0.001">
    </testcase>
    <testcase classname="generalUtils parseQuery should parse Object as string" name="generalUtils parseQuery should parse Object as string" time="0">
    </testcase>
    <testcase classname="generalUtils parseQuery should parse Array as string of key with same key" name="generalUtils parseQuery should parse Array as string of key with same key" time="0.001">
    </testcase>
    <testcase classname="generalUtils getLocationList should state map as option list" name="generalUtils getLocationList should state map as option list" time="0.001">
    </testcase>
    <testcase classname="generalUtils getLineChartTicksByData should return block for ticks &gt; 8 and &lt; 20 and % 3 === 0" name="generalUtils getLineChartTicksByData should return block for ticks &gt; 8 and &lt; 20 and % 3 === 0" time="0.001">
    </testcase>
    <testcase classname="generalUtils getLineChartTicksByData should return none for ticks &gt; 8 and &lt; 20 and % 3 !== 0" name="generalUtils getLineChartTicksByData should return none for ticks &gt; 8 and &lt; 20 and % 3 !== 0" time="0">
    </testcase>
    <testcase classname="generalUtils getLineChartTicksByData should return block for ticks &gt; 20 and % 6 === 0" name="generalUtils getLineChartTicksByData should return block for ticks &gt; 20 and % 6 === 0" time="0.001">
    </testcase>
    <testcase classname="generalUtils getLineChartTicksByData should return none for ticks &gt; 20 and % 7 !== 0" name="generalUtils getLineChartTicksByData should return none for ticks &gt; 20 and % 7 !== 0" time="0">
    </testcase>
    <testcase classname="generalUtils getLineChartTicksByData should return block for ticks &lt; 8" name="generalUtils getLineChartTicksByData should return block for ticks &lt; 8" time="0.001">
    </testcase>
    <testcase classname="generalUtils getBigLineChartTicksByData should return block for ticks &gt; 15 and &lt; 20 and % 3 === 0" name="generalUtils getBigLineChartTicksByData should return block for ticks &gt; 15 and &lt; 20 and % 3 === 0" time="0">
    </testcase>
    <testcase classname="generalUtils getBigLineChartTicksByData should return none for ticks &gt; 15 and &lt; 20 and % 3 !== 0" name="generalUtils getBigLineChartTicksByData should return none for ticks &gt; 15 and &lt; 20 and % 3 !== 0" time="0">
    </testcase>
    <testcase classname="generalUtils getBigLineChartTicksByData should return block for ticks &gt; 20 and % 5 === 0" name="generalUtils getBigLineChartTicksByData should return block for ticks &gt; 20 and % 5 === 0" time="0.001">
    </testcase>
    <testcase classname="generalUtils getBigLineChartTicksByData should return none for ticks &gt; 20 and % 5 !== 0" name="generalUtils getBigLineChartTicksByData should return none for ticks &gt; 20 and % 5 !== 0" time="0.002">
    </testcase>
    <testcase classname="generalUtils getBigLineChartTicksByData should return block for ticks &lt; 8" name="generalUtils getBigLineChartTicksByData should return block for ticks &lt; 8" time="0.001">
    </testcase>
    <testcase classname="generalUtils should sanitizeAccountData" name="generalUtils should sanitizeAccountData" time="0.001">
    </testcase>
    <testcase classname="generalUtils getPieData should return color for bigger element" name="generalUtils getPieData should return color for bigger element" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceDetail" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:44" time="0.934" tests="1">
    <testcase classname="InvoiceDetail should render" name="InvoiceDetail should render" time="0.328">
    </testcase>
  </testsuite>
  <testsuite name="certification epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:45" time="0.354" tests="13">
    <testcase classname="certification epics fetchCertificationListStart should get epic for project fetch certifications" name="certification epics fetchCertificationListStart should get epic for project fetch certifications" time="0.008">
    </testcase>
    <testcase classname="certification epics fetchCertificationListStart should catch errors" name="certification epics fetchCertificationListStart should catch errors" time="0.017">
    </testcase>
    <testcase classname="certification epics fetchCertificationTemplateListStart should get epic for project fetch certification templates" name="certification epics fetchCertificationTemplateListStart should get epic for project fetch certification templates" time="0.014">
    </testcase>
    <testcase classname="certification epics fetchCertificationTemplateListStart should catch errors" name="certification epics fetchCertificationTemplateListStart should catch errors" time="0.015">
    </testcase>
    <testcase classname="certification epics fetchWorkerCertificationListStart should get epic for worker fetch worker certification list" name="certification epics fetchWorkerCertificationListStart should get epic for worker fetch worker certification list" time="0.018">
    </testcase>
    <testcase classname="certification epics fetchWorkerCertificationListStart should catch errors" name="certification epics fetchWorkerCertificationListStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="certification epics fetchWorkerCertificationDetailStart should get epic for worker fetch worker certification list" name="certification epics fetchWorkerCertificationDetailStart should get epic for worker fetch worker certification list" time="0.017">
    </testcase>
    <testcase classname="certification epics fetchWorkerCertificationDetailStart should catch errors" name="certification epics fetchWorkerCertificationDetailStart should catch errors" time="0.008">
    </testcase>
    <testcase classname="certification epics addWorkerCertificationStart should get epic for worker add certification" name="certification epics addWorkerCertificationStart should get epic for worker add certification" time="0.009">
    </testcase>
    <testcase classname="certification epics addWorkerCertificationStart should get epic for worker add certification and upload files" name="certification epics addWorkerCertificationStart should get epic for worker add certification and upload files" time="0.011">
    </testcase>
    <testcase classname="certification epics addWorkerCertificationStart should catch errors" name="certification epics addWorkerCertificationStart should catch errors" time="0.016">
    </testcase>
    <testcase classname="certification epics uploadWorkerCertificationStart should get epic for worker fetch upload worker certification" name="certification epics uploadWorkerCertificationStart should get epic for worker fetch upload worker certification" time="0.016">
    </testcase>
    <testcase classname="certification epics uploadWorkerCertificationStart should catch errors" name="certification epics uploadWorkerCertificationStart should catch errors" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="DashboardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:46" time="0.317" tests="6">
    <testcase classname="DashboardContainer should mapStateToProps" name="DashboardContainer should mapStateToProps" time="0.003">
    </testcase>
    <testcase classname="DashboardContainer should mapDispatchToProps" name="DashboardContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="DashboardContainer should dispatch fetchNewBadges start action" name="DashboardContainer should dispatch fetchNewBadges start action" time="0.002">
    </testcase>
    <testcase classname="DashboardContainer should dispatch fetchWorkersActivity start action" name="DashboardContainer should dispatch fetchWorkersActivity start action" time="0.002">
    </testcase>
    <testcase classname="DashboardContainer should dispatch fetchGrossRevenue start action" name="DashboardContainer should dispatch fetchGrossRevenue start action" time="0.002">
    </testcase>
    <testcase classname="DashboardContainer should dispatch fetchClientStart start action" name="DashboardContainer should dispatch fetchClientStart start action" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ClientDetailContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:46" time="0.343" tests="13">
    <testcase classname="ClientDetailContainer should mapStateToProps, " name="ClientDetailContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="ClientDetailContainer should mapDispatchToProps" name="ClientDetailContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch fetchClientStart start action" name="ClientDetailContainer should dispatch fetchClientStart start action" time="0">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch clearClientMap start action" name="ClientDetailContainer should dispatch clearClientMap start action" time="0.001">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch updateClient start action" name="ClientDetailContainer should dispatch updateClient start action" time="0.001">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch archiveClient start action" name="ClientDetailContainer should dispatch archiveClient start action" time="0">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch unarchiveClient start action" name="ClientDetailContainer should dispatch unarchiveClient start action" time="0">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch fetchMwbe start action" name="ClientDetailContainer should dispatch fetchMwbe start action" time="0.001">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch fetchTradeList start action" name="ClientDetailContainer should dispatch fetchTradeList start action" time="0.001">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch clearErrors start action" name="ClientDetailContainer should dispatch clearErrors start action" time="0">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch clearLoadingMap start action" name="ClientDetailContainer should dispatch clearLoadingMap start action" time="0.001">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch fetchClientStatistics start action" name="ClientDetailContainer should dispatch fetchClientStatistics start action" time="0.001">
    </testcase>
    <testcase classname="ClientDetailContainer should dispatch clearClientStatistics start action" name="ClientDetailContainer should dispatch clearClientStatistics start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="training epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:47" time="0.329" tests="11">
    <testcase classname="training epics fetchTrainingListStart should get epic for project fetch trainings" name="training epics fetchTrainingListStart should get epic for project fetch trainings" time="0.007">
    </testcase>
    <testcase classname="training epics fetchTrainingListStart should catch errors" name="training epics fetchTrainingListStart should catch errors" time="0.011">
    </testcase>
    <testcase classname="training epics fetchWorkerTrainingListStart should get epic for worker fetch worker training list" name="training epics fetchWorkerTrainingListStart should get epic for worker fetch worker training list" time="0.005">
    </testcase>
    <testcase classname="training epics fetchWorkerTrainingListStart should catch errors" name="training epics fetchWorkerTrainingListStart should catch errors" time="0.02">
    </testcase>
    <testcase classname="training epics fetchWorkerTrainingDetailStart should get epic for worker fetch worker training list" name="training epics fetchWorkerTrainingDetailStart should get epic for worker fetch worker training list" time="0.018">
    </testcase>
    <testcase classname="training epics fetchWorkerTrainingDetailStart should catch errors" name="training epics fetchWorkerTrainingDetailStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="training epics addWorkerTrainingStart should get epic for worker add training" name="training epics addWorkerTrainingStart should get epic for worker add training" time="0.01">
    </testcase>
    <testcase classname="training epics addWorkerTrainingStart should get epic for worker add training and upload files" name="training epics addWorkerTrainingStart should get epic for worker add training and upload files" time="0.021">
    </testcase>
    <testcase classname="training epics addWorkerTrainingStart should catch errors" name="training epics addWorkerTrainingStart should catch errors" time="0.009">
    </testcase>
    <testcase classname="training epics uploadWorkerTrainingStart should get epic for worker fetch upload worker training" name="training epics uploadWorkerTrainingStart should get epic for worker fetch upload worker training" time="0.005">
    </testcase>
    <testcase classname="training epics uploadWorkerTrainingStart should catch errors" name="training epics uploadWorkerTrainingStart should catch errors" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="payment epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:47" time="0.278" tests="7">
    <testcase classname="payment epics fetchPaymentMethodStart should get epic for payment fetch paymentMethod" name="payment epics fetchPaymentMethodStart should get epic for payment fetch paymentMethod" time="0.011">
    </testcase>
    <testcase classname="payment epics fetchPaymentMethodStart should catch errors" name="payment epics fetchPaymentMethodStart should catch errors" time="0.014">
    </testcase>
    <testcase classname="payment epics createPaymentMethodStart should get epic for payment create paymentMethod" name="payment epics createPaymentMethodStart should get epic for payment create paymentMethod" time="0.017">
    </testcase>
    <testcase classname="payment epics createPaymentMethodStart should catch errors" name="payment epics createPaymentMethodStart should catch errors" time="0.008">
    </testcase>
    <testcase classname="payment epics delete payment method should get epic for delete paymentMethod" name="payment epics delete payment method should get epic for delete paymentMethod" time="0.024">
    </testcase>
    <testcase classname="payment epics delete payment method should get epic for replace paymentMethod" name="payment epics delete payment method should get epic for replace paymentMethod" time="0.014">
    </testcase>
    <testcase classname="payment epics delete payment method should catch errors while delete paymentMethods" name="payment epics delete payment method should catch errors while delete paymentMethods" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="useResize" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:47" time="0.185" tests="1">
    <testcase classname="useResize should resize" name="useResize should resize" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="SettingsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:48" time="0.314" tests="11">
    <testcase classname="SettingsContainer should mapStateToProps" name="SettingsContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should mapDispatchToProps" name="SettingsContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should dispatch getStatusProcore start action" name="SettingsContainer should dispatch getStatusProcore start action" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should dispatch connectProcore start action" name="SettingsContainer should dispatch connectProcore start action" time="0">
    </testcase>
    <testcase classname="SettingsContainer should dispatch disconnectProcore start action" name="SettingsContainer should dispatch disconnectProcore start action" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should dispatch changePassword start action" name="SettingsContainer should dispatch changePassword start action" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should dispatch clearChangePasswordLoading start action" name="SettingsContainer should dispatch clearChangePasswordLoading start action" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should dispatch updateProfile start action" name="SettingsContainer should dispatch updateProfile start action" time="0">
    </testcase>
    <testcase classname="SettingsContainer should dispatch updateProfilePhoto start action" name="SettingsContainer should dispatch updateProfilePhoto start action" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should dispatch getAccountData start action" name="SettingsContainer should dispatch getAccountData start action" time="0.001">
    </testcase>
    <testcase classname="SettingsContainer should dispatch clearFileUpload start action" name="SettingsContainer should dispatch clearFileUpload start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DashboardProjectContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:48" time="0.365" tests="2">
    <testcase classname="DashboardProjectContainer should mapDispatchToProps" name="DashboardProjectContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="DashboardProjectContainer should dispatch clearStatistics start action" name="DashboardProjectContainer should dispatch clearStatistics start action" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="useForm" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:48" time="0.123" tests="8">
    <testcase classname="useForm onSubmit should return form data" name="useForm onSubmit should return form data" time="0.004">
    </testcase>
    <testcase classname="useForm onSubmit should not return data" name="useForm onSubmit should not return data" time="0.002">
    </testcase>
    <testcase classname="useForm onChange should update field" name="useForm onChange should update field" time="0.002">
    </testcase>
    <testcase classname="useForm onValidate should validate a field" name="useForm onValidate should validate a field" time="0.001">
    </testcase>
    <testcase classname="useForm resetErrors should reset errors" name="useForm resetErrors should reset errors" time="0.002">
    </testcase>
    <testcase classname="useForm updateRules should update Rules" name="useForm updateRules should update Rules" time="0.001">
    </testcase>
    <testcase classname="useForm discardChanges should update Rules" name="useForm discardChanges should update Rules" time="0.002">
    </testcase>
    <testcase classname="useForm update should update field" name="useForm update should update field" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="DashboardWorkerContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:49" time="0.302" tests="2">
    <testcase classname="DashboardWorkerContainer should mapDispatchToProps" name="DashboardWorkerContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="DashboardWorkerContainer should dispatch clearStatistics start action" name="DashboardWorkerContainer should dispatch clearStatistics start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceListContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:49" time="0.293" tests="8">
    <testcase classname="InvoiceListContainer should mapStateToProps" name="InvoiceListContainer should mapStateToProps" time="0.005">
    </testcase>
    <testcase classname="InvoiceListContainer should mapDispatchToProps" name="InvoiceListContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="InvoiceListContainer should dispatch fetchInvoiceList action" name="InvoiceListContainer should dispatch fetchInvoiceList action" time="0.001">
    </testcase>
    <testcase classname="InvoiceListContainer should dispatch clearInvoiceMap action" name="InvoiceListContainer should dispatch clearInvoiceMap action" time="0.001">
    </testcase>
    <testcase classname="InvoiceListContainer should dispatch saveInvoice action" name="InvoiceListContainer should dispatch saveInvoice action" time="0.001">
    </testcase>
    <testcase classname="InvoiceListContainer should dispatch fetchInvoiceStatistics action" name="InvoiceListContainer should dispatch fetchInvoiceStatistics action" time="0">
    </testcase>
    <testcase classname="InvoiceListContainer should dispatch clearInvoiceStatistics action" name="InvoiceListContainer should dispatch clearInvoiceStatistics action" time="0.001">
    </testcase>
    <testcase classname="InvoiceListContainer should dispatch editInvoice action" name="InvoiceListContainer should dispatch editInvoice action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:49" time="0.296" tests="7">
    <testcase classname="AccessControlSystemContainer should mapStateToProps, " name="AccessControlSystemContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemContainer should mapDispatchToProps" name="AccessControlSystemContainer should mapDispatchToProps" time="0.003">
    </testcase>
    <testcase classname="AccessControlSystemContainer should dispatch fetchAccessControlSystemStart start action" name="AccessControlSystemContainer should dispatch fetchAccessControlSystemStart start action" time="0.002">
    </testcase>
    <testcase classname="AccessControlSystemContainer should dispatch saveAccessControlSystem start action" name="AccessControlSystemContainer should dispatch saveAccessControlSystem start action" time="0.002">
    </testcase>
    <testcase classname="AccessControlSystemContainer should dispatch updateAccessControlSystem start action" name="AccessControlSystemContainer should dispatch updateAccessControlSystem start action" time="0.002">
    </testcase>
    <testcase classname="AccessControlSystemContainer should dispatch clearErrors start action" name="AccessControlSystemContainer should dispatch clearErrors start action" time="0.012">
    </testcase>
    <testcase classname="AccessControlSystemContainer should dispatch clearAccessControlSystemMap start action" name="AccessControlSystemContainer should dispatch clearAccessControlSystemMap start action" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrinterSystemWizardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:50" time="0.544" tests="7">
    <testcase classname="BadgePrinterSystemWizardContainer should mapStateToProps, " name="BadgePrinterSystemWizardContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemWizardContainer should mapDispatchToProps" name="BadgePrinterSystemWizardContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemWizardContainer should dispatch fetchBadgePrinterSystem start action" name="BadgePrinterSystemWizardContainer should dispatch fetchBadgePrinterSystem start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemWizardContainer should dispatch saveBadgePrinterSystem start action" name="BadgePrinterSystemWizardContainer should dispatch saveBadgePrinterSystem start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemWizardContainer should dispatch updateBadgePrinterSystem start action" name="BadgePrinterSystemWizardContainer should dispatch updateBadgePrinterSystem start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemWizardContainer should dispatch clearBadgePrinterSystemMap start action" name="BadgePrinterSystemWizardContainer should dispatch clearBadgePrinterSystemMap start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemWizardContainer should dispatch clearErrors start action" name="BadgePrinterSystemWizardContainer should dispatch clearErrors start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ClientWizardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:51" time="0.259" tests="12">
    <testcase classname="ClientWizardContainer should mapStateToProps, " name="ClientWizardContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should mapDispatchToProps" name="ClientWizardContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch fetchClientStart start action" name="ClientWizardContainer should dispatch fetchClientStart start action" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch fetchMWbeListStart start action" name="ClientWizardContainer should dispatch fetchMWbeListStart start action" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch fetchTradeListStart start action" name="ClientWizardContainer should dispatch fetchTradeListStart start action" time="0">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch saveClient start action" name="ClientWizardContainer should dispatch saveClient start action" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch updateClient start action" name="ClientWizardContainer should dispatch updateClient start action" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch sendClientForApproval start action" name="ClientWizardContainer should dispatch sendClientForApproval start action" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch clearErrors start action" name="ClientWizardContainer should dispatch clearErrors start action" time="0">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch sendClientForApproval start action" name="ClientWizardContainer should dispatch sendClientForApproval start action" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch approveClient start action" name="ClientWizardContainer should dispatch approveClient start action" time="0.001">
    </testcase>
    <testcase classname="ClientWizardContainer should dispatch clearClientMap start action" name="ClientWizardContainer should dispatch clearClientMap start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="file epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:51" time="0.22" tests="4">
    <testcase classname="file epics uploadFileListStart should get epic for upload file list" name="file epics uploadFileListStart should get epic for upload file list" time="0.009">
    </testcase>
    <testcase classname="file epics uploadFileStart should get epic for upload file progress" name="file epics uploadFileStart should get epic for upload file progress" time="0.01">
    </testcase>
    <testcase classname="file epics uploadFileStart should get epic for upload file confirm" name="file epics uploadFileStart should get epic for upload file confirm" time="0.02">
    </testcase>
    <testcase classname="file epics uploadFileStart should catch errors" name="file epics uploadFileStart should catch errors" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceDetailContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:51" time="0.206" tests="3">
    <testcase classname="InvoiceDetailContainer should mapStateToProps" name="InvoiceDetailContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="InvoiceDetailContainer should mapDispatchToProps" name="InvoiceDetailContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="InvoiceDetailContainer should dispatch navigate action" name="InvoiceDetailContainer should dispatch navigate action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ClientListContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:52" time="0.226" tests="10">
    <testcase classname="ClientListContainer should mapStateToProps" name="ClientListContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should mapDispatchToProps" name="ClientListContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should dispatch fetchMwbe start action" name="ClientListContainer should dispatch fetchMwbe start action" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should dispatch fetchClientSummary start action" name="ClientListContainer should dispatch fetchClientSummary start action" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should dispatch fetchClientList start action" name="ClientListContainer should dispatch fetchClientList start action" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should dispatch clearClientMap start action" name="ClientListContainer should dispatch clearClientMap start action" time="0">
    </testcase>
    <testcase classname="ClientListContainer should dispatch deleteClient start action" name="ClientListContainer should dispatch deleteClient start action" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should dispatch navigate action" name="ClientListContainer should dispatch navigate action" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should dispatch fetchClientStatistics action" name="ClientListContainer should dispatch fetchClientStatistics action" time="0.001">
    </testcase>
    <testcase classname="ClientListContainer should dispatch clearClientStatistics action" name="ClientListContainer should dispatch clearClientStatistics action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="InventoryListContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:52" time="0.249" tests="3">
    <testcase classname="InventoryListContainer should mapStateToProps" name="InventoryListContainer should mapStateToProps" time="0.002">
    </testcase>
    <testcase classname="InventoryListContainer should dispatch fetchInventoryStatistics action" name="InventoryListContainer should dispatch fetchInventoryStatistics action" time="0.001">
    </testcase>
    <testcase classname="InventoryListContainer should dispatch clearWorkerStatistics action" name="InventoryListContainer should dispatch clearWorkerStatistics action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useLocationFilter" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:52" time="0.196" tests="5">
    <testcase classname="useLocationFilter should dispatch fetchCountryListStart" name="useLocationFilter should dispatch fetchCountryListStart" time="0.005">
    </testcase>
    <testcase classname="useLocationFilter should contain country by its countryCode" name="useLocationFilter should contain country by its countryCode" time="0.002">
    </testcase>
    <testcase classname="useLocationFilter should contain a state list with countries based on store countryList" name="useLocationFilter should contain a state list with countries based on store countryList" time="0.004">
    </testcase>
    <testcase classname="useLocationFilter should change location with stateCode" name="useLocationFilter should change location with stateCode" time="0.004">
    </testcase>
    <testcase classname="useLocationFilter should change location with countryCode" name="useLocationFilter should change location with countryCode" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="auth epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:53" time="0.253" tests="6">
    <testcase classname="auth epics authSignIn should get epic for auth sign in" name="auth epics authSignIn should get epic for auth sign in" time="0.02">
    </testcase>
    <testcase classname="auth epics authSignIn should catch errors" name="auth epics authSignIn should catch errors" time="0.009">
    </testcase>
    <testcase classname="auth epics authSignOut should get epic for auth sign out" name="auth epics authSignOut should get epic for auth sign out" time="0.021">
    </testcase>
    <testcase classname="auth epics authSignOut should catch errors" name="auth epics authSignOut should catch errors" time="0.016">
    </testcase>
    <testcase classname="auth epics recoverSession should get epic for recoverSessionDone when no session" name="auth epics recoverSession should get epic for recoverSessionDone when no session" time="0.003">
    </testcase>
    <testcase classname="auth epics recoverSession should catch errors" name="auth epics recoverSession should catch errors" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="SettingsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:53" time="1.491" tests="1">
    <testcase classname="SettingsContainer should mapStateToProps" name="SettingsContainer should mapStateToProps" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RegisterContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:55" time="0.235" tests="4">
    <testcase classname="RegisterContainer should mapStateToProps, " name="RegisterContainer should mapStateToProps, " time="0.003">
    </testcase>
    <testcase classname="RegisterContainer should mapDispatchToProps" name="RegisterContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="RegisterContainer should dispatch resetPassword action" name="RegisterContainer should dispatch resetPassword action" time="0.002">
    </testcase>
    <testcase classname="RegisterContainer should dispatch clearLoading action" name="RegisterContainer should dispatch clearLoading action" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="file reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:55" time="0.31" tests="6">
    <testcase classname="file reducer should return state without mutations when no switch case matches" name="file reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="file reducer should return a new state ActionType.ADD_UPLOAD_FILE_LIST" name="file reducer should return a new state ActionType.ADD_UPLOAD_FILE_LIST" time="0.001">
    </testcase>
    <testcase classname="file reducer should return a new state ActionType.DELETE_UPLOAD_FILE_LIST" name="file reducer should return a new state ActionType.DELETE_UPLOAD_FILE_LIST" time="0.001">
    </testcase>
    <testcase classname="file reducer should return a new state ActionType.UPLOAD_FILE_PROGRESS" name="file reducer should return a new state ActionType.UPLOAD_FILE_PROGRESS" time="0">
    </testcase>
    <testcase classname="file reducer should return a new state ActionType.CLEAR_UPLOAD_MAP" name="file reducer should return a new state ActionType.CLEAR_UPLOAD_MAP" time="0.001">
    </testcase>
    <testcase classname="file reducer should return a new state ActionType.CLEAR_MAP" name="file reducer should return a new state ActionType.CLEAR_MAP" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useQueryParamState" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:55" time="0.18" tests="3">
    <testcase classname="useQueryParamState should render with initial state" name="useQueryParamState should render with initial state" time="0.006">
    </testcase>
    <testcase classname="useQueryParamState should render with state from url" name="useQueryParamState should render with state from url" time="0.005">
    </testcase>
    <testcase classname="useQueryParamState should set state" name="useQueryParamState should set state" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="project reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:56" time="0.169" tests="18">
    <testcase classname="project reducer should return state without mutations when no switch case matches" name="project reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_PROJECT_LIST_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_PROJECT_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.UPDATE_PROJECT_SUCCESS" name="project reducer should return a new state on project ActionType.UPDATE_PROJECT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_PROJECT_CATEGORY_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_PROJECT_CATEGORY_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_PROJECT_REGION_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_PROJECT_REGION_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_PROJECT_FCANAE_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_PROJECT_FCANAE_SUCCESS" time="0">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_BILLING_TIER_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_BILLING_TIER_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.CLEAR_PROJECT_MAP" name="project reducer should return a new state on project ActionType.CLEAR_PROJECT_MAP" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.ARCHIVE_PROJECT_SUCCESS" name="project reducer should return a new state on project ActionType.ARCHIVE_PROJECT_SUCCESS" time="0">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.UNARCHIVE_PROJECT_SUCCESS" name="project reducer should return a new state on project ActionType.UNARCHIVE_PROJECT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.ASSOCIATE_ACCESS_CONTROL_SYSTEM_PROJECT" name="project reducer should return a new state on project ActionType.ASSOCIATE_ACCESS_CONTROL_SYSTEM_PROJECT" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.UNASSIGN_ACCESS_CONTROL_SYSTEM_PROJECT_SUCCESS" name="project reducer should return a new state on project ActionType.UNASSIGN_ACCESS_CONTROL_SYSTEM_PROJECT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.ASSOCIATE_BADGE_PRINTING_SYSTEM_PROJECT" name="project reducer should return a new state on project ActionType.ASSOCIATE_BADGE_PRINTING_SYSTEM_PROJECT" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.UNASSIGN_BADGE_PRINTING_SYSTEM_PROJECT_SUCCESS" name="project reducer should return a new state on project ActionType.UNASSIGN_BADGE_PRINTING_SYSTEM_PROJECT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_CLIENT_PROJECT_LIST_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_CLIENT_PROJECT_LIST_SUCCESS" time="0.002">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_WORKER_PROJECT_LIST_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_WORKER_PROJECT_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_CONSENT_FORM_FIELDS_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_CONSENT_FORM_FIELDS_SUCCESS" time="0">
    </testcase>
    <testcase classname="project reducer should return a new state on project ActionType.FETCH_BADGE_VISITOR_ENTITY_LIST_SUCCESS" name="project reducer should return a new state on project ActionType.FETCH_BADGE_VISITOR_ENTITY_LIST_SUCCESS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useValidator" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:56" time="0.129" tests="6">
    <testcase classname="useValidator validateForm should validate all inputs of a model form" name="useValidator validateForm should validate all inputs of a model form" time="0.023">
    </testcase>
    <testcase classname="useValidator validateForm should return empty error map when all fields are valid" name="useValidator validateForm should return empty error map when all fields are valid" time="0.003">
    </testcase>
    <testcase classname="useValidator validateField should validate one field of a model" name="useValidator validateField should validate one field of a model" time="0.001">
    </testcase>
    <testcase classname="useValidator isInvalidPassword should be valid for all validList" name="useValidator isInvalidPassword should be valid for all validList" time="0.002">
    </testcase>
    <testcase classname="useValidator isInvalidPassword should be invalid for all invalidList" name="useValidator isInvalidPassword should be invalid for all invalidList" time="0.003">
    </testcase>
    <testcase classname="useValidator should validate taxpayer id number" name="useValidator should validate taxpayer id number" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="worker reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:56" time="0.157" tests="19">
    <testcase classname="worker reducer should return state without mutations when no switch case matches" name="worker reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_WORKER_LIST_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_WORKER_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.CLEAR_WORKER_MAP" name="worker reducer should return a new state on worker ActionType.CLEAR_WORKER_MAP" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.UPDATE_WORKER_SUCCESS" name="worker reducer should return a new state on worker ActionType.UPDATE_WORKER_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_ETHNICITY_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_ETHNICITY_SUCCESS" time="0">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_LANGUAGE_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_LANGUAGE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_JOB_TITLE_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_JOB_TITLE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_TRADE_STATUS_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_TRADE_STATUS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_SKILLED_TRADE_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_SKILLED_TRADE_SUCCESS" time="0">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_IDENTIFICATION_TYPE_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_IDENTIFICATION_TYPE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_SOC_JOB_TITLE_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_SOC_JOB_TITLE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_WORKER_ACTIVITY_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_WORKER_ACTIVITY_SUCCESS" time="0">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_WORKER_OBSERVATIONS_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_WORKER_OBSERVATIONS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_WORKER_PROJECT_LIST_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_WORKER_PROJECT_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_WORKER_PROJECT_LIST_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_WORKER_PROJECT_LIST_SUCCESS" time="0">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_PROJECT_WORKER_LIST_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_PROJECT_WORKER_LIST_SUCCESS" time="0.002">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_CLIENT_WORKER_LIST_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_CLIENT_WORKER_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.FETCH_CONSENT_FORM_SUCCESS" name="worker reducer should return a new state on worker ActionType.FETCH_CONSENT_FORM_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="worker reducer should return a new state on worker ActionType.CLEAR_CONSENT_FORM" name="worker reducer should return a new state on worker ActionType.CLEAR_CONSENT_FORM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Project Utils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:56" time="0.141" tests="6">
    <testcase classname="Project Utils should sanitizeProject" name="Project Utils should sanitizeProject" time="0.004">
    </testcase>
    <testcase classname="Project Utils should preloadProject" name="Project Utils should preloadProject" time="0.001">
    </testcase>
    <testcase classname="Project Utils should preloadProject 2" name="Project Utils should preloadProject 2" time="0.001">
    </testcase>
    <testcase classname="Project Utils should getPlannedMonths" name="Project Utils should getPlannedMonths" time="0.003">
    </testcase>
    <testcase classname="Project Utils should get badge request" name="Project Utils should get badge request" time="0">
    </testcase>
    <testcase classname="Project Utils should validateBadgeTagId" name="Project Utils should validateBadgeTagId" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="handleError" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:56" time="0.151" tests="4">
    <testcase classname="handleError should catch error" name="handleError should catch error" time="0.002">
    </testcase>
    <testcase classname="handleError should catch toast error" name="handleError should catch toast error" time="0.002">
    </testcase>
    <testcase classname="handleError should catch toast error with key" name="handleError should catch toast error with key" time="0.001">
    </testcase>
    <testcase classname="handleError should catch toast error with key map" name="handleError should catch toast error with key map" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="addressUtils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:56" time="0.149" tests="18">
    <testcase classname="addressUtils should sanitizeAddress" name="addressUtils should sanitizeAddress" time="0.001">
    </testcase>
    <testcase classname="addressUtils should validateAddress" name="addressUtils should validateAddress" time="0.001">
    </testcase>
    <testcase classname="addressUtils should validateRequiredAddress" name="addressUtils should validateRequiredAddress" time="0.001">
    </testcase>
    <testcase classname="addressUtils getLocationString should retrieve all values" name="addressUtils getLocationString should retrieve all values" time="0.001">
    </testcase>
    <testcase classname="addressUtils getLocationString should retrieve empty city" name="addressUtils getLocationString should retrieve empty city" time="0">
    </testcase>
    <testcase classname="addressUtils getLocationString should retrieve empty state" name="addressUtils getLocationString should retrieve empty state" time="0.001">
    </testcase>
    <testcase classname="addressUtils getLocationString should retrieve empty city and state" name="addressUtils getLocationString should retrieve empty city and state" time="0">
    </testcase>
    <testcase classname="addressUtils getAddressString should retrieve full address" name="addressUtils getAddressString should retrieve full address" time="0.001">
    </testcase>
    <testcase classname="addressUtils getAddressString should retrieve only location address" name="addressUtils getAddressString should retrieve only location address" time="0.001">
    </testcase>
    <testcase classname="addressUtils getAddressString should retrieve empty address" name="addressUtils getAddressString should retrieve empty address" time="0.001">
    </testcase>
    <testcase classname="addressUtils getZipCodeMaskByCountry should get default zip format mask" name="addressUtils getZipCodeMaskByCountry should get default zip format mask" time="0.003">
    </testcase>
    <testcase classname="addressUtils getZipCodeMaskByCountry should get five plus four digits zip format mask" name="addressUtils getZipCodeMaskByCountry should get five plus four digits zip format mask" time="0.001">
    </testcase>
    <testcase classname="addressUtils getZipCodeMaskByCountry should get five plus four digits zip format mask" name="addressUtils getZipCodeMaskByCountry should get five plus four digits zip format mask" time="0">
    </testcase>
    <testcase classname="addressUtils getZipCodeMaskByCountry should get five digits zip format mask" name="addressUtils getZipCodeMaskByCountry should get five digits zip format mask" time="0.001">
    </testcase>
    <testcase classname="addressUtils getZipCodeMaskByCountry should get five digits zip format mask" name="addressUtils getZipCodeMaskByCountry should get five digits zip format mask" time="0">
    </testcase>
    <testcase classname="addressUtils getZipCodeMaskByCountry should get five digits zip format mask" name="addressUtils getZipCodeMaskByCountry should get five digits zip format mask" time="0.001">
    </testcase>
    <testcase classname="addressUtils getZipCodeMaskByCountry should get canada zip format mask" name="addressUtils getZipCodeMaskByCountry should get canada zip format mask" time="0">
    </testcase>
    <testcase classname="addressUtils formatZipCode should format zip code" name="addressUtils formatZipCode should format zip code" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="client reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:57" time="0.177" tests="14">
    <testcase classname="client reducer should return state without mutations when no switch case matches" name="client reducer should return state without mutations when no switch case matches" time="0.002">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.FETCH_CLIENT_LIST_SUCCESS" name="client reducer should return a new state on client ActionType.FETCH_CLIENT_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.FETCH_SELF_COMPANY_SUCCESS" name="client reducer should return a new state on client ActionType.FETCH_SELF_COMPANY_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.FETCH_MWBE_SUCCESS" name="client reducer should return a new state on client ActionType.FETCH_MWBE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.FETCH_TRADES" name="client reducer should return a new state on client ActionType.FETCH_TRADES" time="0">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.UPDATE_DRAFT_CLIENT_SUCCESS" name="client reducer should return a new state on client ActionType.UPDATE_DRAFT_CLIENT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.UPDATE_CLIENT_SUCCESS" name="client reducer should return a new state on client ActionType.UPDATE_CLIENT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.ARCHIVE_CLIENT_SUCCESS" name="client reducer should return a new state on client ActionType.ARCHIVE_CLIENT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.UNARCHIVE_CLIENT_SUCCESS" name="client reducer should return a new state on client ActionType.UNARCHIVE_CLIENT_SUCCESS" time="0">
    </testcase>
    <testcase classname="client reducer should return a new state on client ActionType.CLEAR_CLIENT_MAP" name="client reducer should return a new state on client ActionType.CLEAR_CLIENT_MAP" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on user ActionType.FETCH_PROJECT_CLIENT_LIST_SUCCESS" name="client reducer should return a new state on user ActionType.FETCH_PROJECT_CLIENT_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on user ActionType.FETCH_PROJECT_CLIENT_HIREARCHY_LIST_SUCCESS" name="client reducer should return a new state on user ActionType.FETCH_PROJECT_CLIENT_HIREARCHY_LIST_SUCCESS" time="0.009">
    </testcase>
    <testcase classname="client reducer should return a new state on user ActionType.FETCH_PROJECT_CLIENT_SUMMARY_SUCCESS" name="client reducer should return a new state on user ActionType.FETCH_PROJECT_CLIENT_SUMMARY_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="client reducer should return a new state on user ActionType.UPDATE_PROJECT_CLIENT_TAX_CONDITION_SUCCESS" name="client reducer should return a new state on user ActionType.UPDATE_PROJECT_CLIENT_TAX_CONDITION_SUCCESS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="statistics reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:57" time="0.146" tests="28">
    <testcase classname="statistics reducer should return state without mutations when no switch case matches" name="statistics reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on statistics ActionType.FETCH_NEW_BADGES_SUCCESS" name="statistics reducer should return a new state on statistics ActionType.FETCH_NEW_BADGES_SUCCESS" time="0">
    </testcase>
    <testcase classname="statistics reducer should return a new state on statistics ActionType.CLEAR_STATISTICS" name="statistics reducer should return a new state on statistics ActionType.CLEAR_STATISTICS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on project ActionType.FETCH_PROJECT_STATISTICS_SUCCESS" name="statistics reducer should return a new state on project ActionType.FETCH_PROJECT_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on project ActionType.CLEAR_PROJECT_STATISTICS" name="statistics reducer should return a new state on project ActionType.CLEAR_PROJECT_STATISTICS" time="0">
    </testcase>
    <testcase classname="statistics reducer should return a new state on client ActionType.FETCH_CLIENT_STATISTICS_SUCCESS" name="statistics reducer should return a new state on client ActionType.FETCH_CLIENT_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on client ActionType.CLEAR_CLIENT_STATISTICS" name="statistics reducer should return a new state on client ActionType.CLEAR_CLIENT_STATISTICS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on inventory ActionType.FETCH_INVENTORY_STATISTICS_SUCCESS" name="statistics reducer should return a new state on inventory ActionType.FETCH_INVENTORY_STATISTICS_SUCCESS" time="0">
    </testcase>
    <testcase classname="statistics reducer should return a new state on inventory ActionType.CLEAR_INVENTORY_STATISTICS" name="statistics reducer should return a new state on inventory ActionType.CLEAR_INVENTORY_STATISTICS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_WORKER_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_WORKER_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.CLEAR_WORKER_STATISTICS" name="statistics reducer should return a new state on worker ActionType.CLEAR_WORKER_STATISTICS" time="0">
    </testcase>
    <testcase classname="statistics reducer should return a new state on statistics ActionType.FETCH_GROSS_REVENUE_SUCCESS" name="statistics reducer should return a new state on statistics ActionType.FETCH_GROSS_REVENUE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on statistics ActionType.FETCH_WORKERS_ACTIVITY_SUCCESS" name="statistics reducer should return a new state on statistics ActionType.FETCH_WORKERS_ACTIVITY_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on statistics ActionType.FETCH_WORKERS_ACTIVITY_WIDGET_STATISTICS_SUCCESS" name="statistics reducer should return a new state on statistics ActionType.FETCH_WORKERS_ACTIVITY_WIDGET_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_INVOICE_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_INVOICE_STATISTICS_SUCCESS" time="0">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.CLEAR_INVOICE_STATISTICS" name="statistics reducer should return a new state on worker ActionType.CLEAR_INVOICE_STATISTICS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_PROJECTS_TOP_TEN_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_PROJECTS_TOP_TEN_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_PROJECTS_ACS_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_PROJECTS_ACS_STATISTICS_SUCCESS" time="0">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_PROJECTS_BPS_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_PROJECTS_BPS_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_TOP_TEN_STATISTICS_LIST_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_TOP_TEN_STATISTICS_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_PIE_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_PIE_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_LINE_PIE_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_LINE_PIE_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_ACTIVE_LOCATIONS_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_ACTIVE_LOCATIONS_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_CLIENT_DETAIL_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_CLIENT_DETAIL_STATISTICS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.CLEAR_CLIENT_DETAIL_STATISTICS" name="statistics reducer should return a new state on worker ActionType.CLEAR_CLIENT_DETAIL_STATISTICS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_PROJECT_DETAIL_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_PROJECT_DETAIL_STATISTICS_SUCCESS" time="0">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.CLEAR_PROJECT_DETAIL_STATISTICS" name="statistics reducer should return a new state on worker ActionType.CLEAR_PROJECT_DETAIL_STATISTICS" time="0.001">
    </testcase>
    <testcase classname="statistics reducer should return a new state on worker ActionType.FETCH_CLIENTS_TOP_TEN_STATISTICS_SUCCESS" name="statistics reducer should return a new state on worker ActionType.FETCH_CLIENTS_TOP_TEN_STATISTICS_SUCCESS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useScroll" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:57" time="0.147" tests="2">
    <testcase classname="useScroll should toggleClass false" name="useScroll should toggleClass false" time="0.004">
    </testcase>
    <testcase classname="useScroll should toggleClass true" name="useScroll should toggleClass true" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="sanitizeClient" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:57" time="0.235" tests="2">
    <testcase classname="sanitizeClient should sanitizeClient" name="sanitizeClient should sanitizeClient" time="0.003">
    </testcase>
    <testcase classname="preloadClient should preloadClient" name="preloadClient should preloadClient" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="general reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:58" time="0.292" tests="12">
    <testcase classname="general reducer should return state without mutations when no switch case matches" name="general reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="general reducer should return a new state ActionType.SET_LOADING" name="general reducer should return a new state ActionType.SET_LOADING" time="0.001">
    </testcase>
    <testcase classname="general reducer should return a new state ActionType.CLEAR_LOADING" name="general reducer should return a new state ActionType.CLEAR_LOADING" time="0.001">
    </testcase>
    <testcase classname="general reducer should return a new state ActionType.CLEAR_LOADING_MAP" name="general reducer should return a new state ActionType.CLEAR_LOADING_MAP" time="0.001">
    </testcase>
    <testcase classname="general reducer should return a new state ActionType.SET_RELATION_UI_ID" name="general reducer should return a new state ActionType.SET_RELATION_UI_ID" time="0.001">
    </testcase>
    <testcase classname="general reducer should return a new state ActionType.CLEAR_RELATION_MAP" name="general reducer should return a new state ActionType.CLEAR_RELATION_MAP" time="0">
    </testcase>
    <testcase classname="general reducer should return state for ActionType.ADD_TOAST_SUCCESS" name="general reducer should return state for ActionType.ADD_TOAST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="general reducer should return state for ActionType.REMOVE_TOAST" name="general reducer should return state for ActionType.REMOVE_TOAST" time="0.001">
    </testcase>
    <testcase classname="general reducer should return state for ActionType.SET_MODAL_MAP" name="general reducer should return state for ActionType.SET_MODAL_MAP" time="0.001">
    </testcase>
    <testcase classname="general reducer should return state for ActionType.SET_HIDE_SCROLL" name="general reducer should return state for ActionType.SET_HIDE_SCROLL" time="0.001">
    </testcase>
    <testcase classname="general reducer should return state for ActionType.FETCH_COUNTRY_LIST_SUCCESS" name="general reducer should return state for ActionType.FETCH_COUNTRY_LIST_SUCCESS" time="0">
    </testcase>
    <testcase classname="general reducer should return state for ActionType.FETCH_TIME_ZONE_LIST_SUCCESS" name="general reducer should return state for ActionType.FETCH_TIME_ZONE_LIST_SUCCESS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="access-control-system reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:58" time="0.097" tests="8">
    <testcase classname="access-control-system reducer should return state without mutations when no switch case matches" name="access-control-system reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="access-control-system reducer should return a new state on auth ActionType.FETCH_ACCESS_CONTROL_SYSTEM_LIST_SUCCESS" name="access-control-system reducer should return a new state on auth ActionType.FETCH_ACCESS_CONTROL_SYSTEM_LIST_SUCCESS" time="0">
    </testcase>
    <testcase classname="access-control-system reducer should return a new state on auth ActionType.UPDATE_ACCESS_CONTROL_SYSTEM_SUCCESS" name="access-control-system reducer should return a new state on auth ActionType.UPDATE_ACCESS_CONTROL_SYSTEM_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="access-control-system reducer should return a new state on auth ActionType.FETCH_ACCESS_CONTROL_SYSTEM_SUCCESS" name="access-control-system reducer should return a new state on auth ActionType.FETCH_ACCESS_CONTROL_SYSTEM_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="access-control-system reducer should return a new state on auth ActionType.FETCH_PROJECT_ACCESS_CONTROL_SYSTEM_LOCATION_LIST_SUCCESS" name="access-control-system reducer should return a new state on auth ActionType.FETCH_PROJECT_ACCESS_CONTROL_SYSTEM_LOCATION_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="access-control-system reducer should return a new state on client ActionType.CLEAR_ACCESS_CONTROL_SYSTEM_MAP" name="access-control-system reducer should return a new state on client ActionType.CLEAR_ACCESS_CONTROL_SYSTEM_MAP" time="0">
    </testcase>
    <testcase classname="access-control-system reducer should return a new state on client ActionType.FETCH_PROJECT_ACCESS_CONTROL_SYSTEM_SUCCESS" name="access-control-system reducer should return a new state on client ActionType.FETCH_PROJECT_ACCESS_CONTROL_SYSTEM_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="access-control-system reducer should return a new state on client ActionType.UNASSIGN_ACCESS_CONTROL_SYSTEM_PROJECT_SUCCESS" name="access-control-system reducer should return a new state on client ActionType.UNASSIGN_ACCESS_CONTROL_SYSTEM_PROJECT_SUCCESS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="workerUtils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:58" time="0.13" tests="5">
    <testcase classname="workerUtils should preloadWorker" name="workerUtils should preloadWorker" time="0.002">
    </testcase>
    <testcase classname="workerUtils should maintain null values" name="workerUtils should maintain null values" time="0.001">
    </testcase>
    <testcase classname="workerUtils should sanitizeWorker" name="workerUtils should sanitizeWorker" time="0.001">
    </testcase>
    <testcase classname="workerUtils should sanitizeWorker 2" name="workerUtils should sanitizeWorker 2" time="0.001">
    </testcase>
    <testcase classname="workerUtils should sanitizeCertification" name="workerUtils should sanitizeCertification" time="0">
    </testcase>
  </testsuite>
  <testsuite name="core epics" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:58" time="0.132" tests="1">
    <testcase classname="core epics handleErrors should dispatch no actions" name="core epics handleErrors should dispatch no actions" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="user reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:58" time="0.107" tests="13">
    <testcase classname="user reducer should return state without mutations when no switch case matches" name="user reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.VALIDATE_TOKEN_SUCCESS" name="user reducer should return a new state on user ActionType.VALIDATE_TOKEN_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.FETCH_CLIENT_USER_LIST_SUCCESS" name="user reducer should return a new state on user ActionType.FETCH_CLIENT_USER_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return isConnected ActionType.PROCORE_STATUS_SUCCESS" name="user reducer should return isConnected ActionType.PROCORE_STATUS_SUCCESS" time="0">
    </testcase>
    <testcase classname="user reducer should return ActionType.CONNECT_PROCORE_SUCCESS" name="user reducer should return ActionType.CONNECT_PROCORE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return ActionType.DISCONNECT_PROCORE_SUCCESS" name="user reducer should return ActionType.DISCONNECT_PROCORE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.FETCH_USER_ROLE_LIST_SUCCESS" name="user reducer should return a new state on user ActionType.FETCH_USER_ROLE_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.SAVE_USER_SUCCESS" name="user reducer should return a new state on user ActionType.SAVE_USER_SUCCESS" time="0">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.FETCH_PROJECT_USER_LIST_SUCCESS" name="user reducer should return a new state on user ActionType.FETCH_PROJECT_USER_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.FETCH_CLIENT_USER_LIST_SUCCESS" name="user reducer should return a new state on user ActionType.FETCH_CLIENT_USER_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on worker ActionType.CLEAR_USER_MAP" name="user reducer should return a new state on worker ActionType.CLEAR_USER_MAP" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.FETCH_ACCOUNT_DATA_SUCCESS" name="user reducer should return a new state on user ActionType.FETCH_ACCOUNT_DATA_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="user reducer should return a new state on user ActionType.CLEAR_ACCOUNT_DATA" name="user reducer should return a new state on user ActionType.CLEAR_ACCOUNT_DATA" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Logger" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.126" tests="2">
    <testcase classname="Logger should log with all logging methods" name="Logger should log with all logging methods" time="0.002">
    </testcase>
    <testcase classname="Logger should not log on the test env" name="Logger should not log on the test env" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="invoice reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.099" tests="9">
    <testcase classname="invoice reducer should return state without mutations when no switch case matches" name="invoice reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.FETCH_INVOICE_LIST_SUCCESS" name="invoice reducer should return a new state on project ActionType.FETCH_INVOICE_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.FETCH_SERVICE_TYPE_LIST_SUCCESS" name="invoice reducer should return a new state on project ActionType.FETCH_SERVICE_TYPE_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.CLEAR_INVOICE_MAP" name="invoice reducer should return a new state on project ActionType.CLEAR_INVOICE_MAP" time="0.001">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.FETCH_INVOICE_SUMMARY_SUCCESS" name="invoice reducer should return a new state on project ActionType.FETCH_INVOICE_SUMMARY_SUCCESS" time="0">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.FETCH_INVOICE_SUCCESS" name="invoice reducer should return a new state on project ActionType.FETCH_INVOICE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.DELETE_INVOICE_SUCCESS" name="invoice reducer should return a new state on project ActionType.DELETE_INVOICE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.MARK_AS_PAID_INVOICE_SUCCESS" name="invoice reducer should return a new state on project ActionType.MARK_AS_PAID_INVOICE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="invoice reducer should return a new state on project ActionType.PAY_INVOICE_SUCCESS" name="invoice reducer should return a new state on project ActionType.PAY_INVOICE_SUCCESS" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useNavigator" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.092" tests="1">
    <testcase classname="useNavigator should return" name="useNavigator should return" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="certification reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.089" tests="6">
    <testcase classname="certification reducer should return state without mutations when no switch case matches" name="certification reducer should return state without mutations when no switch case matches" time="0">
    </testcase>
    <testcase classname="certification reducer should return a new state on project ActionType.FETCH_CERTIFICATION_SUCCESS" name="certification reducer should return a new state on project ActionType.FETCH_CERTIFICATION_SUCCESS" time="0">
    </testcase>
    <testcase classname="certification reducer should return a new state on project ActionType.FETCH_CERTIFICATION_TEMPLATE_SUCCESS" name="certification reducer should return a new state on project ActionType.FETCH_CERTIFICATION_TEMPLATE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="certification reducer should return a new state on client ActionType.FETCH_WORKER_CERTIFICATION_LIST_SUCCESS" name="certification reducer should return a new state on client ActionType.FETCH_WORKER_CERTIFICATION_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="certification reducer should return a new state on client ActionType.FETCH_WORKER_CERTIFICATION_DETAIL_SUCCESS" name="certification reducer should return a new state on client ActionType.FETCH_WORKER_CERTIFICATION_DETAIL_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="certification reducer should return a new state on client ActionType.CLEAR_WORKER_MAP" name="certification reducer should return a new state on client ActionType.CLEAR_WORKER_MAP" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PrinterService" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.084" tests="2">
    <testcase classname="PrinterService should print" name="PrinterService should print" time="0.007">
    </testcase>
    <testcase classname="PrinterService should destroy" name="PrinterService should destroy" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="addressUtils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.095" tests="4">
    <testcase classname="addressUtils should sanitizeACS without readers" name="addressUtils should sanitizeACS without readers" time="0.001">
    </testcase>
    <testcase classname="addressUtils should sanitizeAssignAcs" name="addressUtils should sanitizeAssignAcs" time="0.001">
    </testcase>
    <testcase classname="addressUtils should sanitizeACS with reader 2" name="addressUtils should sanitizeACS with reader 2" time="0.001">
    </testcase>
    <testcase classname="addressUtils should sanitize ports in reader 2" name="addressUtils should sanitize ports in reader 2" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="badge reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.095" tests="7">
    <testcase classname="badge reducer should return state without mutations when no switch case matches" name="badge reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="badge reducer should return a new state on badge ActionType.FETCH_BADGE_SUCCESS" name="badge reducer should return a new state on badge ActionType.FETCH_BADGE_SUCCESS" time="0.002">
    </testcase>
    <testcase classname="badge reducer should return a new state on auth ActionType.CLEAR_MAP" name="badge reducer should return a new state on auth ActionType.CLEAR_MAP" time="0">
    </testcase>
    <testcase classname="badge reducer should return a new state on auth ActionType.UPDATE_BADGE_SUCCESS" name="badge reducer should return a new state on auth ActionType.UPDATE_BADGE_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="badge reducer should return a new state on project ActionType.FETCH_PROJECT_BADGE_VISITOR_LIST_SUCCESS" name="badge reducer should return a new state on project ActionType.FETCH_PROJECT_BADGE_VISITOR_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="badge reducer should return a new state on project ActionType.FETCH_BADGE_HISTORY_SUCCESS" name="badge reducer should return a new state on project ActionType.FETCH_BADGE_HISTORY_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="badge reducer should return a new state on project ActionType.CLEAR_BADGE_HISTORY" name="badge reducer should return a new state on project ActionType.CLEAR_BADGE_HISTORY" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="training reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:14:59" time="0.097" tests="5">
    <testcase classname="training reducer should return state without mutations when no switch case matches" name="training reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="training reducer should return a new state on project ActionType.FETCH_TRAINING_SUCCESS" name="training reducer should return a new state on project ActionType.FETCH_TRAINING_SUCCESS" time="0">
    </testcase>
    <testcase classname="training reducer should return a new state on client ActionType.FETCH_WORKER_TRAINING_LIST_SUCCESS" name="training reducer should return a new state on client ActionType.FETCH_WORKER_TRAINING_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="training reducer should return a new state on client ActionType.FETCH_WORKER_TRAINING_DETAIL_SUCCESS" name="training reducer should return a new state on client ActionType.FETCH_WORKER_TRAINING_DETAIL_SUCCESS" time="0">
    </testcase>
    <testcase classname="training reducer should return a new state on client ActionType.CLEAR_WORKER_MAP" name="training reducer should return a new state on client ActionType.CLEAR_WORKER_MAP" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Trade Utils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.092" tests="3">
    <testcase classname="Trade Utils getTradesString should get trades string" name="Trade Utils getTradesString should get trades string" time="0.002">
    </testcase>
    <testcase classname="Trade Utils getTradesString should get other trade with empty trades" name="Trade Utils getTradesString should get other trade with empty trades" time="0.001">
    </testcase>
    <testcase classname="Trade Utils getTradesString should get empty string" name="Trade Utils getTradesString should get empty string" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="payment reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.085" tests="4">
    <testcase classname="payment reducer should return state without mutations when no switch case matches" name="payment reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="payment reducer should return a new state on project ActionType.FETCH_PAYMENT_METHODS_SUCCESS" name="payment reducer should return a new state on project ActionType.FETCH_PAYMENT_METHODS_SUCCESS" time="0">
    </testcase>
    <testcase classname="payment reducer should return a new state on project ActionType.CREATE_PAYMENT_SUCCESS" name="payment reducer should return a new state on project ActionType.CREATE_PAYMENT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="payment reducer should return a new state on project ActionType.CLEAR_PAYMENT" name="payment reducer should return a new state on project ActionType.CLEAR_PAYMENT" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="invoiceUtils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.105" tests="2">
    <testcase classname="invoiceUtils should sanitize invoice" name="invoiceUtils should sanitize invoice" time="0.001">
    </testcase>
    <testcase classname="invoiceUtils should preload invoice" name="invoiceUtils should preload invoice" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="formUtils" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.102" tests="1">
    <testcase classname="formUtils should validateObject" name="formUtils should validateObject" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="auth reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.113" tests="4">
    <testcase classname="auth reducer should return state without mutations when no switch case matches" name="auth reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="auth reducer should return a new state on auth ActionType.SIGN_IN_SUCCESS" name="auth reducer should return a new state on auth ActionType.SIGN_IN_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="auth reducer should return a new state on auth ActionType.SIGN_OUT_SUCCESS" name="auth reducer should return a new state on auth ActionType.SIGN_OUT_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="auth reducer should return a new state on auth ActionType.RECOVER_SESSION_DONE" name="auth reducer should return a new state on auth ActionType.RECOVER_SESSION_DONE" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="matchHighlight" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.082" tests="1">
    <testcase classname="matchHighlight should parse a string with match" name="matchHighlight should parse a string with match" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="badge-printer-system reducer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.083" tests="5">
    <testcase classname="badge-printer-system reducer should return state without mutations when no switch case matches" name="badge-printer-system reducer should return state without mutations when no switch case matches" time="0.001">
    </testcase>
    <testcase classname="badge-printer-system reducer should return a new state on auth ActionType.FETCH_BADGE_PRINTER_SYSTEM_LIST_SUCCESS" name="badge-printer-system reducer should return a new state on auth ActionType.FETCH_BADGE_PRINTER_SYSTEM_LIST_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="badge-printer-system reducer should return a new state on auth ActionType.SAVE_BADGE_PRINTER_SYSTEM_SUCCESS" name="badge-printer-system reducer should return a new state on auth ActionType.SAVE_BADGE_PRINTER_SYSTEM_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="badge-printer-system reducer should return a new state on auth ActionType.FETCH_BADGE_PRINTER_SYSTEM_SUMMARY_SUCCESS" name="badge-printer-system reducer should return a new state on auth ActionType.FETCH_BADGE_PRINTER_SYSTEM_SUMMARY_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="badge-printer-system reducer should return a new state on client ActionType.CLEAR_BADGE_PRINTER_SYSTEM_MAP" name="badge-printer-system reducer should return a new state on client ActionType.CLEAR_BADGE_PRINTER_SYSTEM_MAP" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FileService" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:00" time="0.08" tests="1">
    <testcase classname="FileService should download" name="FileService should download" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Sidebar" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:01" time="0.519" tests="1">
    <testcase classname="Sidebar should render admin tab" name="Sidebar should render admin tab" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="ProjectWizard Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:01" time="14.906" tests="51">
    <testcase classname="ProjectWizard Component should render" name="ProjectWizard Component should render" time="0.489">
    </testcase>
    <testcase classname="ProjectWizard Component should render billing model" name="ProjectWizard Component should render billing model" time="0.202">
    </testcase>
    <testcase classname="ProjectWizard Component should render review" name="ProjectWizard Component should render review" time="0.189">
    </testcase>
    <testcase classname="ProjectWizard Component should render certifications and trainings" name="ProjectWizard Component should render certifications and trainings" time="0.329">
    </testcase>
    <testcase classname="ProjectWizard Component should select template" name="ProjectWizard Component should select template" time="0.232">
    </testcase>
    <testcase classname="ProjectWizard Component should remove certifications" name="ProjectWizard Component should remove certifications" time="0.21">
    </testcase>
    <testcase classname="ProjectWizard Component should render assign clients" name="ProjectWizard Component should render assign clients" time="0.17">
    </testcase>
    <testcase classname="ProjectWizard Component should render addresses" name="ProjectWizard Component should render addresses" time="0.169">
    </testcase>
    <testcase classname="ProjectWizard Component should change matching address" name="ProjectWizard Component should change matching address" time="0.275">
    </testcase>
    <testcase classname="ProjectWizard Component should change mailing matching address" name="ProjectWizard Component should change mailing matching address" time="0.299">
    </testcase>
    <testcase classname="ProjectWizard Component should change mailing none matching address" name="ProjectWizard Component should change mailing none matching address" time="0.333">
    </testcase>
    <testcase classname="ProjectWizard Component should render badge templates" name="ProjectWizard Component should render badge templates" time="0.764">
    </testcase>
    <testcase classname="ProjectWizard Component should render pending badge templates" name="ProjectWizard Component should render pending badge templates" time="0.894">
    </testcase>
    <testcase classname="ProjectWizard Component should render with fallback" name="ProjectWizard Component should render with fallback" time="0.162">
    </testcase>
    <testcase classname="ProjectWizard Component should render errors coming from server" name="ProjectWizard Component should render errors coming from server" time="0.158">
    </testcase>
    <testcase classname="ProjectWizard Component should render errors on upload badge" name="ProjectWizard Component should render errors on upload badge" time="0.167">
    </testcase>
    <testcase classname="ProjectWizard Component should render worker consent form" name="ProjectWizard Component should render worker consent form" time="0.1">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchProject on load" name="ProjectWizard Component should fetchProject on load" time="0.145">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchCertificationList on load" name="ProjectWizard Component should fetchCertificationList on load" time="0.143">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchCertificationTemplateList on load" name="ProjectWizard Component should fetchCertificationTemplateList on load" time="0.16">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchTrainingList on load" name="ProjectWizard Component should fetchTrainingList on load" time="0.139">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchTimeZoneList on load" name="ProjectWizard Component should fetchTimeZoneList on load" time="0.152">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchBillingTierList on load" name="ProjectWizard Component should fetchBillingTierList on load" time="0.154">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchCategoryList on load" name="ProjectWizard Component should fetchCategoryList on load" time="0.136">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchRegionList on load" name="ProjectWizard Component should fetchRegionList on load" time="0.143">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchNaeList on load" name="ProjectWizard Component should fetchNaeList on load" time="0.139">
    </testcase>
    <testcase classname="ProjectWizard Component should fetchMwbeList on load" name="ProjectWizard Component should fetchMwbeList on load" time="0.143">
    </testcase>
    <testcase classname="ProjectWizard Component should consentFormFields on load" name="ProjectWizard Component should consentFormFields on load" time="0.153">
    </testcase>
    <testcase classname="ProjectWizard Component should reset form" name="ProjectWizard Component should reset form" time="0.243">
    </testcase>
    <testcase classname="ProjectWizard Component should save form" name="ProjectWizard Component should save form" time="0.226">
    </testcase>
    <testcase classname="ProjectWizard Component should show validations save invalid data" name="ProjectWizard Component should show validations save invalid data" time="0.244">
    </testcase>
    <testcase classname="ProjectWizard Component should update form" name="ProjectWizard Component should update form" time="0.208">
    </testcase>
    <testcase classname="ProjectWizard Component should update billing info" name="ProjectWizard Component should update billing info" time="0.338">
    </testcase>
    <testcase classname="ProjectWizard Component should update billing info for first time" name="ProjectWizard Component should update billing info for first time" time="0.193">
    </testcase>
    <testcase classname="ProjectWizard Component should change billed company" name="ProjectWizard Component should change billed company" time="0.446">
    </testcase>
    <testcase classname="ProjectWizard Component should update seats billing info" name="ProjectWizard Component should update seats billing info" time="0.583">
    </testcase>
    <testcase classname="ProjectWizard Component should update seats billing info for first time" name="ProjectWizard Component should update seats billing info for first time" time="0.355">
    </testcase>
    <testcase classname="ProjectWizard Component should send seat price from tier" name="ProjectWizard Component should send seat price from tier" time="0.239">
    </testcase>
    <testcase classname="ProjectWizard Component should update seats billing info for first time" name="ProjectWizard Component should update seats billing info for first time" time="0.298">
    </testcase>
    <testcase classname="ProjectWizard Component should change seat price" name="ProjectWizard Component should change seat price" time="0.286">
    </testcase>
    <testcase classname="ProjectWizard Component should update seats billed company" name="ProjectWizard Component should update seats billed company" time="0.242">
    </testcase>
    <testcase classname="ProjectWizard Component should show validations for billing model" name="ProjectWizard Component should show validations for billing model" time="0.193">
    </testcase>
    <testcase classname="ProjectWizard Component should show validations for seats model" name="ProjectWizard Component should show validations for seats model" time="0.256">
    </testcase>
    <testcase classname="ProjectWizard Component should count billed company as required field" name="ProjectWizard Component should count billed company as required field" time="0.132">
    </testcase>
    <testcase classname="ProjectWizard Component should update addresses" name="ProjectWizard Component should update addresses" time="0.456">
    </testcase>
    <testcase classname="ProjectWizard Component should update secondary addresses" name="ProjectWizard Component should update secondary addresses" time="0.33">
    </testcase>
    <testcase classname="ProjectWizard Component should render dialog when moves step without saving changes" name="ProjectWizard Component should render dialog when moves step without saving changes" time="0.344">
    </testcase>
    <testcase classname="ProjectWizard Component should render dialog when moves away from client flow" name="ProjectWizard Component should render dialog when moves away from client flow" time="0.568">
    </testcase>
    <testcase classname="ProjectWizard Component should clearErrors" name="ProjectWizard Component should clearErrors" time="0.152">
    </testcase>
    <testcase classname="ProjectWizard Component should send project for approval" name="ProjectWizard Component should send project for approval" time="0.169">
    </testcase>
    <testcase classname="ProjectWizard Component should approve project" name="ProjectWizard Component should approve project" time="0.165">
    </testcase>
  </testsuite>
  <testsuite name="WorkerWizard" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:16" time="14.928" tests="31">
    <testcase classname="WorkerWizard should render" name="WorkerWizard should render" time="0.518">
    </testcase>
    <testcase classname="WorkerWizard should render client worker" name="WorkerWizard should render client worker" time="0.413">
    </testcase>
    <testcase classname="WorkerWizard should render fallback" name="WorkerWizard should render fallback" time="0.338">
    </testcase>
    <testcase classname="WorkerWizard should unmount" name="WorkerWizard should unmount" time="0.284">
    </testcase>
    <testcase classname="WorkerWizard should fetchWorker" name="WorkerWizard should fetchWorker" time="0.286">
    </testcase>
    <testcase classname="WorkerWizard should reset form" name="WorkerWizard should reset form" time="1.094">
    </testcase>
    <testcase classname="WorkerWizard should save worker" name="WorkerWizard should save worker" time="1.266">
    </testcase>
    <testcase classname="WorkerWizard should update worker" name="WorkerWizard should update worker" time="0.505">
    </testcase>
    <testcase classname="WorkerWizard should render loading server errors" name="WorkerWizard should render loading server errors" time="0.317">
    </testcase>
    <testcase classname="WorkerWizard should render server errors on save" name="WorkerWizard should render server errors on save" time="0.314">
    </testcase>
    <testcase classname="WorkerWizard should show validations" name="WorkerWizard should show validations" time="0.664">
    </testcase>
    <testcase classname="WorkerWizard should validate required fields" name="WorkerWizard should validate required fields" time="1.102">
    </testcase>
    <testcase classname="WorkerWizard should NOT navigate when loading and click away" name="WorkerWizard should NOT navigate when loading and click away" time="0.339">
    </testcase>
    <testcase classname="WorkerWizard should render dialog" name="WorkerWizard should render dialog" time="0.685">
    </testcase>
    <testcase classname="WorkerWizard should fetchEthnicityList" name="WorkerWizard should fetchEthnicityList" time="0.341">
    </testcase>
    <testcase classname="WorkerWizard should fetchLanguageList" name="WorkerWizard should fetchLanguageList" time="0.301">
    </testcase>
    <testcase classname="WorkerWizard should fetchJobTitleList" name="WorkerWizard should fetchJobTitleList" time="0.281">
    </testcase>
    <testcase classname="WorkerWizard should fetchTradeStatusList" name="WorkerWizard should fetchTradeStatusList" time="0.245">
    </testcase>
    <testcase classname="WorkerWizard should fetchSkilledTradeList" name="WorkerWizard should fetchSkilledTradeList" time="0.275">
    </testcase>
    <testcase classname="WorkerWizard should fetchIdentificationTypeList" name="WorkerWizard should fetchIdentificationTypeList" time="0.236">
    </testcase>
    <testcase classname="WorkerWizard should fetchSocJobTitleList" name="WorkerWizard should fetchSocJobTitleList" time="0.284">
    </testcase>
    <testcase classname="WorkerWizard should render company for FCA_ADMIN" name="WorkerWizard should render company for FCA_ADMIN" time="0.272">
    </testcase>
    <testcase classname="WorkerWizard should hide company for CLIENT_ADMIN" name="WorkerWizard should hide company for CLIENT_ADMIN" time="0.243">
    </testcase>
    <testcase classname="WorkerWizard should fetchIdentificationTypeList" name="WorkerWizard should fetchIdentificationTypeList" time="0.244">
    </testcase>
    <testcase classname="WorkerWizard should fetchSocJobTitleList" name="WorkerWizard should fetchSocJobTitleList" time="0.774">
    </testcase>
    <testcase classname="WorkerWizard should open existing worker modal" name="WorkerWizard should open existing worker modal" time="0.477">
    </testcase>
    <testcase classname="WorkerWizard should navigate to existing worker profile" name="WorkerWizard should navigate to existing worker profile" time="0.615">
    </testcase>
    <testcase classname="WorkerWizard should close existing worker modal" name="WorkerWizard should close existing worker modal" time="0.478">
    </testcase>
    <testcase classname="WorkerWizard should open existing worker modal for client admin" name="WorkerWizard should open existing worker modal for client admin" time="0.375">
    </testcase>
    <testcase classname="WorkerWizard should open existing worker modal for regular user" name="WorkerWizard should open existing worker modal for regular user" time="0.369">
    </testcase>
    <testcase classname="WorkerWizard should disable worker client" name="WorkerWizard should disable worker client" time="0.28">
    </testcase>
  </testsuite>
  <testsuite name="ProjectDetail" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:31" time="10.753" tests="37">
    <testcase classname="ProjectDetail should fetchProject" name="ProjectDetail should fetchProject" time="0.241">
    </testcase>
    <testcase classname="ProjectDetail should fetchProjectStatistics" name="ProjectDetail should fetchProjectStatistics" time="0.192">
    </testcase>
    <testcase classname="ProjectDetail should fetchCategoryList on mount" name="ProjectDetail should fetchCategoryList on mount" time="0.191">
    </testcase>
    <testcase classname="ProjectDetail should fetchRegionList on mount" name="ProjectDetail should fetchRegionList on mount" time="0.175">
    </testcase>
    <testcase classname="ProjectDetail should fetchNaeList on mount" name="ProjectDetail should fetchNaeList on mount" time="0.165">
    </testcase>
    <testcase classname="ProjectDetail should fetchBillingTierList on mount" name="ProjectDetail should fetchBillingTierList on mount" time="0.176">
    </testcase>
    <testcase classname="ProjectDetail should fetchCertificationList on mount" name="ProjectDetail should fetchCertificationList on mount" time="0.173">
    </testcase>
    <testcase classname="ProjectDetail should fetchCertificationTemplateList on mount" name="ProjectDetail should fetchCertificationTemplateList on mount" time="0.157">
    </testcase>
    <testcase classname="ProjectDetail should fetchConsentFormFields on mount" name="ProjectDetail should fetchConsentFormFields on mount" time="0.172">
    </testcase>
    <testcase classname="ProjectDetail should fetchTrainingList on mount" name="ProjectDetail should fetchTrainingList on mount" time="0.148">
    </testcase>
    <testcase classname="ProjectDetail should unmount" name="ProjectDetail should unmount" time="0.15">
    </testcase>
    <testcase classname="ProjectDetail should render loader" name="ProjectDetail should render loader" time="0.049">
    </testcase>
    <testcase classname="ProjectDetail should render information tab" name="ProjectDetail should render information tab" time="0.118">
    </testcase>
    <testcase classname="ProjectDetail should edit information" name="ProjectDetail should edit information" time="0.401">
    </testcase>
    <testcase classname="ProjectDetail should edit billing" name="ProjectDetail should edit billing" time="0.385">
    </testcase>
    <testcase classname="ProjectDetail should fetchTimeZoneList on load" name="ProjectDetail should fetchTimeZoneList on load" time="0.141">
    </testcase>
    <testcase classname="ProjectDetail should discard changes and close modal" name="ProjectDetail should discard changes and close modal" time="0.399">
    </testcase>
    <testcase classname="ProjectDetail should show validations" name="ProjectDetail should show validations" time="0.447">
    </testcase>
    <testcase classname="ProjectDetail should edit billing information" name="ProjectDetail should edit billing information" time="0.37">
    </testcase>
    <testcase classname="ProjectDetail should show billing validations" name="ProjectDetail should show billing validations" time="0.487">
    </testcase>
    <testcase classname="ProjectDetail should show seat billing validations" name="ProjectDetail should show seat billing validations" time="1.205">
    </testcase>
    <testcase classname="ProjectDetail should edit addresses" name="ProjectDetail should edit addresses" time="0.364">
    </testcase>
    <testcase classname="ProjectDetail should show address validations" name="ProjectDetail should show address validations" time="0.315">
    </testcase>
    <testcase classname="ProjectDetail should edit certifications" name="ProjectDetail should edit certifications" time="0.268">
    </testcase>
    <testcase classname="ProjectDetail should render subContractor Modal" name="ProjectDetail should render subContractor Modal" time="0.252">
    </testcase>
    <testcase classname="ProjectDetail should render User Modal" name="ProjectDetail should render User Modal" time="0.22">
    </testcase>
    <testcase classname="ProjectDetail should archive project" name="ProjectDetail should archive project" time="0.202">
    </testcase>
    <testcase classname="ProjectDetail should unarchive project" name="ProjectDetail should unarchive project" time="0.195">
    </testcase>
    <testcase classname="ProjectDetail should close archive modal" name="ProjectDetail should close archive modal" time="0.193">
    </testcase>
    <testcase classname="ProjectDetail should render ACS Modal" name="ProjectDetail should render ACS Modal" time="0.269">
    </testcase>
    <testcase classname="ProjectDetail should render BPS Modal" name="ProjectDetail should render BPS Modal" time="0.26">
    </testcase>
    <testcase classname="ProjectDetail should render worker Modal" name="ProjectDetail should render worker Modal" time="0.225">
    </testcase>
    <testcase classname="ProjectDetail should render invoices tab" name="ProjectDetail should render invoices tab" time="0.142">
    </testcase>
    <testcase classname="ProjectDetail should render visitors tab" name="ProjectDetail should render visitors tab" time="0.157">
    </testcase>
    <testcase classname="ProjectDetail should change users page" name="ProjectDetail should change users page" time="0.098">
    </testcase>
    <testcase classname="ProjectDetail should edit payment method" name="ProjectDetail should edit payment method" time="0.226">
    </testcase>
    <testcase classname="ProjectDetail should not set payment method selected if there is not" name="ProjectDetail should not set payment method selected if there is not" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="AssignSubContractorModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:42" time="4.784" tests="15">
    <testcase classname="AssignSubContractorModal should fetchSubContractorList" name="AssignSubContractorModal should fetchSubContractorList" time="0.151">
    </testcase>
    <testcase classname="AssignSubContractorModal should render" name="AssignSubContractorModal should render" time="0.116">
    </testcase>
    <testcase classname="AssignSubContractorModal should render loading" name="AssignSubContractorModal should render loading" time="0.133">
    </testcase>
    <testcase classname="AssignSubContractorModal should unMount" name="AssignSubContractorModal should unMount" time="0.154">
    </testcase>
    <testcase classname="AssignSubContractorModal should search" name="AssignSubContractorModal should search" time="0.945">
    </testcase>
    <testcase classname="AssignSubContractorModal should select item" name="AssignSubContractorModal should select item" time="0.567">
    </testcase>
    <testcase classname="AssignSubContractorModal should prevent select empty client" name="AssignSubContractorModal should prevent select empty client" time="0.139">
    </testcase>
    <testcase classname="AssignSubContractorModal should reset" name="AssignSubContractorModal should reset" time="0.187">
    </testcase>
    <testcase classname="AssignSubContractorModal should change page" name="AssignSubContractorModal should change page" time="0.255">
    </testcase>
    <testcase classname="AssignSubContractorModal should submit" name="AssignSubContractorModal should submit" time="0.288">
    </testcase>
    <testcase classname="AssignSubContractorModal should show selected" name="AssignSubContractorModal should show selected" time="0.319">
    </testcase>
    <testcase classname="AssignSubContractorModal should search by name on show selected filter" name="AssignSubContractorModal should search by name on show selected filter" time="0.349">
    </testcase>
    <testcase classname="AssignSubContractorModal should render not found" name="AssignSubContractorModal should render not found" time="0.31">
    </testcase>
    <testcase classname="AssignSubContractorModal should filter location" name="AssignSubContractorModal should filter location" time="0.274">
    </testcase>
    <testcase classname="AssignSubContractorModal should select tax condition" name="AssignSubContractorModal should select tax condition" time="0.266">
    </testcase>
  </testsuite>
  <testsuite name="AssignAccessControlSystemModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:47" time="5.38" tests="16">
    <testcase classname="AssignAccessControlSystemModal should fetchAccessControlSystemList" name="AssignAccessControlSystemModal should fetchAccessControlSystemList" time="0.295">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should render assign step" name="AssignAccessControlSystemModal should render assign step" time="0.233">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should render device step" name="AssignAccessControlSystemModal should render device step" time="0.313">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should render assign step loading" name="AssignAccessControlSystemModal should render assign step loading" time="0.097">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should render device step loading" name="AssignAccessControlSystemModal should render device step loading" time="0.095">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should search" name="AssignAccessControlSystemModal should search" time="0.176">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should select item" name="AssignAccessControlSystemModal should select item" time="0.19">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should change page" name="AssignAccessControlSystemModal should change page" time="0.174">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should assignAccessControlSystem" name="AssignAccessControlSystemModal should assignAccessControlSystem" time="0.583">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should updateAccessControlSystem" name="AssignAccessControlSystemModal should updateAccessControlSystem" time="0.287">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should fetchProjectAccessControlSystem" name="AssignAccessControlSystemModal should fetchProjectAccessControlSystem" time="0.298">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should discard changes" name="AssignAccessControlSystemModal should discard changes" time="1.062">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should search with show selected filter" name="AssignAccessControlSystemModal should search with show selected filter" time="0.458">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should render not found" name="AssignAccessControlSystemModal should render not found" time="0.229">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should unMount" name="AssignAccessControlSystemModal should unMount" time="0.17">
    </testcase>
    <testcase classname="AssignAccessControlSystemModal should change type filter" name="AssignAccessControlSystemModal should change type filter" time="0.176">
    </testcase>
  </testsuite>
  <testsuite name="BadgeSummaryModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:53" time="3.97" tests="16">
    <testcase classname="BadgeSummaryModal should loading" name="BadgeSummaryModal should loading" time="0.121">
    </testcase>
    <testcase classname="BadgeSummaryModal should show loading error" name="BadgeSummaryModal should show loading error" time="0.244">
    </testcase>
    <testcase classname="BadgeSummaryModal should print loading" name="BadgeSummaryModal should print loading" time="0.23">
    </testcase>
    <testcase classname="BadgeSummaryModal should render badge tab" name="BadgeSummaryModal should render badge tab" time="0.206">
    </testcase>
    <testcase classname="BadgeSummaryModal should render secondary values" name="BadgeSummaryModal should render secondary values" time="0.207">
    </testcase>
    <testcase classname="BadgeSummaryModal should render expired" name="BadgeSummaryModal should render expired" time="0.209">
    </testcase>
    <testcase classname="BadgeSummaryModal should render history tab" name="BadgeSummaryModal should render history tab" time="0.181">
    </testcase>
    <testcase classname="BadgeSummaryModal should activate" name="BadgeSummaryModal should activate" time="0.272">
    </testcase>
    <testcase classname="BadgeSummaryModal should close modal" name="BadgeSummaryModal should close modal" time="0.327">
    </testcase>
    <testcase classname="BadgeSummaryModal should confirm" name="BadgeSummaryModal should confirm" time="0.251">
    </testcase>
    <testcase classname="BadgeSummaryModal should close on confirm" name="BadgeSummaryModal should close on confirm" time="0.17">
    </testcase>
    <testcase classname="BadgeSummaryModal should submit" name="BadgeSummaryModal should submit" time="0.24">
    </testcase>
    <testcase classname="BadgeSummaryModal should discard" name="BadgeSummaryModal should discard" time="0.236">
    </testcase>
    <testcase classname="BadgeSummaryModal should show date validation" name="BadgeSummaryModal should show date validation" time="0.228">
    </testcase>
    <testcase classname="BadgeSummaryModal should load with changes after action" name="BadgeSummaryModal should load with changes after action" time="0.302">
    </testcase>
    <testcase classname="BadgeSummaryModal should disable action when Synchronizing" name="BadgeSummaryModal should disable action when Synchronizing" time="0.182">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceTable" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:15:57" time="4.511" tests="19">
    <testcase classname="InvoiceTable should render" name="InvoiceTable should render" time="0.175">
    </testcase>
    <testcase classname="InvoiceTable should render payment column" name="InvoiceTable should render payment column" time="0.239">
    </testcase>
    <testcase classname="InvoiceTable should render without project and client" name="InvoiceTable should render without project and client" time="1.469">
    </testcase>
    <testcase classname="InvoiceTable should render no FcAdmin" name="InvoiceTable should render no FcAdmin" time="0.138">
    </testcase>
    <testcase classname="InvoiceTable should render loading" name="InvoiceTable should render loading" time="0.049">
    </testcase>
    <testcase classname="InvoiceTable should change page" name="InvoiceTable should change page" time="0.122">
    </testcase>
    <testcase classname="InvoiceTable should navigate to client details" name="InvoiceTable should navigate to client details" time="0.109">
    </testcase>
    <testcase classname="InvoiceTable should navigate to project details" name="InvoiceTable should navigate to project details" time="0.112">
    </testcase>
    <testcase classname="InvoiceTable should open invoice drawer" name="InvoiceTable should open invoice drawer" time="0.094">
    </testcase>
    <testcase classname="InvoiceTable should delete invoice" name="InvoiceTable should delete invoice" time="0.206">
    </testcase>
    <testcase classname="InvoiceTable should close confirm modal" name="InvoiceTable should close confirm modal" time="0.184">
    </testcase>
    <testcase classname="InvoiceTable should mark as paid invoice" name="InvoiceTable should mark as paid invoice" time="0.209">
    </testcase>
    <testcase classname="InvoiceTable should pay invoice" name="InvoiceTable should pay invoice" time="0.195">
    </testcase>
    <testcase classname="InvoiceTable should edit invoice" name="InvoiceTable should edit invoice" time="0.133">
    </testcase>
    <testcase classname="InvoiceTable should open invoice information" name="InvoiceTable should open invoice information" time="0.181">
    </testcase>
    <testcase classname="InvoiceTable should confirm invoice" name="InvoiceTable should confirm invoice" time="0.18">
    </testcase>
    <testcase classname="InvoiceTable should hide buttons for Automatic invoice" name="InvoiceTable should hide buttons for Automatic invoice" time="0.119">
    </testcase>
    <testcase classname="InvoiceTable should void invoice" name="InvoiceTable should void invoice" time="0.174">
    </testcase>
    <testcase classname="InvoiceTable should open edit draft invoice" name="InvoiceTable should open edit draft invoice" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="IntegrationsTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:01" time="1.774" tests="11">
    <testcase classname="IntegrationsTab should render" name="IntegrationsTab should render" time="0.057">
    </testcase>
    <testcase classname="IntegrationsTab should show watch tutorial modal" name="IntegrationsTab should show watch tutorial modal" time="0.109">
    </testcase>
    <testcase classname="IntegrationsTab should close modal" name="IntegrationsTab should close modal" time="0.09">
    </testcase>
    <testcase classname="IntegrationsTab should show connect modal" name="IntegrationsTab should show connect modal" time="0.138">
    </testcase>
    <testcase classname="IntegrationsTab should show disconnect button" name="IntegrationsTab should show disconnect button" time="0.176">
    </testcase>
    <testcase classname="IntegrationsTab should show connect after clicking disconnect" name="IntegrationsTab should show connect after clicking disconnect" time="0.196">
    </testcase>
    <testcase classname="IntegrationsTab should show value changed" name="IntegrationsTab should show value changed" time="0.132">
    </testcase>
    <testcase classname="IntegrationsTab should submit" name="IntegrationsTab should submit" time="0.115">
    </testcase>
    <testcase classname="IntegrationsTab should close Connect Modal" name="IntegrationsTab should close Connect Modal" time="0.118">
    </testcase>
    <testcase classname="IntegrationsTab should show error Connect Modal" name="IntegrationsTab should show error Connect Modal" time="0.109">
    </testcase>
    <testcase classname="IntegrationsTab should inputs be empty" name="IntegrationsTab should inputs be empty" time="0.168">
    </testcase>
  </testsuite>
  <testsuite name="CertificationTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:03" time="2.587" tests="13">
    <testcase classname="CertificationTab should fetchWorkerCertificationList" name="CertificationTab should fetchWorkerCertificationList" time="0.062">
    </testcase>
    <testcase classname="CertificationTab should fetchCertificationList" name="CertificationTab should fetchCertificationList" time="0.062">
    </testcase>
    <testcase classname="CertificationTab should render" name="CertificationTab should render" time="0.074">
    </testcase>
    <testcase classname="CertificationTab should render with secondary values" name="CertificationTab should render with secondary values" time="0.079">
    </testcase>
    <testcase classname="CertificationTab should render loading" name="CertificationTab should render loading" time="0.035">
    </testcase>
    <testcase classname="CertificationTab should render detail loading" name="CertificationTab should render detail loading" time="0.12">
    </testcase>
    <testcase classname="CertificationTab should render modal" name="CertificationTab should render modal" time="0.304">
    </testcase>
    <testcase classname="CertificationTab should add certification" name="CertificationTab should add certification" time="0.62">
    </testcase>
    <testcase classname="CertificationTab should show form validations" name="CertificationTab should show form validations" time="0.329">
    </testcase>
    <testcase classname="CertificationTab detail should render values" name="CertificationTab detail should render values" time="0.155">
    </testcase>
    <testcase classname="CertificationTab detail should render null values" name="CertificationTab detail should render null values" time="0.124">
    </testcase>
    <testcase classname="CertificationTab should filter by project" name="CertificationTab should filter by project" time="0.087">
    </testcase>
    <testcase classname="CertificationTab should filter by no related project" name="CertificationTab should filter by no related project" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="VisitorsTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:06" time="4.101" tests="14">
    <testcase classname="VisitorsTab should render empty" name="VisitorsTab should render empty" time="0.137">
    </testcase>
    <testcase classname="VisitorsTab should render loading" name="VisitorsTab should render loading" time="0.02">
    </testcase>
    <testcase classname="VisitorsTab should render" name="VisitorsTab should render" time="0.175">
    </testcase>
    <testcase classname="VisitorsTab should fetchBadgeVisitorEntityList" name="VisitorsTab should fetchBadgeVisitorEntityList" time="0.153">
    </testcase>
    <testcase classname="VisitorsTab should hide create badges when not FcAdmin" name="VisitorsTab should hide create badges when not FcAdmin" time="0.153">
    </testcase>
    <testcase classname="VisitorsTab should create badge visitors" name="VisitorsTab should create badge visitors" time="0.222">
    </testcase>
    <testcase classname="VisitorsTab should open visitor badge modal" name="VisitorsTab should open visitor badge modal" time="0.3">
    </testcase>
    <testcase classname="VisitorsTab should open assign visitor badge modal" name="VisitorsTab should open assign visitor badge modal" time="0.391">
    </testcase>
    <testcase classname="VisitorsTab should unassign" name="VisitorsTab should unassign" time="0.326">
    </testcase>
    <testcase classname="VisitorsTab should fetchProjectBadgeVisitorList" name="VisitorsTab should fetchProjectBadgeVisitorList" time="1.287">
    </testcase>
    <testcase classname="VisitorsTab should avoid assign when Synchronizing" name="VisitorsTab should avoid assign when Synchronizing" time="0.134">
    </testcase>
    <testcase classname="VisitorsTab should save" name="VisitorsTab should save" time="0.159">
    </testcase>
    <testcase classname="VisitorsTab should change entity filter" name="VisitorsTab should change entity filter" time="0.147">
    </testcase>
    <testcase classname="VisitorsTab should unMount" name="VisitorsTab should unMount" time="0.131">
    </testcase>
  </testsuite>
  <testsuite name="AssignVisitorBadgeModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:10" time="2.877" tests="9">
    <testcase classname="AssignVisitorBadgeModal should render" name="AssignVisitorBadgeModal should render" time="0.281">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should render secondary values" name="AssignVisitorBadgeModal should render secondary values" time="0.264">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should render loading" name="AssignVisitorBadgeModal should render loading" time="0.198">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should close" name="AssignVisitorBadgeModal should close" time="0.209">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should assign" name="AssignVisitorBadgeModal should assign" time="0.477">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should assign secondary values" name="AssignVisitorBadgeModal should assign secondary values" time="0.219">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should assign other" name="AssignVisitorBadgeModal should assign other" time="0.34">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should show validations" name="AssignVisitorBadgeModal should show validations" time="0.318">
    </testcase>
    <testcase classname="AssignVisitorBadgeModal should discard" name="AssignVisitorBadgeModal should discard" time="0.269">
    </testcase>
  </testsuite>
  <testsuite name="ProjectBadgeModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:13" time="2.403" tests="9">
    <testcase classname="ProjectBadgeModal should render fallback" name="ProjectBadgeModal should render fallback" time="0.213">
    </testcase>
    <testcase classname="ProjectBadgeModal should render" name="ProjectBadgeModal should render" time="0.2">
    </testcase>
    <testcase classname="ProjectBadgeModal should activate" name="ProjectBadgeModal should activate" time="0.286">
    </testcase>
    <testcase classname="ProjectBadgeModal should validate tagId" name="ProjectBadgeModal should validate tagId" time="0.267">
    </testcase>
    <testcase classname="ProjectBadgeModal should deactivate" name="ProjectBadgeModal should deactivate" time="0.34">
    </testcase>
    <testcase classname="ProjectBadgeModal should prevent deactivate" name="ProjectBadgeModal should prevent deactivate" time="0.193">
    </testcase>
    <testcase classname="ProjectBadgeModal should revoke" name="ProjectBadgeModal should revoke" time="0.247">
    </testcase>
    <testcase classname="ProjectBadgeModal should prevent reactivate" name="ProjectBadgeModal should prevent reactivate" time="0.164">
    </testcase>
    <testcase classname="ProjectBadgeModal should print" name="ProjectBadgeModal should print" time="0.154">
    </testcase>
  </testsuite>
  <testsuite name="AssignBadgePrintingSystemModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:16" time="4.208" tests="10">
    <testcase classname="AssignBadgePrintingSystemModal should fetchBadgePrintingSystemList" name="AssignBadgePrintingSystemModal should fetchBadgePrintingSystemList" time="0.156">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should render" name="AssignBadgePrintingSystemModal should render" time="0.218">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should render loading" name="AssignBadgePrintingSystemModal should render loading" time="0.213">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should search" name="AssignBadgePrintingSystemModal should search" time="0.216">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should select item" name="AssignBadgePrintingSystemModal should select item" time="0.234">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should change page" name="AssignBadgePrintingSystemModal should change page" time="0.183">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should submit" name="AssignBadgePrintingSystemModal should submit" time="0.191">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should show selected" name="AssignBadgePrintingSystemModal should show selected" time="0.426">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should search with show selected filter" name="AssignBadgePrintingSystemModal should search with show selected filter" time="1.773">
    </testcase>
    <testcase classname="AssignBadgePrintingSystemModal should render not found" name="AssignBadgePrintingSystemModal should render not found" time="0.266">
    </testcase>
  </testsuite>
  <testsuite name="ConsentForm" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:20" time="1.731" tests="9">
    <testcase classname="ConsentForm should fetchConsentForm" name="ConsentForm should fetchConsentForm" time="0.175">
    </testcase>
    <testcase classname="ConsentForm should render fallback" name="ConsentForm should render fallback" time="0.12">
    </testcase>
    <testcase classname="ConsentForm should render" name="ConsentForm should render" time="0.115">
    </testcase>
    <testcase classname="ConsentForm should close" name="ConsentForm should close" time="0.126">
    </testcase>
    <testcase classname="ConsentForm should render secondary values" name="ConsentForm should render secondary values" time="0.156">
    </testcase>
    <testcase classname="ConsentForm should render loading" name="ConsentForm should render loading" time="0.055">
    </testcase>
    <testcase classname="ConsentForm should save" name="ConsentForm should save" time="0.283">
    </testcase>
    <testcase classname="ConsentForm should validate" name="ConsentForm should validate" time="0.216">
    </testcase>
    <testcase classname="ConsentForm should download consent form" name="ConsentForm should download consent form" time="0.115">
    </testcase>
  </testsuite>
  <testsuite name="AssignSubContractorTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:22" time="2.091" tests="6">
    <testcase classname="AssignSubContractorTab should render" name="AssignSubContractorTab should render" time="0.271">
    </testcase>
    <testcase classname="AssignSubContractorTab should open modal" name="AssignSubContractorTab should open modal" time="0.3">
    </testcase>
    <testcase classname="AssignSubContractorTab should unmount" name="AssignSubContractorTab should unmount" time="0.267">
    </testcase>
    <testcase classname="AssignSubContractorTab should change view type" name="AssignSubContractorTab should change view type" time="0.295">
    </testcase>
    <testcase classname="AssignSubContractorTab should change role filter" name="AssignSubContractorTab should change role filter" time="0.323">
    </testcase>
    <testcase classname="AssignSubContractorTab should change location filter" name="AssignSubContractorTab should change location filter" time="0.324">
    </testcase>
  </testsuite>
  <testsuite name="WorkerModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:24" time="3.872" tests="10">
    <testcase classname="WorkerModal should render" name="WorkerModal should render" time="0.236">
    </testcase>
    <testcase classname="WorkerModal should fetchWorkerList" name="WorkerModal should fetchWorkerList" time="0.097">
    </testcase>
    <testcase classname="WorkerModal should render loading" name="WorkerModal should render loading" time="0.105">
    </testcase>
    <testcase classname="WorkerModal should search" name="WorkerModal should search" time="0.203">
    </testcase>
    <testcase classname="WorkerModal should select item" name="WorkerModal should select item" time="0.207">
    </testcase>
    <testcase classname="WorkerModal should change page" name="WorkerModal should change page" time="0.194">
    </testcase>
    <testcase classname="WorkerModal should submit" name="WorkerModal should submit" time="0.176">
    </testcase>
    <testcase classname="WorkerModal should show selected" name="WorkerModal should show selected" time="0.213">
    </testcase>
    <testcase classname="WorkerModal should search with show selected filter" name="WorkerModal should search with show selected filter" time="0.458">
    </testcase>
    <testcase classname="WorkerModal should render not found" name="WorkerModal should render not found" time="1.664">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrinterSystemTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:28" time="2.036" tests="12">
    <testcase classname="BadgePrinterSystemTab should render" name="BadgePrinterSystemTab should render" time="0.144">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should show loading" name="BadgePrinterSystemTab should show loading" time="0.077">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should open device drawer" name="BadgePrinterSystemTab should open device drawer" time="0.169">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should close drawer" name="BadgePrinterSystemTab should close drawer" time="0.133">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should change page" name="BadgePrinterSystemTab should change page" time="0.13">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should delete access control system with many items" name="BadgePrinterSystemTab should delete access control system with many items" time="0.18">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should delete access control system with one item" name="BadgePrinterSystemTab should delete access control system with one item" time="0.196">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should delete last access control system in page" name="BadgePrinterSystemTab should delete last access control system in page" time="0.172">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should cancel delete access control system" name="BadgePrinterSystemTab should cancel delete access control system" time="0.19">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should navigate to create ACS device" name="BadgePrinterSystemTab should navigate to create ACS device" time="0.074">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should change status filter" name="BadgePrinterSystemTab should change status filter" time="0.095">
    </testcase>
    <testcase classname="BadgePrinterSystemTab should change status filter to all" name="BadgePrinterSystemTab should change status filter to all" time="0.129">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:30" time="2.024" tests="12">
    <testcase classname="AccessControlSystemTab should fetchProjectAccessControlSystemLocationList" name="AccessControlSystemTab should fetchProjectAccessControlSystemLocationList" time="0.159">
    </testcase>
    <testcase classname="AccessControlSystemTab should fetchProjectAccessControlSystemList" name="AccessControlSystemTab should fetchProjectAccessControlSystemList" time="0.138">
    </testcase>
    <testcase classname="AccessControlSystemTab should render clear and fetchProjectAccessControlSystemList" name="AccessControlSystemTab should render clear and fetchProjectAccessControlSystemList" time="0.119">
    </testcase>
    <testcase classname="AccessControlSystemTab should render empty" name="AccessControlSystemTab should render empty" time="0.13">
    </testcase>
    <testcase classname="AccessControlSystemTab should render" name="AccessControlSystemTab should render" time="0.136">
    </testcase>
    <testcase classname="AccessControlSystemTab should render loading" name="AccessControlSystemTab should render loading" time="0.021">
    </testcase>
    <testcase classname="AccessControlSystemTab should show drawer loading" name="AccessControlSystemTab should show drawer loading" time="0.107">
    </testcase>
    <testcase classname="AccessControlSystemTab should show edition modal" name="AccessControlSystemTab should show edition modal" time="0.263">
    </testcase>
    <testcase classname="AccessControlSystemTab should unassign" name="AccessControlSystemTab should unassign" time="0.158">
    </testcase>
    <testcase classname="AccessControlSystemTab should closeModal" name="AccessControlSystemTab should closeModal" time="0.212">
    </testcase>
    <testcase classname="AccessControlSystemTab should change acs type filter" name="AccessControlSystemTab should change acs type filter" time="0.134">
    </testcase>
    <testcase classname="AccessControlSystemTab should unMount" name="AccessControlSystemTab should unMount" time="0.116">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:32" time="1.942" tests="13">
    <testcase classname="AccessControlSystemTab should render" name="AccessControlSystemTab should render" time="0.111">
    </testcase>
    <testcase classname="AccessControlSystemTab should show loading" name="AccessControlSystemTab should show loading" time="0.072">
    </testcase>
    <testcase classname="AccessControlSystemTab should open device drawer" name="AccessControlSystemTab should open device drawer" time="0.151">
    </testcase>
    <testcase classname="AccessControlSystemTab should close acs drawer" name="AccessControlSystemTab should close acs drawer" time="0.138">
    </testcase>
    <testcase classname="AccessControlSystemTab should change page" name="AccessControlSystemTab should change page" time="0.11">
    </testcase>
    <testcase classname="AccessControlSystemTab should delete access control system with many items" name="AccessControlSystemTab should delete access control system with many items" time="0.172">
    </testcase>
    <testcase classname="AccessControlSystemTab should delete access control system with one item" name="AccessControlSystemTab should delete access control system with one item" time="0.184">
    </testcase>
    <testcase classname="AccessControlSystemTab should delete last access control system in page" name="AccessControlSystemTab should delete last access control system in page" time="0.145">
    </testcase>
    <testcase classname="AccessControlSystemTab should cancel delete access control system" name="AccessControlSystemTab should cancel delete access control system" time="0.188">
    </testcase>
    <testcase classname="AccessControlSystemTab should navigate to create ACS device" name="AccessControlSystemTab should navigate to create ACS device" time="0.078">
    </testcase>
    <testcase classname="AccessControlSystemTab should change type filter" name="AccessControlSystemTab should change type filter" time="0.092">
    </testcase>
    <testcase classname="AccessControlSystemTab should change status filter" name="AccessControlSystemTab should change status filter" time="0.098">
    </testcase>
    <testcase classname="AccessControlSystemTab should change status filter to all" name="AccessControlSystemTab should change status filter to all" time="0.105">
    </testcase>
  </testsuite>
  <testsuite name="TrainingTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:34" time="4.205" tests="11">
    <testcase classname="TrainingTab should fetchWorkerTrainingList" name="TrainingTab should fetchWorkerTrainingList" time="0.109">
    </testcase>
    <testcase classname="TrainingTab should fetchTrainingList" name="TrainingTab should fetchTrainingList" time="0.53">
    </testcase>
    <testcase classname="TrainingTab should render" name="TrainingTab should render" time="0.611">
    </testcase>
    <testcase classname="TrainingTab should render with secondary values" name="TrainingTab should render with secondary values" time="0.621">
    </testcase>
    <testcase classname="TrainingTab should render loading" name="TrainingTab should render loading" time="0.041">
    </testcase>
    <testcase classname="TrainingTab should render detail loading" name="TrainingTab should render detail loading" time="0.168">
    </testcase>
    <testcase classname="TrainingTab should render modal" name="TrainingTab should render modal" time="0.293">
    </testcase>
    <testcase classname="TrainingTab should add training" name="TrainingTab should add training" time="0.491">
    </testcase>
    <testcase classname="TrainingTab should show form validations" name="TrainingTab should show form validations" time="0.259">
    </testcase>
    <testcase classname="TrainingTab detail should render values" name="TrainingTab detail should render values" time="0.14">
    </testcase>
    <testcase classname="TrainingTab detail should render null values" name="TrainingTab detail should render null values" time="0.139">
    </testcase>
  </testsuite>
  <testsuite name="InvoicesTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:39" time="2.248" tests="10">
    <testcase classname="InvoicesTab should render empty" name="InvoicesTab should render empty" time="0.16">
    </testcase>
    <testcase classname="InvoicesTab should render" name="InvoicesTab should render" time="0.137">
    </testcase>
    <testcase classname="InvoicesTab should close modal" name="InvoicesTab should close modal" time="0.126">
    </testcase>
    <testcase classname="InvoicesTab should fetch invoice list on confirm" name="InvoicesTab should fetch invoice list on confirm" time="0.098">
    </testcase>
    <testcase classname="InvoicesTab should save invoice" name="InvoicesTab should save invoice" time="0.37">
    </testcase>
    <testcase classname="InvoicesTab should open invoice information" name="InvoicesTab should open invoice information" time="0.352">
    </testcase>
    <testcase classname="InvoicesTab should open invoice drawer" name="InvoicesTab should open invoice drawer" time="0.299">
    </testcase>
    <testcase classname="InvoicesTab should change period filter" name="InvoicesTab should change period filter" time="0.105">
    </testcase>
    <testcase classname="InvoicesTab should change client filter" name="InvoicesTab should change client filter" time="0.107">
    </testcase>
    <testcase classname="InvoicesTab should unMount" name="InvoicesTab should unMount" time="0.082">
    </testcase>
  </testsuite>
  <testsuite name="AssignList" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:41" time="1.487" tests="13">
    <testcase classname="AssignList should render" name="AssignList should render" time="0.116">
    </testcase>
    <testcase classname="AssignList should select item" name="AssignList should select item" time="0.175">
    </testcase>
    <testcase classname="AssignList should add item" name="AssignList should add item" time="0.092">
    </testcase>
    <testcase classname="AssignList should delete item" name="AssignList should delete item" time="0.092">
    </testcase>
    <testcase classname="AssignList should render option" name="AssignList should render option" time="0.06">
    </testcase>
    <testcase classname="AssignList should render highlighted option" name="AssignList should render highlighted option" time="0.072">
    </testcase>
    <testcase classname="AssignList should reset" name="AssignList should reset" time="0.106">
    </testcase>
    <testcase classname="AssignList should createCompany" name="AssignList should createCompany" time="0.092">
    </testcase>
    <testcase classname="AssignList should validate duplicity" name="AssignList should validate duplicity" time="0.176">
    </testcase>
    <testcase classname="AssignList should show error" name="AssignList should show error" time="0.043">
    </testcase>
    <testcase classname="AssignList should load client" name="AssignList should load client" time="0.042">
    </testcase>
    <testcase classname="AssignList should disable Add" name="AssignList should disable Add" time="0.048">
    </testcase>
    <testcase classname="AssignList should change tax id" name="AssignList should change tax id" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrintingSystemTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:42" time="3.856" tests="10">
    <testcase classname="BadgePrintingSystemTab should render empty" name="BadgePrintingSystemTab should render empty" time="0.169">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should fetchProjectBadgePrintingSystemList" name="BadgePrintingSystemTab should fetchProjectBadgePrintingSystemList" time="0.152">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should render" name="BadgePrintingSystemTab should render" time="0.227">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should render loading" name="BadgePrintingSystemTab should render loading" time="0.164">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should render without date" name="BadgePrintingSystemTab should render without date" time="1.166">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should assign bps" name="BadgePrintingSystemTab should assign bps" time="1.032">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should show drawer loading" name="BadgePrintingSystemTab should show drawer loading" time="0.133">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should show edition modal" name="BadgePrintingSystemTab should show edition modal" time="0.209">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should unassign" name="BadgePrintingSystemTab should unassign" time="0.158">
    </testcase>
    <testcase classname="BadgePrintingSystemTab should unMount" name="BadgePrintingSystemTab should unMount" time="0.107">
    </testcase>
  </testsuite>
  <testsuite name="ListView" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:46" time="0.985" tests="5">
    <testcase classname="ListView should render" name="ListView should render" time="0.165">
    </testcase>
    <testcase classname="ListView should render loading" name="ListView should render loading" time="0.013">
    </testcase>
    <testcase classname="ListView should change clients page" name="ListView should change clients page" time="0.116">
    </testcase>
    <testcase classname="ListView should update tax condition" name="ListView should update tax condition" time="0.285">
    </testcase>
    <testcase classname="ListView should render client info" name="ListView should render client info" time="0.113">
    </testcase>
  </testsuite>
  <testsuite name="Review Step" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:48" time="1.8" tests="18">
    <testcase classname="Review Step should render empty" name="Review Step should render empty" time="0.107">
    </testcase>
    <testcase classname="Review Step should render empty companies" name="Review Step should render empty companies" time="0.07">
    </testcase>
    <testcase classname="Review Step should render seat billed company" name="Review Step should render seat billed company" time="0.078">
    </testcase>
    <testcase classname="Review Step should render" name="Review Step should render" time="0.097">
    </testcase>
    <testcase classname="Review Step should render values" name="Review Step should render values" time="0.082">
    </testcase>
    <testcase classname="Review Step should render secondary values" name="Review Step should render secondary values" time="0.086">
    </testcase>
    <testcase classname="Review Step should render addresses should load maps" name="Review Step should render addresses should load maps" time="0.124">
    </testcase>
    <testcase classname="Review Step should render addresses should render custom mailing address as jobsite" name="Review Step should render addresses should render custom mailing address as jobsite" time="0.094">
    </testcase>
    <testcase classname="Review Step should render addresses should render custom mailing address as badging site" name="Review Step should render addresses should render custom mailing address as badging site" time="0.09">
    </testcase>
    <testcase classname="Review Step should hide edit button" name="Review Step should hide edit button" time="0.077">
    </testcase>
    <testcase classname="Review Step should render responsible should render badges model" name="Review Step should render responsible should render badges model" time="0.08">
    </testcase>
    <testcase classname="Review Step should render editor should render general information" name="Review Step should render editor should render general information" time="0.073">
    </testcase>
    <testcase classname="Review Step should render editor should render billing model" name="Review Step should render editor should render billing model" time="0.076">
    </testcase>
    <testcase classname="Review Step should render editor should render addresses" name="Review Step should render editor should render addresses" time="0.077">
    </testcase>
    <testcase classname="Review Step should render editor should render addresses" name="Review Step should render editor should render addresses" time="0.094">
    </testcase>
    <testcase classname="Review Step should render editor should render certifications" name="Review Step should render editor should render certifications" time="0.059">
    </testcase>
    <testcase classname="Review Step should render editor should render consent form fields" name="Review Step should render editor should render consent form fields" time="0.059">
    </testcase>
    <testcase classname="Review Step should render editor should render payment-method via props" name="Review Step should render editor should render payment-method via props" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="WorkerDetail" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:49" time="1.711" tests="11">
    <testcase classname="WorkerDetail should fetchWorker" name="WorkerDetail should fetchWorker" time="0.094">
    </testcase>
    <testcase classname="WorkerDetail should render projects tab" name="WorkerDetail should render projects tab" time="0.087">
    </testcase>
    <testcase classname="WorkerDetail should render projects tab" name="WorkerDetail should render projects tab" time="0.094">
    </testcase>
    <testcase classname="WorkerDetail should render project list" name="WorkerDetail should render project list" time="0.141">
    </testcase>
    <testcase classname="WorkerDetail should render empty project list" name="WorkerDetail should render empty project list" time="0.085">
    </testcase>
    <testcase classname="WorkerDetail should render activity tab" name="WorkerDetail should render activity tab" time="0.081">
    </testcase>
    <testcase classname="WorkerDetail should render certifications tab" name="WorkerDetail should render certifications tab" time="0.098">
    </testcase>
    <testcase classname="WorkerDetail should render trainings tab" name="WorkerDetail should render trainings tab" time="0.095">
    </testcase>
    <testcase classname="WorkerDetail should render observations tab" name="WorkerDetail should render observations tab" time="0.082">
    </testcase>
    <testcase classname="WorkerDetail should render with id null" name="WorkerDetail should render with id null" time="0.073">
    </testcase>
    <testcase classname="WorkerDetail should render information tab" name="WorkerDetail should render information tab" time="0.168">
    </testcase>
  </testsuite>
  <testsuite name="BadgeEditor" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:51" time="4.171" tests="11">
    <testcase classname="BadgeEditor should render" name="BadgeEditor should render" time="0.22">
    </testcase>
    <testcase classname="BadgeEditor should render with upload in progress" name="BadgeEditor should render with upload in progress" time="0.176">
    </testcase>
    <testcase classname="BadgeEditor should render layout two" name="BadgeEditor should render layout two" time="0.357">
    </testcase>
    <testcase classname="BadgeEditor should render layout two with default values" name="BadgeEditor should render layout two with default values" time="1.154">
    </testcase>
    <testcase classname="BadgeEditor should render layout three" name="BadgeEditor should render layout three" time="1.056">
    </testcase>
    <testcase classname="BadgeEditor should render layout three with default values" name="BadgeEditor should render layout three with default values" time="0.192">
    </testcase>
    <testcase classname="BadgeEditor should render layout one" name="BadgeEditor should render layout one" time="0.182">
    </testcase>
    <testcase classname="BadgeEditor should render layout one with default values" name="BadgeEditor should render layout one with default values" time="0.12">
    </testcase>
    <testcase classname="BadgeEditor should render visitor layout" name="BadgeEditor should render visitor layout" time="0.091">
    </testcase>
    <testcase classname="BadgeEditor should render visitor layout with default values" name="BadgeEditor should render visitor layout with default values" time="0.106">
    </testcase>
    <testcase classname="BadgeEditor should update" name="BadgeEditor should update" time="0.133">
    </testcase>
  </testsuite>
  <testsuite name="Address Form" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:56" time="0.976" tests="9">
    <testcase classname="Address Form should render" name="Address Form should render" time="0.102">
    </testcase>
    <testcase classname="Address Form should fetchCountryList" name="Address Form should fetchCountryList" time="0.069">
    </testcase>
    <testcase classname="Address Form should render server errors" name="Address Form should render server errors" time="0.059">
    </testcase>
    <testcase classname="Address Form should render NY resident" name="Address Form should render NY resident" time="0.091">
    </testcase>
    <testcase classname="Address Form should render NY resident optional" name="Address Form should render NY resident optional" time="0.077">
    </testcase>
    <testcase classname="Address Form should render attention field" name="Address Form should render attention field" time="0.063">
    </testcase>
    <testcase classname="Address Form should render zip code mask plus four" name="Address Form should render zip code mask plus four" time="0.059">
    </testcase>
    <testcase classname="Address Form should change zip code mask" name="Address Form should change zip code mask" time="0.133">
    </testcase>
    <testcase classname="Address Form should change zip code" name="Address Form should change zip code" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="ClientDashboard" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:57" time="1.697" tests="5">
    <testcase classname="ClientDashboard should render" name="ClientDashboard should render" time="0.287">
    </testcase>
    <testcase classname="ClientDashboard should change project state filter" name="ClientDashboard should change project state filter" time="0.333">
    </testcase>
    <testcase classname="ClientDashboard should change project period filter" name="ClientDashboard should change project period filter" time="0.2">
    </testcase>
    <testcase classname="ClientDashboard should change worker state filter" name="ClientDashboard should change worker state filter" time="0.231">
    </testcase>
    <testcase classname="ClientDashboard should change worker period filter" name="ClientDashboard should change worker period filter" time="0.181">
    </testcase>
  </testsuite>
  <testsuite name="Required Information" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:58" time="0.806" tests="4">
    <testcase classname="Required Information should fetchCompany" name="Required Information should fetchCompany" time="0.115">
    </testcase>
    <testcase classname="Required Information should change badge type" name="Required Information should change badge type" time="0.083">
    </testcase>
    <testcase classname="Required Information should select item" name="Required Information should select item" time="0.199">
    </testcase>
    <testcase classname="Required Information should reset" name="Required Information should reset" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="WorkersTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:16:59" time="0.9" tests="8">
    <testcase classname="WorkersTab should render empty" name="WorkersTab should render empty" time="0.075">
    </testcase>
    <testcase classname="WorkersTab should render loading" name="WorkersTab should render loading" time="0.015">
    </testcase>
    <testcase classname="WorkersTab should render" name="WorkersTab should render" time="0.075">
    </testcase>
    <testcase classname="WorkersTab should unmount" name="WorkersTab should unmount" time="0.06">
    </testcase>
    <testcase classname="WorkersTab should fetchWorkerList" name="WorkersTab should fetchWorkerList" time="0.037">
    </testcase>
    <testcase classname="WorkersTab should show selectedProjectFilter" name="WorkersTab should show selectedProjectFilter" time="0.066">
    </testcase>
    <testcase classname="WorkersTab should change location filter" name="WorkersTab should change location filter" time="0.14">
    </testcase>
    <testcase classname="WorkersTab should change project filter" name="WorkersTab should change project filter" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="ProjectsTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:00" time="3.56" tests="9">
    <testcase classname="ProjectsTab should fetchWorkerCertificationList" name="ProjectsTab should fetchWorkerCertificationList" time="0.079">
    </testcase>
    <testcase classname="ProjectsTab should loading" name="ProjectsTab should loading" time="0.015">
    </testcase>
    <testcase classname="ProjectsTab should render" name="ProjectsTab should render" time="0.052">
    </testcase>
    <testcase classname="ProjectsTab should render consent form view" name="ProjectsTab should render consent form view" time="0.283">
    </testcase>
    <testcase classname="ProjectsTab should render consent form editable" name="ProjectsTab should render consent form editable" time="0.244">
    </testcase>
    <testcase classname="ProjectsTab should empty" name="ProjectsTab should empty" time="0.144">
    </testcase>
    <testcase classname="ProjectsTab should show badge modal" name="ProjectsTab should show badge modal" time="1.936">
    </testcase>
    <testcase classname="ProjectsTab should navigate to project detail" name="ProjectsTab should navigate to project detail" time="0.398">
    </testcase>
    <testcase classname="ProjectsTab should change status filter" name="ProjectsTab should change status filter" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="AddressFormContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:04" time="0.241" tests="3">
    <testcase classname="AddressFormContainer should mapStateToProps, " name="AddressFormContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="AddressFormContainer should mapDispatchToProps" name="AddressFormContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="AddressFormContainer should dispatch fetchCountryList start action" name="AddressFormContainer should dispatch fetchCountryList start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="AssignEntity Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:04" time="0.57" tests="8">
    <testcase classname="AssignEntity Component should render" name="AssignEntity Component should render" time="0.038">
    </testcase>
    <testcase classname="AssignEntity Component should search" name="AssignEntity Component should search" time="0.04">
    </testcase>
    <testcase classname="AssignEntity Component should render option list" name="AssignEntity Component should render option list" time="0.022">
    </testcase>
    <testcase classname="AssignEntity Component should render create new option" name="AssignEntity Component should render create new option" time="0.04">
    </testcase>
    <testcase classname="AssignEntity Component should create new" name="AssignEntity Component should create new" time="0.052">
    </testcase>
    <testcase classname="AssignEntity Component should select" name="AssignEntity Component should select" time="0.092">
    </testcase>
    <testcase classname="AssignEntity Component should reset" name="AssignEntity Component should reset" time="0.024">
    </testcase>
    <testcase classname="AssignEntity Component should clear text when relation" name="AssignEntity Component should clear text when relation" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceForm" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:05" time="1.213" tests="8">
    <testcase classname="InvoiceForm should render" name="InvoiceForm should render" time="0.097">
    </testcase>
    <testcase classname="InvoiceForm should render with convenience fee" name="InvoiceForm should render with convenience fee" time="0.067">
    </testcase>
    <testcase classname="InvoiceForm should fetchServices" name="InvoiceForm should fetchServices" time="0.057">
    </testcase>
    <testcase classname="InvoiceForm should unMount" name="InvoiceForm should unMount" time="0.065">
    </testcase>
    <testcase classname="InvoiceForm should change values" name="InvoiceForm should change values" time="0.154">
    </testcase>
    <testcase classname="InvoiceForm should add invoice" name="InvoiceForm should add invoice" time="0.288">
    </testcase>
    <testcase classname="InvoiceForm should validations" name="InvoiceForm should validations" time="0.066">
    </testcase>
    <testcase classname="InvoiceForm should delete service item" name="InvoiceForm should delete service item" time="0.126">
    </testcase>
  </testsuite>
  <testsuite name="UsersTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:06" time="1.238" tests="7">
    <testcase classname="UsersTab should fetchUserList" name="UsersTab should fetchUserList" time="0.039">
    </testcase>
    <testcase classname="UsersTab should render" name="UsersTab should render" time="0.24">
    </testcase>
    <testcase classname="UsersTab should render empty" name="UsersTab should render empty" time="0.035">
    </testcase>
    <testcase classname="UsersTab should render loading" name="UsersTab should render loading" time="0.033">
    </testcase>
    <testcase classname="UsersTab should unmount" name="UsersTab should unmount" time="0.191">
    </testcase>
    <testcase classname="UsersTab should change user page" name="UsersTab should change user page" time="0.186">
    </testcase>
    <testcase classname="UsersTab should change client filter" name="UsersTab should change client filter" time="0.196">
    </testcase>
  </testsuite>
  <testsuite name="ProfileTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:08" time="1.337" tests="10">
    <testcase classname="ProfileTab should render" name="ProfileTab should render" time="0.097">
    </testcase>
    <testcase classname="ProfileTab should render with picture" name="ProfileTab should render with picture" time="0.093">
    </testcase>
    <testcase classname="ProfileTab should render with picture from data loaded" name="ProfileTab should render with picture from data loaded" time="0.092">
    </testcase>
    <testcase classname="ProfileTab should render with in progress picture" name="ProfileTab should render with in progress picture" time="0.13">
    </testcase>
    <testcase classname="ProfileTab should render without pending files" name="ProfileTab should render without pending files" time="0.09">
    </testcase>
    <testcase classname="ProfileTab should fetch data" name="ProfileTab should fetch data" time="0.055">
    </testcase>
    <testcase classname="ProfileTab should set data" name="ProfileTab should set data" time="0.075">
    </testcase>
    <testcase classname="ProfileTab should update account" name="ProfileTab should update account" time="0.152">
    </testcase>
    <testcase classname="ProfileTab should finish upload" name="ProfileTab should finish upload" time="0.117">
    </testcase>
    <testcase classname="ProfileTab should discard" name="ProfileTab should discard" time="0.117">
    </testcase>
  </testsuite>
  <testsuite name="Users Form" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:09" time="1.23" tests="7">
    <testcase classname="Users Form should call onChange callback" name="Users Form should call onChange callback" time="0.197">
    </testcase>
    <testcase classname="Users Form should render default" name="Users Form should render default" time="0.097">
    </testcase>
    <testcase classname="Users Form should add a user" name="Users Form should add a user" time="0.164">
    </testcase>
    <testcase classname="Users Form should delete a user" name="Users Form should delete a user" time="0.128">
    </testcase>
    <testcase classname="Users Form should show errors coming from server" name="Users Form should show errors coming from server" time="0.138">
    </testcase>
    <testcase classname="Users Form should render with Fallback User" name="Users Form should render with Fallback User" time="0.088">
    </testcase>
    <testcase classname="Users Form should return field errors" name="Users Form should return field errors" time="0.111">
    </testcase>
  </testsuite>
  <testsuite name="WorkerList" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:10" time="3.82" tests="10">
    <testcase classname="WorkerList should render" name="WorkerList should render" time="0.114">
    </testcase>
    <testcase classname="WorkerList should show loading" name="WorkerList should show loading" time="0.085">
    </testcase>
    <testcase classname="WorkerList should show loading widgets" name="WorkerList should show loading widgets" time="0.55">
    </testcase>
    <testcase classname="WorkerList should navigate to invite worker" name="WorkerList should navigate to invite worker" time="0.81">
    </testcase>
    <testcase classname="WorkerList should change page" name="WorkerList should change page" time="0.678">
    </testcase>
    <testcase classname="WorkerList should navigate to worker details" name="WorkerList should navigate to worker details" time="0.721">
    </testcase>
    <testcase classname="WorkerList should fetch worker statistics" name="WorkerList should fetch worker statistics" time="0.163">
    </testcase>
    <testcase classname="WorkerList should change filter option" name="WorkerList should change filter option" time="0.093">
    </testcase>
    <testcase classname="WorkerList should change state filter" name="WorkerList should change state filter" time="0.165">
    </testcase>
    <testcase classname="WorkerList should change client filter" name="WorkerList should change client filter" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="Register Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:14" time="1.132" tests="10">
    <testcase classname="Register Component should render loader" name="Register Component should render loader" time="0.012">
    </testcase>
    <testcase classname="Register Component should validate token" name="Register Component should validate token" time="0.038">
    </testcase>
    <testcase classname="Register Component should navigate when no token" name="Register Component should navigate when no token" time="0.021">
    </testcase>
    <testcase classname="Register Component should render expired" name="Register Component should render expired" time="0.015">
    </testcase>
    <testcase classname="Register Component should render success" name="Register Component should render success" time="0.019">
    </testcase>
    <testcase classname="Register Component account confirm should render" name="Register Component account confirm should render" time="0.081">
    </testcase>
    <testcase classname="Register Component account confirm should create account" name="Register Component account confirm should create account" time="0.134">
    </testcase>
    <testcase classname="Register Component account confirm should render terms and conditions" name="Register Component account confirm should render terms and conditions" time="0.147">
    </testcase>
    <testcase classname="Register Component account confirm should render privacy policy" name="Register Component account confirm should render privacy policy" time="0.139">
    </testcase>
    <testcase classname="Register Component account confirm should render errors" name="Register Component account confirm should render errors" time="0.132">
    </testcase>
  </testsuite>
  <testsuite name="VisitorBadgeModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:16" time="1.174" tests="4">
    <testcase classname="VisitorBadgeModal should render fallback" name="VisitorBadgeModal should render fallback" time="0.245">
    </testcase>
    <testcase classname="VisitorBadgeModal should render" name="VisitorBadgeModal should render" time="0.214">
    </testcase>
    <testcase classname="VisitorBadgeModal should print" name="VisitorBadgeModal should print" time="0.19">
    </testcase>
    <testcase classname="VisitorBadgeModal should set badge id" name="VisitorBadgeModal should set badge id" time="0.194">
    </testcase>
  </testsuite>
  <testsuite name="ProjectInvitation" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:17" time="1.225" tests="10">
    <testcase classname="ProjectInvitation should fetchProject" name="ProjectInvitation should fetchProject" time="0.101">
    </testcase>
    <testcase classname="ProjectInvitation should render" name="ProjectInvitation should render" time="0.096">
    </testcase>
    <testcase classname="ProjectInvitation should unMount" name="ProjectInvitation should unMount" time="0.076">
    </testcase>
    <testcase classname="ProjectInvitation should show loading button" name="ProjectInvitation should show loading button" time="0.077">
    </testcase>
    <testcase classname="ProjectInvitation should render alternative service agreement form" name="ProjectInvitation should render alternative service agreement form" time="0.086">
    </testcase>
    <testcase classname="ProjectInvitation should render payment settings step" name="ProjectInvitation should render payment settings step" time="0.05">
    </testcase>
    <testcase classname="ProjectInvitation should accept project" name="ProjectInvitation should accept project" time="0.07">
    </testcase>
    <testcase classname="ProjectInvitation should navigate to payment settings" name="ProjectInvitation should navigate to payment settings" time="0.137">
    </testcase>
    <testcase classname="ProjectInvitation should show payment settings loading" name="ProjectInvitation should show payment settings loading" time="0.091">
    </testcase>
    <testcase classname="ProjectInvitation should redirect when no service agreement accepted" name="ProjectInvitation should redirect when no service agreement accepted" time="0.111">
    </testcase>
  </testsuite>
  <testsuite name="AssignRow" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:18" time="0.733" tests="6">
    <testcase classname="AssignRow should render" name="AssignRow should render" time="0.1">
    </testcase>
    <testcase classname="AssignRow should delete row" name="AssignRow should delete row" time="0.065">
    </testcase>
    <testcase classname="AssignRow should show row label" name="AssignRow should show row label" time="0.043">
    </testcase>
    <testcase classname="AssignRow should show duplicity message" name="AssignRow should show duplicity message" time="0.033">
    </testcase>
    <testcase classname="AssignRow should show error message" name="AssignRow should show error message" time="0.033">
    </testcase>
    <testcase classname="AssignRow should set entity as selected" name="AssignRow should set entity as selected" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="PaymentMethods" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:19" time="0.89" tests="9">
    <testcase classname="PaymentMethods should fetch payment methods" name="PaymentMethods should fetch payment methods" time="0.05">
    </testcase>
    <testcase classname="PaymentMethods should show loading indicator for admin" name="PaymentMethods should show loading indicator for admin" time="0.011">
    </testcase>
    <testcase classname="PaymentMethods should render with specific classes for project details" name="PaymentMethods should render with specific classes for project details" time="0.033">
    </testcase>
    <testcase classname="PaymentMethods should render admin mode" name="PaymentMethods should render admin mode" time="0.034">
    </testcase>
    <testcase classname="PaymentMethods should not let the user delete the last card" name="PaymentMethods should not let the user delete the last card" time="0.099">
    </testcase>
    <testcase classname="PaymentMethods should let the user delete a credit card" name="PaymentMethods should let the user delete a credit card" time="0.042">
    </testcase>
    <testcase classname="PaymentMethods should render admin mode with the modal to resolve conflict" name="PaymentMethods should render admin mode with the modal to resolve conflict" time="0.154">
    </testcase>
    <testcase classname="PaymentMethods should render admin mode with the modal and do not delete if user close the modal" name="PaymentMethods should render admin mode with the modal and do not delete if user close the modal" time="0.134">
    </testcase>
    <testcase classname="PaymentMethods should render admin mode and no open the modal if the payment with error does not exist" name="PaymentMethods should render admin mode and no open the modal if the payment with error does not exist" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="ProtectedRoute Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:20" time="1.297" tests="6">
    <testcase classname="ProtectedRoute Component should render loading" name="ProtectedRoute Component should render loading" time="0.022">
    </testcase>
    <testcase classname="ProtectedRoute Component should render route" name="ProtectedRoute Component should render route" time="0.015">
    </testcase>
    <testcase classname="ProtectedRoute Component should render loader" name="ProtectedRoute Component should render loader" time="0.036">
    </testcase>
    <testcase classname="ProtectedRoute Component should render loading while checking session" name="ProtectedRoute Component should render loading while checking session" time="0.28">
    </testcase>
    <testcase classname="ProtectedRoute Component should render home redirect" name="ProtectedRoute Component should render home redirect" time="0.105">
    </testcase>
    <testcase classname="ProtectedRoute Component should redirect &quot;/&quot; when roleList is invalid" name="ProtectedRoute Component should redirect &quot;/&quot; when roleList is invalid" time="0.233">
    </testcase>
  </testsuite>
  <testsuite name="FcaDashboard" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:22" time="0.952" tests="3">
    <testcase classname="FcaDashboard should render" name="FcaDashboard should render" time="0.207">
    </testcase>
    <testcase classname="FcaDashboard should change state filter" name="FcaDashboard should change state filter" time="0.23">
    </testcase>
    <testcase classname="FcaDashboard should change period filter" name="FcaDashboard should change period filter" time="0.16">
    </testcase>
  </testsuite>
  <testsuite name="WorkersTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:23" time="0.919" tests="6">
    <testcase classname="WorkersTab should render empty" name="WorkersTab should render empty" time="0.043">
    </testcase>
    <testcase classname="WorkersTab should render loading" name="WorkersTab should render loading" time="0.011">
    </testcase>
    <testcase classname="WorkersTab should assignLoading" name="WorkersTab should assignLoading" time="0.098">
    </testcase>
    <testcase classname="WorkersTab should fetchProjectWorkerList" name="WorkersTab should fetchProjectWorkerList" time="0.098">
    </testcase>
    <testcase classname="WorkersTab should render" name="WorkersTab should render" time="0.075">
    </testcase>
    <testcase classname="WorkersTab should assign worker" name="WorkersTab should assign worker" time="0.3">
    </testcase>
  </testsuite>
  <testsuite name="ProjectDetailContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:24" time="0.451" tests="23">
    <testcase classname="ProjectDetailContainer should mapStateToProps, " name="ProjectDetailContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should mapDispatchToProps" name="ProjectDetailContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchProjectStart start action" name="ProjectDetailContainer should dispatch fetchProjectStart start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch clearProjectMap start action" name="ProjectDetailContainer should dispatch clearProjectMap start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch clearLoadingMap start action" name="ProjectDetailContainer should dispatch clearLoadingMap start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch clearLoading start action" name="ProjectDetailContainer should dispatch clearLoading start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch clearModalMap start action" name="ProjectDetailContainer should dispatch clearModalMap start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch updateProject start action" name="ProjectDetailContainer should dispatch updateProject start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchCategoryList start action" name="ProjectDetailContainer should dispatch fetchCategoryList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchRegionList start action" name="ProjectDetailContainer should dispatch fetchRegionList start action" time="0">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchNaeList start action" name="ProjectDetailContainer should dispatch fetchNaeList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchBillingTierList start action" name="ProjectDetailContainer should dispatch fetchBillingTierList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchCertificationList start action" name="ProjectDetailContainer should dispatch fetchCertificationList start action" time="0">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchCertificationTemplateList start action" name="ProjectDetailContainer should dispatch fetchCertificationTemplateList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchTrainingList start action" name="ProjectDetailContainer should dispatch fetchTrainingList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch clearErrors start action" name="ProjectDetailContainer should dispatch clearErrors start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch archiveProject start action" name="ProjectDetailContainer should dispatch archiveProject start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch unarchiveProject start action" name="ProjectDetailContainer should dispatch unarchiveProject start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchConsentFormFields start action" name="ProjectDetailContainer should dispatch fetchConsentFormFields start action" time="0">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchProjectStatistics start action" name="ProjectDetailContainer should dispatch fetchProjectStatistics start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch clearProjectStatistics start action" name="ProjectDetailContainer should dispatch clearProjectStatistics start action" time="0.001">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch fetchTimeZoneList start action" name="ProjectDetailContainer should dispatch fetchTimeZoneList start action" time="0">
    </testcase>
    <testcase classname="ProjectDetailContainer should dispatch updateProjectPaymentMethod start action" name="ProjectDetailContainer should dispatch updateProjectPaymentMethod start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AssignClientContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:25" time="0.23" tests="8">
    <testcase classname="AssignClientContainer should mapStateToProps, " name="AssignClientContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="AssignClientContainer should mapDispatchToProps" name="AssignClientContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="AssignClientContainer should dispatch fetchMwbeList start action" name="AssignClientContainer should dispatch fetchMwbeList start action" time="0.001">
    </testcase>
    <testcase classname="AssignClientContainer should dispatch setRelationUiId start action" name="AssignClientContainer should dispatch setRelationUiId start action" time="0.001">
    </testcase>
    <testcase classname="AssignClientContainer should dispatch searchCompanies start action" name="AssignClientContainer should dispatch searchCompanies start action" time="0.001">
    </testcase>
    <testcase classname="AssignClientContainer should dispatch createCompany start action" name="AssignClientContainer should dispatch createCompany start action" time="0.001">
    </testcase>
    <testcase classname="AssignClientContainer should dispatch clearClientErrors start action" name="AssignClientContainer should dispatch clearClientErrors start action" time="0">
    </testcase>
    <testcase classname="AssignClientContainer should dispatch clearRelationMap start action" name="AssignClientContainer should dispatch clearRelationMap start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Profile" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:25" time="0.778" tests="7">
    <testcase classname="Profile should render" name="Profile should render" time="0.076">
    </testcase>
    <testcase classname="Profile should render loading" name="Profile should render loading" time="0.073">
    </testcase>
    <testcase classname="Profile should render with enabled inputs" name="Profile should render with enabled inputs" time="0.05">
    </testcase>
    <testcase classname="Profile should render current password error" name="Profile should render current password error" time="0.086">
    </testcase>
    <testcase classname="Profile should show error validations" name="Profile should show error validations" time="0.071">
    </testcase>
    <testcase classname="Profile should discard changes" name="Profile should discard changes" time="0.092">
    </testcase>
    <testcase classname="Profile should change password" name="Profile should change password" time="0.106">
    </testcase>
  </testsuite>
  <testsuite name="Wizard Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:26" time="0.9" tests="8">
    <testcase classname="Wizard Component should render" name="Wizard Component should render" time="0.088">
    </testcase>
    <testcase classname="Wizard Component should render without scroll" name="Wizard Component should render without scroll" time="0.072">
    </testcase>
    <testcase classname="Wizard Component should change step" name="Wizard Component should change step" time="0.078">
    </testcase>
    <testcase classname="Wizard Component should navigate on Next" name="Wizard Component should navigate on Next" time="0.065">
    </testcase>
    <testcase classname="Wizard Component should call navigate when step button is clicked" name="Wizard Component should call navigate when step button is clicked" time="0.054">
    </testcase>
    <testcase classname="Wizard Component should save" name="Wizard Component should save" time="0.088">
    </testcase>
    <testcase classname="Wizard Component should NOT navigate when loading and click away" name="Wizard Component should NOT navigate when loading and click away" time="0.066">
    </testcase>
    <testcase classname="Wizard Component should unMount" name="Wizard Component should unMount" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="Profile" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:27" time="0.623" tests="4">
    <testcase classname="Profile should render" name="Profile should render" time="0.07">
    </testcase>
    <testcase classname="Profile should render" name="Profile should render" time="0.047">
    </testcase>
    <testcase classname="Profile should show validations" name="Profile should show validations" time="0.049">
    </testcase>
    <testcase classname="Profile should show validations for first name" name="Profile should show validations for first name" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceList" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:28" time="1.729" tests="4">
    <testcase classname="InvoiceList should render" name="InvoiceList should render" time="0.158">
    </testcase>
    <testcase classname="InvoiceList should render tax exempt" name="InvoiceList should render tax exempt" time="0.164">
    </testcase>
    <testcase classname="InvoiceList should show loading" name="InvoiceList should show loading" time="0.365">
    </testcase>
    <testcase classname="InvoiceList should download" name="InvoiceList should download" time="0.755">
    </testcase>
  </testsuite>
  <testsuite name="Project Banner" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:29" time="0.404" tests="1">
    <testcase classname="Project Banner should render" name="Project Banner should render" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="NewWorkersContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:30" time="0.246" tests="3">
    <testcase classname="NewWorkersContainer should mapStateToProps" name="NewWorkersContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewWorkersContainer should mapDispatchToProps" name="NewWorkersContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="NewWorkersContainer should dispatch fetchWorkersActivityWidget start action" name="NewWorkersContainer should dispatch fetchWorkersActivityWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="HeaderContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:30" time="0.187" tests="4">
    <testcase classname="HeaderContainer should mapStateToProps, " name="HeaderContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="HeaderContainer should mapDispatchToProps" name="HeaderContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="HeaderContainer should dispatch logout action" name="HeaderContainer should dispatch logout action" time="0">
    </testcase>
    <testcase classname="HeaderContainer should dispatch navigate action" name="HeaderContainer should dispatch navigate action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LineChart" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:31" time="0.327" tests="3">
    <testcase classname="LineChart should render skeleton" name="LineChart should render skeleton" time="0.01">
    </testcase>
    <testcase classname="LineChart should render" name="LineChart should render" time="0.047">
    </testcase>
    <testcase classname="LineChart should render empty" name="LineChart should render empty" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="ObservationsTab" errors="0" failures="2" skipped="0" timestamp="2021-05-14T18:17:31" time="0.689" tests="4">
    <testcase classname="ObservationsTab should render" name="ObservationsTab should render" time="0.078">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `ObservationsTab should render 1`

- Snapshot
+ Received

@@ -134,11 +134,11 @@
            Ladder
          &lt;/td&gt;
          &lt;td
            class=&quot;MuiTableCell-root MuiTableCell-body&quot;
          &gt;
-           Dec 15, 2020 07:00 pm
+           Dec 15, 2020 09:00 pm
          &lt;/td&gt;
          &lt;td
            class=&quot;MuiTableCell-root MuiTableCell-body&quot;
          &gt;
            prj1
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\WorkerDetail\components\ObservationsTab\ObservationsTab.test.tsx:41:23)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="ObservationsTab should render empty list" name="ObservationsTab should render empty list" time="0.042">
    </testcase>
    <testcase classname="ObservationsTab should open modal" name="ObservationsTab should open modal" time="0.144">
    </testcase>
    <testcase classname="ObservationsTab should show detail loading" name="ObservationsTab should show detail loading" time="0.1">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `ObservationsTab should show detail loading 1`

- Snapshot
+ Received

@@ -136,11 +136,11 @@
            Ladder
          &lt;/td&gt;
          &lt;td
            class=&quot;MuiTableCell-root MuiTableCell-body&quot;
          &gt;
-           Dec 15, 2020 07:00 pm
+           Dec 15, 2020 09:00 pm
          &lt;/td&gt;
          &lt;td
            class=&quot;MuiTableCell-root MuiTableCell-body&quot;
          &gt;
            prj1
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\WorkerDetail\components\ObservationsTab\ObservationsTab.test.tsx:90:31)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
  </testsuite>
  <testsuite name="WorkersByDemographicData Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:32" time="0.57" tests="5">
    <testcase classname="WorkersByDemographicData Component should render" name="WorkersByDemographicData Component should render" time="0.067">
    </testcase>
    <testcase classname="WorkersByDemographicData Component should fetchWorkersByDemographicData" name="WorkersByDemographicData Component should fetchWorkersByDemographicData" time="0.033">
    </testcase>
    <testcase classname="WorkersByDemographicData Component should render loading" name="WorkersByDemographicData Component should render loading" time="0.032">
    </testcase>
    <testcase classname="WorkersByDemographicData Component should change filter" name="WorkersByDemographicData Component should change filter" time="0.068">
    </testcase>
    <testcase classname="WorkersByDemographicData Component should fetchWorkersByEthnicity" name="WorkersByDemographicData Component should fetchWorkersByEthnicity" time="0.1">
    </testcase>
  </testsuite>
  <testsuite name="BadgeEditor" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:32" time="0.238" tests="2">
    <testcase classname="BadgeEditor should render" name="BadgeEditor should render" time="0.023">
    </testcase>
    <testcase classname="BadgeEditor should render logo and number" name="BadgeEditor should render logo and number" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Project Drawer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:33" time="0.62" tests="7">
    <testcase classname="Project Drawer should render" name="Project Drawer should render" time="0.075">
    </testcase>
    <testcase classname="Project Drawer should show loading" name="Project Drawer should show loading" time="0.029">
    </testcase>
    <testcase classname="Project Drawer should render projectOwnerList" name="Project Drawer should render projectOwnerList" time="0.034">
    </testcase>
    <testcase classname="Project Drawer should render devList" name="Project Drawer should render devList" time="0.044">
    </testcase>
    <testcase classname="Project Drawer should render gcList" name="Project Drawer should render gcList" time="0.048">
    </testcase>
    <testcase classname="Project Drawer should render Seats billing" name="Project Drawer should render Seats billing" time="0.03">
    </testcase>
    <testcase classname="Project Drawer should onDelete" name="Project Drawer should onDelete" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="Controlled Radio" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:33" time="0.247" tests="2">
    <testcase classname="Controlled Radio should render" name="Controlled Radio should render" time="0.027">
    </testcase>
    <testcase classname="Controlled Radio should handle item change" name="Controlled Radio should handle item change" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="NewWorkers Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:34" time="1.36" tests="3">
    <testcase classname="NewWorkers Component should render" name="NewWorkers Component should render" time="0.159">
    </testcase>
    <testcase classname="NewWorkers Component should render loading" name="NewWorkers Component should render loading" time="0.58">
    </testcase>
    <testcase classname="NewWorkers Component should fetchWorkersNewWorkers" name="NewWorkers Component should fetchWorkersNewWorkers" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="NavigationTop" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:35" time="0.595" tests="7">
    <testcase classname="NavigationTop should render" name="NavigationTop should render" time="0.055">
    </testcase>
    <testcase classname="NavigationTop should render without scroll" name="NavigationTop should render without scroll" time="0.037">
    </testcase>
    <testcase classname="NavigationTop should call onNextStep from props when Next button is clicked" name="NavigationTop should call onNextStep from props when Next button is clicked" time="0.049">
    </testcase>
    <testcase classname="NavigationTop hasChanges should render discard and save buttons" name="NavigationTop hasChanges should render discard and save buttons" time="0.038">
    </testcase>
    <testcase classname="NavigationTop hasChanges should call onDiscard from props when Discard Changes button is clicked" name="NavigationTop hasChanges should call onDiscard from props when Discard Changes button is clicked" time="0.046">
    </testcase>
    <testcase classname="NavigationTop hasChanges should call onSave from props when Save Changes button is clicked" name="NavigationTop hasChanges should call onSave from props when Save Changes button is clicked" time="0.046">
    </testcase>
    <testcase classname="NavigationTop hasChanges should hide message when change step" name="NavigationTop hasChanges should hide message when change step" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="Controlled Input Password" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:36" time="0.418" tests="7">
    <testcase classname="Controlled Input Password should render" name="Controlled Input Password should render" time="0.047">
    </testcase>
    <testcase classname="Controlled Input Password should render value" name="Controlled Input Password should render value" time="0.024">
    </testcase>
    <testcase classname="Controlled Input Password should render with errors" name="Controlled Input Password should render with errors" time="0.022">
    </testcase>
    <testcase classname="Controlled Input Password should toggle visibility on and show password" name="Controlled Input Password should toggle visibility on and show password" time="0.026">
    </testcase>
    <testcase classname="Controlled Input Password should toggle visibility on and show password with value" name="Controlled Input Password should toggle visibility on and show password with value" time="0.026">
    </testcase>
    <testcase classname="Controlled Input Password should toggle visibility on and show password without value" name="Controlled Input Password should toggle visibility on and show password without value" time="0.033">
    </testcase>
    <testcase classname="Controlled Input Password should toggle visibility off and delete password" name="Controlled Input Password should toggle visibility off and delete password" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Login Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:36" time="0.647" tests="4">
    <testcase classname="Login Component should render" name="Login Component should render" time="0.063">
    </testcase>
    <testcase classname="Login Component should render error message when Error is defined" name="Login Component should render error message when Error is defined" time="0.132">
    </testcase>
    <testcase classname="Login Component should set email and password and login" name="Login Component should set email and password and login" time="0.139">
    </testcase>
    <testcase classname="Login Component should show error and prevent login on missing fields" name="Login Component should show error and prevent login on missing fields" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="WorkersActivity Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:37" time="0.553" tests="3">
    <testcase classname="WorkersActivity Component should render" name="WorkersActivity Component should render" time="0.142">
    </testcase>
    <testcase classname="WorkersActivity Component should fetchWorkersActivity" name="WorkersActivity Component should fetchWorkersActivity" time="0.101">
    </testcase>
    <testcase classname="WorkersActivity Component should render loading" name="WorkersActivity Component should render loading" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="ListViewContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:37" time="0.221" tests="6">
    <testcase classname="ListViewContainer should mapStateToProps, " name="ListViewContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ListViewContainer should mapDispatchToProps" name="ListViewContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ListViewContainer should dispatch fetchProjectClientList start action" name="ListViewContainer should dispatch fetchProjectClientList start action" time="0.001">
    </testcase>
    <testcase classname="ListViewContainer should dispatch fetchProjectClientSummary start action" name="ListViewContainer should dispatch fetchProjectClientSummary start action" time="0.001">
    </testcase>
    <testcase classname="ListViewContainer should dispatch updateTaxCondition start action" name="ListViewContainer should dispatch updateTaxCondition start action" time="0.001">
    </testcase>
    <testcase classname="ListViewContainer should dispatch fetchMwbe start action" name="ListViewContainer should dispatch fetchMwbe start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ProjectListContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:38" time="0.282" tests="11">
    <testcase classname="ProjectListContainer should mapStateToProps, " name="ProjectListContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should mapDispatchToProps" name="ProjectListContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch fetchProjectList start action" name="ProjectListContainer should dispatch fetchProjectList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch fetchProjectSummary start action" name="ProjectListContainer should dispatch fetchProjectSummary start action" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch clearProjectMap start action" name="ProjectListContainer should dispatch clearProjectMap start action" time="0.002">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch deleteProject start action" name="ProjectListContainer should dispatch deleteProject start action" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch navigate action" name="ProjectListContainer should dispatch navigate action" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch fetchProjectStatistics action" name="ProjectListContainer should dispatch fetchProjectStatistics action" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch fetchInvoiceStatistics action" name="ProjectListContainer should dispatch fetchInvoiceStatistics action" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch clearProjectStatistics action" name="ProjectListContainer should dispatch clearProjectStatistics action" time="0.001">
    </testcase>
    <testcase classname="ProjectListContainer should dispatch clearInvoiceStatistics action" name="ProjectListContainer should dispatch clearInvoiceStatistics action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="NewAssignedWorkers Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:38" time="0.474" tests="3">
    <testcase classname="NewAssignedWorkers Component should render" name="NewAssignedWorkers Component should render" time="0.094">
    </testcase>
    <testcase classname="NewAssignedWorkers Component should render loading" name="NewAssignedWorkers Component should render loading" time="0.032">
    </testcase>
    <testcase classname="NewAssignedWorkers Component should fetchWorkersWidget" name="NewAssignedWorkers Component should fetchWorkersWidget" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="NewBadgesByProject Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:39" time="0.368" tests="3">
    <testcase classname="NewBadgesByProject Component should render" name="NewBadgesByProject Component should render" time="0.071">
    </testcase>
    <testcase classname="NewBadgesByProject Component should fetchBadgeProject" name="NewBadgesByProject Component should fetchBadgeProject" time="0.05">
    </testcase>
    <testcase classname="NewBadgesByProject Component should render loading" name="NewBadgesByProject Component should render loading" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Reset Password" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:39" time="0.595" tests="6">
    <testcase classname="Reset Password should render" name="Reset Password should render" time="0.067">
    </testcase>
    <testcase classname="Reset Password should render loading" name="Reset Password should render loading" time="0.062">
    </testcase>
    <testcase classname="Reset Password should clear loading on unmount" name="Reset Password should clear loading on unmount" time="0.051">
    </testcase>
    <testcase classname="Reset Password should render success" name="Reset Password should render success" time="0.017">
    </testcase>
    <testcase classname="Reset Password should send reset password confirm" name="Reset Password should send reset password confirm" time="0.07">
    </testcase>
    <testcase classname="Reset Password should validate on blur" name="Reset Password should validate on blur" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByClient Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:40" time="0.321" tests="3">
    <testcase classname="WorkersByClient Component should render" name="WorkersByClient Component should render" time="0.071">
    </testcase>
    <testcase classname="WorkersByClient Component should fetchWorkersByClient" name="WorkersByClient Component should fetchWorkersByClient" time="0.024">
    </testcase>
    <testcase classname="WorkersByClient Component should render loading" name="WorkersByClient Component should render loading" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="CardSummary Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:40" time="0.368" tests="4">
    <testcase classname="CardSummary Component should render with required values" name="CardSummary Component should render with required values" time="0.037">
    </testcase>
    <testcase classname="CardSummary Component should render with optional values" name="CardSummary Component should render with optional values" time="0.045">
    </testcase>
    <testcase classname="CardSummary Component should render with null values" name="CardSummary Component should render with null values" time="0.041">
    </testcase>
    <testcase classname="CardSummary Component should click editAction" name="CardSummary Component should click editAction" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="Review Step" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:40" time="0.571" tests="5">
    <testcase classname="Review Step should render" name="Review Step should render" time="0.084">
    </testcase>
    <testcase classname="Review Step should render with values" name="Review Step should render with values" time="0.064">
    </testcase>
    <testcase classname="Review Step should render with secondary values" name="Review Step should render with secondary values" time="0.06">
    </testcase>
    <testcase classname="Review Step should render developer" name="Review Step should render developer" time="0.055">
    </testcase>
    <testcase classname="Review Step should render default" name="Review Step should render default" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="Addresses" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:41" time="0.581" tests="2">
    <testcase classname="Addresses should render fallback address" name="Addresses should render fallback address" time="0.125">
    </testcase>
    <testcase classname="Addresses should change matching address" name="Addresses should change matching address" time="0.191">
    </testcase>
  </testsuite>
  <testsuite name="Header" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:42" time="1.191" tests="5">
    <testcase classname="Header should render" name="Header should render" time="0.03">
    </testcase>
    <testcase classname="Header should navigate to Account Settings" name="Header should navigate to Account Settings" time="0.034">
    </testcase>
    <testcase classname="Header should NOT navigate to Payment Settings" name="Header should NOT navigate to Payment Settings" time="0.029">
    </testcase>
    <testcase classname="Header should navigate to Payment Settings when Client Admin" name="Header should navigate to Payment Settings when Client Admin" time="0.028">
    </testcase>
    <testcase classname="Header should render without scroll" name="Header should render without scroll" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByJobdata Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:43" time="0.496" tests="4">
    <testcase classname="WorkersByJobdata Component should render" name="WorkersByJobdata Component should render" time="0.086">
    </testcase>
    <testcase classname="WorkersByJobdata Component should fetchWorkersByJobDataStart" name="WorkersByJobdata Component should fetchWorkersByJobDataStart" time="0.04">
    </testcase>
    <testcase classname="WorkersByJobdata Component should render loading" name="WorkersByJobdata Component should render loading" time="0.061">
    </testcase>
    <testcase classname="WorkersByJobdata Component should change filter" name="WorkersByJobdata Component should change filter" time="0.096">
    </testcase>
  </testsuite>
  <testsuite name="UsersTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:44" time="0.372" tests="4">
    <testcase classname="UsersTab should render empty" name="UsersTab should render empty" time="0.025">
    </testcase>
    <testcase classname="UsersTab should render loading" name="UsersTab should render loading" time="0.012">
    </testcase>
    <testcase classname="UsersTab should render" name="UsersTab should render" time="0.05">
    </testcase>
    <testcase classname="UsersTab should fetchUserList" name="UsersTab should fetchUserList" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="BadgeHistoryTab" errors="0" failures="1" skipped="0" timestamp="2021-05-14T18:17:44" time="0.401" tests="5">
    <testcase classname="BadgeHistoryTab should loading" name="BadgeHistoryTab should loading" time="0.017">
    </testcase>
    <testcase classname="BadgeHistoryTab should render" name="BadgeHistoryTab should render" time="0.044">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `BadgeHistoryTab should render 1`

- Snapshot
+ Received

@@ -52,11 +52,11 @@
            data-testid=&quot;project-list-row&quot;
          &gt;
            &lt;td
              class=&quot;MuiTableCell-root MuiTableCell-body&quot;
            &gt;
-             Feb 01, 2021 02:54 am
+             Feb 01, 2021 04:54 am
            &lt;/td&gt;
            &lt;td
              class=&quot;MuiTableCell-root MuiTableCell-body&quot;
            &gt;
              string
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\shared\ResourceManagement\BadgeSummaryModal\components\BadgeHistoryTab\BadgeHistoryTab.test.tsx:54:23)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="BadgeHistoryTab should change page" name="BadgeHistoryTab should change page" time="0.048">
    </testcase>
    <testcase classname="BadgeHistoryTab should unMount" name="BadgeHistoryTab should unMount" time="0.008">
    </testcase>
    <testcase classname="BadgeHistoryTab should render empty" name="BadgeHistoryTab should render empty" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="AssignUserContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:45" time="0.251" tests="9">
    <testcase classname="AssignUserContainer should mapStateToProps, " name="AssignUserContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="AssignUserContainer should mapDispatchToProps" name="AssignUserContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="AssignUserContainer should dispatch fetchUserProjectList start action" name="AssignUserContainer should dispatch fetchUserProjectList start action" time="0.001">
    </testcase>
    <testcase classname="AssignUserContainer should dispatch fetchUserRoleList start action" name="AssignUserContainer should dispatch fetchUserRoleList start action" time="0.001">
    </testcase>
    <testcase classname="AssignUserContainer should dispatch fetchClientList start action" name="AssignUserContainer should dispatch fetchClientList start action" time="0.001">
    </testcase>
    <testcase classname="AssignUserContainer should dispatch assignUser start action" name="AssignUserContainer should dispatch assignUser start action" time="0">
    </testcase>
    <testcase classname="AssignUserContainer should dispatch saveUser start action" name="AssignUserContainer should dispatch saveUser start action" time="0.001">
    </testcase>
    <testcase classname="AssignUserContainer should dispatch clearErrors start action" name="AssignUserContainer should dispatch clearErrors start action" time="0.001">
    </testcase>
    <testcase classname="AssignUserContainer should dispatch fetchProjectClientList start action" name="AssignUserContainer should dispatch fetchProjectClientList start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewProjects Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:45" time="0.405" tests="3">
    <testcase classname="NewProjects Component should render" name="NewProjects Component should render" time="0.09">
    </testcase>
    <testcase classname="NewProjects Component should render loading" name="NewProjects Component should render loading" time="0.02">
    </testcase>
    <testcase classname="NewProjects Component should fetchProjectWidget" name="NewProjects Component should fetchProjectWidget" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemDrawer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:45" time="0.448" tests="4">
    <testcase classname="AccessControlSystemDrawer should render" name="AccessControlSystemDrawer should render" time="0.073">
    </testcase>
    <testcase classname="AccessControlSystemDrawer should show loading" name="AccessControlSystemDrawer should show loading" time="0.034">
    </testcase>
    <testcase classname="AccessControlSystemDrawer should render alternative values" name="AccessControlSystemDrawer should render alternative values" time="0.043">
    </testcase>
    <testcase classname="AccessControlSystemDrawer should render alternative reader values" name="AccessControlSystemDrawer should render alternative reader values" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="ProjectsTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:46" time="0.637" tests="6">
    <testcase classname="ProjectsTab should render empty" name="ProjectsTab should render empty" time="0.098">
    </testcase>
    <testcase classname="ProjectsTab should render loading" name="ProjectsTab should render loading" time="0.027">
    </testcase>
    <testcase classname="ProjectsTab should render" name="ProjectsTab should render" time="0.097">
    </testcase>
    <testcase classname="ProjectsTab should render secondary values" name="ProjectsTab should render secondary values" time="0.058">
    </testcase>
    <testcase classname="ProjectsTab should fetchProjectList" name="ProjectsTab should fetchProjectList" time="0.028">
    </testcase>
    <testcase classname="ProjectsTab should change role filter" name="ProjectsTab should change role filter" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="NewWorkers Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:47" time="0.419" tests="3">
    <testcase classname="NewWorkers Component should render" name="NewWorkers Component should render" time="0.098">
    </testcase>
    <testcase classname="NewWorkers Component should fetchWorkersActivityWidget" name="NewWorkers Component should fetchWorkersActivityWidget" time="0.057">
    </testcase>
    <testcase classname="NewWorkers Component should render loading" name="NewWorkers Component should render loading" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="WorkerActivityTab" errors="0" failures="1" skipped="0" timestamp="2021-05-14T18:17:47" time="0.338" tests="2">
    <testcase classname="WorkerActivityTab should render" name="WorkerActivityTab should render" time="0.06">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `WorkerActivityTab should render 1`

- Snapshot
+ Received

@@ -150,11 +150,11 @@
            &lt;/span&gt;
          &lt;/td&gt;
          &lt;td
            class=&quot;MuiTableCell-root MuiTableCell-body&quot;
          &gt;
-           Dec 15, 2020, 07:00 PM
+           Dec 15, 2020, 09:00 PM
          &lt;/td&gt;
          &lt;td
            class=&quot;MuiTableCell-root MuiTableCell-body&quot;
          &gt;
            prj1
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\pages\WorkerDetail\components\WorkerActivityTab\WorkerActivityTab.test.tsx:33:23)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="WorkerActivityTab should render empty list" name="WorkerActivityTab should render empty list" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="CreditCard" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:47" time="0.412" tests="4">
    <testcase classname="CreditCard should render" name="CreditCard should render" time="0.059">
    </testcase>
    <testcase classname="CreditCard should render loading" name="CreditCard should render loading" time="0.035">
    </testcase>
    <testcase classname="CreditCard should unMount" name="CreditCard should unMount" time="0.035">
    </testcase>
    <testcase classname="CreditCard should createPayment" name="CreditCard should createPayment" time="0.077">
    </testcase>
  </testsuite>
  <testsuite name="EditTaxesModal" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:48" time="0.467" tests="2">
    <testcase classname="EditTaxesModal should render" name="EditTaxesModal should render" time="0.059">
    </testcase>
    <testcase classname="EditTaxesModal should update tax condition" name="EditTaxesModal should update tax condition" time="0.15">
    </testcase>
  </testsuite>
  <testsuite name="Worker Badge" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:48" time="0.353" tests="4">
    <testcase classname="Worker Badge should render" name="Worker Badge should render" time="0.031">
    </testcase>
    <testcase classname="Worker Badge should render with fallback values" name="Worker Badge should render with fallback values" time="0.029">
    </testcase>
    <testcase classname="Worker Badge should render contact phone" name="Worker Badge should render contact phone" time="0.031">
    </testcase>
    <testcase classname="Worker Badge should render with picture" name="Worker Badge should render with picture" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="ProjectsRevenue Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:49" time="0.481" tests="3">
    <testcase classname="ProjectsRevenue Component should render" name="ProjectsRevenue Component should render" time="0.084">
    </testcase>
    <testcase classname="ProjectsRevenue Component should grossRevenueWidgetStatistics" name="ProjectsRevenue Component should grossRevenueWidgetStatistics" time="0.051">
    </testcase>
    <testcase classname="ProjectsRevenue Component should render loading" name="ProjectsRevenue Component should render loading" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="CreditCardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:50" time="0.901" tests="4">
    <testcase classname="CreditCardContainer should mapStateToProps" name="CreditCardContainer should mapStateToProps" time="0.012">
    </testcase>
    <testcase classname="CreditCardContainer should mapDispatchToProps" name="CreditCardContainer should mapDispatchToProps" time="0.006">
    </testcase>
    <testcase classname="CreditCardContainer should dispatch createPayment start action" name="CreditCardContainer should dispatch createPayment start action" time="0.009">
    </testcase>
    <testcase classname="CreditCardContainer should dispatch clearLoading start action" name="CreditCardContainer should dispatch clearLoading start action" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ClientDrawer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:51" time="0.505" tests="3">
    <testcase classname="ClientDrawer should render" name="ClientDrawer should render" time="0.069">
    </testcase>
    <testcase classname="ClientDrawer should render tax exempt" name="ClientDrawer should render tax exempt" time="0.053">
    </testcase>
    <testcase classname="ClientDrawer should show loading" name="ClientDrawer should show loading" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="HirearchyView" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:52" time="0.441" tests="6">
    <testcase classname="HirearchyView should fetchProjectClientHirearchyList" name="HirearchyView should fetchProjectClientHirearchyList" time="0.045">
    </testcase>
    <testcase classname="HirearchyView should render" name="HirearchyView should render" time="0.027">
    </testcase>
    <testcase classname="HirearchyView should render loading" name="HirearchyView should render loading" time="0.005">
    </testcase>
    <testcase classname="HirearchyView should close modal" name="HirearchyView should close modal" time="0.023">
    </testcase>
    <testcase classname="HirearchyView should render children nodes" name="HirearchyView should render children nodes" time="0.039">
    </testcase>
    <testcase classname="HirearchyView should navigate client" name="HirearchyView should navigate client" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="ClientFilter" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:52" time="0.375" tests="3">
    <testcase classname="ClientFilter should render" name="ClientFilter should render" time="0.029">
    </testcase>
    <testcase classname="ClientFilter should render default" name="ClientFilter should render default" time="0.018">
    </testcase>
    <testcase classname="ClientFilter should change client filter" name="ClientFilter should change client filter" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="GeneralInformation Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:53" time="0.364" tests="1">
    <testcase classname="GeneralInformation Component should show universal badge price error" name="GeneralInformation Component should show universal badge price error" time="0.151">
    </testcase>
  </testsuite>
  <testsuite name="RoleGuard" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:53" time="0.164" tests="3">
    <testcase classname="RoleGuard should render should render when role matches with one of the roleList" name="RoleGuard should render should render when role matches with one of the roleList" time="0.008">
    </testcase>
    <testcase classname="RoleGuard should render should NOT render when role DOES NOT match" name="RoleGuard should render should NOT render when role DOES NOT match" time="0.002">
    </testcase>
    <testcase classname="RoleGuard should render fallback" name="RoleGuard should render fallback" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="NewWorkers Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:53" time="0.418" tests="3">
    <testcase classname="NewWorkers Component should render" name="NewWorkers Component should render" time="0.095">
    </testcase>
    <testcase classname="NewWorkers Component should fetchWorkersActivityWidget" name="NewWorkers Component should fetchWorkersActivityWidget" time="0.048">
    </testcase>
    <testcase classname="NewWorkers Component should render loading" name="NewWorkers Component should render loading" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="PieChart" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:54" time="0.32" tests="3">
    <testcase classname="PieChart should render skeleton" name="PieChart should render skeleton" time="0.014">
    </testcase>
    <testcase classname="PieChart should render" name="PieChart should render" time="0.03">
    </testcase>
    <testcase classname="PieChart should render empty" name="PieChart should render empty" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Account Confirm" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:54" time="0.416" tests="1">
    <testcase classname="Account Confirm should render loading" name="Account Confirm should render loading" time="0.099">
    </testcase>
  </testsuite>
  <testsuite name="FileUpload" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:55" time="0.452" tests="6">
    <testcase classname="FileUpload should render" name="FileUpload should render" time="0.082">
    </testcase>
    <testcase classname="FileUpload should render empty" name="FileUpload should render empty" time="0.023">
    </testcase>
    <testcase classname="FileUpload should add file" name="FileUpload should add file" time="0.022">
    </testcase>
    <testcase classname="FileUpload should invalid files" name="FileUpload should invalid files" time="0.021">
    </testcase>
    <testcase classname="FileUpload should delete file" name="FileUpload should delete file" time="0.038">
    </testcase>
    <testcase classname="FileUpload should delete file without callback" name="FileUpload should delete file without callback" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByJobDataContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:55" time="0.192" tests="3">
    <testcase classname="WorkersByJobDataContainer should mapStateToProps" name="WorkersByJobDataContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByJobDataContainer should mapDispatchToProps" name="WorkersByJobDataContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="WorkersByJobDataContainer should dispatch fetchWorkersByJobDataStart start action" name="WorkersByJobDataContainer should dispatch fetchWorkersByJobDataStart start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TopTenClients Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:55" time="0.374" tests="4">
    <testcase classname="TopTenClients Component should render" name="TopTenClients Component should render" time="0.057">
    </testcase>
    <testcase classname="TopTenClients Component should fetchClientTopTen" name="TopTenClients Component should fetchClientTopTen" time="0.023">
    </testcase>
    <testcase classname="TopTenClients Component should render loading" name="TopTenClients Component should render loading" time="0.011">
    </testcase>
    <testcase classname="TopTenClients Component should navigate" name="TopTenClients Component should navigate" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Credit Card Item" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:56" time="0.776" tests="6">
    <testcase classname="Credit Card Item should render" name="Credit Card Item should render" time="0.025">
    </testcase>
    <testcase classname="Credit Card Item should render compact" name="Credit Card Item should render compact" time="0.022">
    </testcase>
    <testcase classname="Credit Card Item should render selected" name="Credit Card Item should render selected" time="0.071">
    </testcase>
    <testcase classname="Credit Card Item should render default brand" name="Credit Card Item should render default brand" time="0.12">
    </testcase>
    <testcase classname="Credit Card Item should select payment" name="Credit Card Item should select payment" time="0.104">
    </testcase>
    <testcase classname="Credit Card Item should trigger delete payment" name="Credit Card Item should trigger delete payment" time="0.179">
    </testcase>
  </testsuite>
  <testsuite name="SearchLocation" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:57" time="0.317" tests="3">
    <testcase classname="SearchLocation should render" name="SearchLocation should render" time="0.034">
    </testcase>
    <testcase classname="SearchLocation should render disabled" name="SearchLocation should render disabled" time="0.017">
    </testcase>
    <testcase classname="SearchLocation should change location" name="SearchLocation should change location" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="ClientsRevenue Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:58" time="0.387" tests="3">
    <testcase classname="ClientsRevenue Component should render" name="ClientsRevenue Component should render" time="0.071">
    </testcase>
    <testcase classname="ClientsRevenue Component should grossRevenueWidgetStatistics" name="ClientsRevenue Component should grossRevenueWidgetStatistics" time="0.043">
    </testcase>
    <testcase classname="ClientsRevenue Component should render loading" name="ClientsRevenue Component should render loading" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrinterSystemDrawer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:58" time="0.425" tests="3">
    <testcase classname="BadgePrinterSystemDrawer should render" name="BadgePrinterSystemDrawer should render" time="0.078">
    </testcase>
    <testcase classname="BadgePrinterSystemDrawer should show loading" name="BadgePrinterSystemDrawer should show loading" time="0.035">
    </testcase>
    <testcase classname="BadgePrinterSystemDrawer should render alternative values" name="BadgePrinterSystemDrawer should render alternative values" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="PaymentSettings" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:59" time="0.389" tests="2">
    <testcase classname="PaymentSettings should render" name="PaymentSettings should render" time="0.062">
    </testcase>
    <testcase classname="PaymentSettings should change filter" name="PaymentSettings should change filter" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="CreditCardTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:59" time="0.313" tests="1">
    <testcase classname="CreditCardTab should render" name="CreditCardTab should render" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="WorkerTrainigsWidget Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:17:59" time="0.351" tests="3">
    <testcase classname="WorkerTrainigsWidget Component should render" name="WorkerTrainigsWidget Component should render" time="0.041">
    </testcase>
    <testcase classname="WorkerTrainigsWidget Component should fetchWorkersTrainings" name="WorkerTrainigsWidget Component should fetchWorkersTrainings" time="0.019">
    </testcase>
    <testcase classname="WorkerTrainigsWidget Component should render loading" name="WorkerTrainigsWidget Component should render loading" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="ProjectWizardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:00" time="0.371" tests="23">
    <testcase classname="ProjectWizardContainer should mapStateToProps, " name="ProjectWizardContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should mapDispatchToProps" name="ProjectWizardContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchProjectStart start action" name="ProjectWizardContainer should dispatch fetchProjectStart start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch saveProject start action" name="ProjectWizardContainer should dispatch saveProject start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch updateDraftProject start action" name="ProjectWizardContainer should dispatch updateDraftProject start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch clearErrors start action" name="ProjectWizardContainer should dispatch clearErrors start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchCertificationList start action" name="ProjectWizardContainer should dispatch fetchCertificationList start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchCertificationTemplateList start action" name="ProjectWizardContainer should dispatch fetchCertificationTemplateList start action" time="0.007">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchTrainingList start action" name="ProjectWizardContainer should dispatch fetchTrainingList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchBillingTierList start action" name="ProjectWizardContainer should dispatch fetchBillingTierList start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchCategoryList start action" name="ProjectWizardContainer should dispatch fetchCategoryList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchRegionList start action" name="ProjectWizardContainer should dispatch fetchRegionList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchNaeList start action" name="ProjectWizardContainer should dispatch fetchNaeList start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch clearRelationMap start action" name="ProjectWizardContainer should dispatch clearRelationMap start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchMwbeList start action" name="ProjectWizardContainer should dispatch fetchMwbeList start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch searchCompanies start action" name="ProjectWizardContainer should dispatch searchCompanies start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch createCompany start action" name="ProjectWizardContainer should dispatch createCompany start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch sendProjectForApproval start action" name="ProjectWizardContainer should dispatch sendProjectForApproval start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch approveProject start action" name="ProjectWizardContainer should dispatch approveProject start action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchConsentFormFields start action" name="ProjectWizardContainer should dispatch fetchConsentFormFields start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch addProjectBadges start action" name="ProjectWizardContainer should dispatch addProjectBadges start action" time="0">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch clearFileMap action" name="ProjectWizardContainer should dispatch clearFileMap action" time="0.001">
    </testcase>
    <testcase classname="ProjectWizardContainer should dispatch fetchTimeZoneList start action" name="ProjectWizardContainer should dispatch fetchTimeZoneList start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CertificationsByWorkers Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:00" time="0.349" tests="3">
    <testcase classname="CertificationsByWorkers Component should render" name="CertificationsByWorkers Component should render" time="0.071">
    </testcase>
    <testcase classname="CertificationsByWorkers Component should fetchWorkersCertifications" name="CertificationsByWorkers Component should fetchWorkersCertifications" time="0.018">
    </testcase>
    <testcase classname="CertificationsByWorkers Component should render loading" name="CertificationsByWorkers Component should render loading" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="New Credit Card Item" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:01" time="0.341" tests="2">
    <testcase classname="New Credit Card Item should render" name="New Credit Card Item should render" time="0.041">
    </testcase>
    <testcase classname="New Credit Card Item should render credit card form" name="New Credit Card Item should render credit card form" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="Worker Detail Review" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:01" time="0.368" tests="2">
    <testcase classname="Worker Detail Review should render" name="Worker Detail Review should render" time="0.089">
    </testcase>
    <testcase classname="Worker Detail Review should click on edit" name="Worker Detail Review should click on edit" time="0.08">
    </testcase>
  </testsuite>
  <testsuite name="ObservationsByWorkers Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:02" time="0.387" tests="3">
    <testcase classname="ObservationsByWorkers Component should render" name="ObservationsByWorkers Component should render" time="0.086">
    </testcase>
    <testcase classname="ObservationsByWorkers Component should fetchWorkersObservations" name="ObservationsByWorkers Component should fetchWorkersObservations" time="0.025">
    </testcase>
    <testcase classname="ObservationsByWorkers Component should render loading" name="ObservationsByWorkers Component should render loading" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="NewBadgesByLocation Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:02" time="0.613" tests="3">
    <testcase classname="NewBadgesByLocation Component should render" name="NewBadgesByLocation Component should render" time="0.088">
    </testcase>
    <testcase classname="NewBadgesByLocation Component should fetchBadgeLocation" name="NewBadgesByLocation Component should fetchBadgeLocation" time="0.116">
    </testcase>
    <testcase classname="NewBadgesByLocation Component should render loading" name="NewBadgesByLocation Component should render loading" time="0.145">
    </testcase>
  </testsuite>
  <testsuite name="WorkerDetailContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:03" time="0.812" tests="6">
    <testcase classname="WorkerDetailContainer should mapStateToProps" name="WorkerDetailContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkerDetailContainer should mapDispatchToProps" name="WorkerDetailContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkerDetailContainer should dispatch fetchWorker start action" name="WorkerDetailContainer should dispatch fetchWorker start action" time="0.002">
    </testcase>
    <testcase classname="WorkerDetailContainer should dispatch clearWorkerMap start action" name="WorkerDetailContainer should dispatch clearWorkerMap start action" time="0.001">
    </testcase>
    <testcase classname="WorkerDetailContainer should dispatch push action" name="WorkerDetailContainer should dispatch push action" time="0.001">
    </testcase>
    <testcase classname="WorkerDetailContainer should dispatch clearLoadingMap start action" name="WorkerDetailContainer should dispatch clearLoadingMap start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Sidebar" errors="0" failures="3" skipped="0" timestamp="2021-05-14T18:18:04" time="0.457" tests="3">
    <testcase classname="Sidebar should render inital route selected" name="Sidebar should render inital route selected" time="0.05">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `Sidebar should render inital route selected 1`

- Snapshot
+ Received

@@ -152,41 +152,35 @@
              &lt;/span&gt;
              &lt;span
                class=&quot;MuiTouchRipple-root&quot;
              /&gt;
            &lt;/a&gt;
-           &lt;div
-             class=&quot;makeStyles-settingsTab-3&quot;
-             textcolor=&quot;inherit&quot;
-             value=&quot;6&quot;
+           &lt;a
+             aria-controls=&quot;tabpanel-6&quot;
+             aria-disabled=&quot;false&quot;
+             aria-selected=&quot;false&quot;
+             class=&quot;MuiButtonBase-root MuiTab-root MuiTab-textColorInherit MuiTab-labelIcon&quot;
+             data-testid=&quot;tab-6&quot;
+             href=&quot;/admin&quot;
+             role=&quot;tab&quot;
+             tabindex=&quot;-1&quot;
            &gt;
-             &lt;a
-               aria-controls=&quot;tabpanel-6&quot;
-               aria-disabled=&quot;false&quot;
-               aria-selected=&quot;false&quot;
-               class=&quot;MuiButtonBase-root MuiTab-root MuiTab-textColorInherit MuiTab-labelIcon&quot;
-               data-testid=&quot;tab-6&quot;
-               href=&quot;/admin&quot;
-               role=&quot;tab&quot;
-               tabindex=&quot;-1&quot;
+             &lt;span
+               class=&quot;MuiTab-wrapper&quot;
              &gt;
-               &lt;span
-                 class=&quot;MuiTab-wrapper&quot;
-               &gt;
-                 &lt;svg&gt;
-                   settings-full.svg
-                 &lt;/svg&gt;
-                 Admin
-               &lt;/span&gt;
-               &lt;span
-                 class=&quot;MuiTouchRipple-root&quot;
-               /&gt;
-             &lt;/a&gt;
-           &lt;/div&gt;
+               &lt;svg&gt;
+                 settings-full.svg
+               &lt;/svg&gt;
+               Admin
+             &lt;/span&gt;
+             &lt;span
+               class=&quot;MuiTouchRipple-root&quot;
+             /&gt;
+           &lt;/a&gt;
          &lt;/div&gt;
          &lt;span
-           class=&quot;PrivateTabIndicator-root-4 PrivateTabIndicator-colorSecondary-6 MuiTabs-indicator PrivateTabIndicator-vertical-7&quot;
+           class=&quot;PrivateTabIndicator-root-5 PrivateTabIndicator-colorSecondary-7 MuiTabs-indicator PrivateTabIndicator-vertical-8&quot;
            style=&quot;top: 0px; height: 0px; display: flex;&quot;
          /&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\shared\Sidebar\Sidebar.test.tsx:32:23)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="Sidebar should render clients tab selected" name="Sidebar should render clients tab selected" time="0.037">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `Sidebar should render clients tab selected 1`

- Snapshot
+ Received

@@ -1,11 +1,11 @@
  &lt;div&gt;
    &lt;div
-     class=&quot;makeStyles-container-8&quot;
+     class=&quot;makeStyles-container-9&quot;
    &gt;
      &lt;span
-       class=&quot;makeStyles-logo-9&quot;
+       class=&quot;makeStyles-logo-10&quot;
      &gt;
        &lt;svg&gt;
          fc.logo.svg
        &lt;/svg&gt;
      &lt;/span&gt;
@@ -152,41 +152,35 @@
              &lt;/span&gt;
              &lt;span
                class=&quot;MuiTouchRipple-root&quot;
              /&gt;
            &lt;/a&gt;
-           &lt;div
-             class=&quot;makeStyles-settingsTab-10&quot;
-             textcolor=&quot;inherit&quot;
-             value=&quot;6&quot;
+           &lt;a
+             aria-controls=&quot;tabpanel-6&quot;
+             aria-disabled=&quot;false&quot;
+             aria-selected=&quot;false&quot;
+             class=&quot;MuiButtonBase-root MuiTab-root MuiTab-textColorInherit MuiTab-labelIcon&quot;
+             data-testid=&quot;tab-6&quot;
+             href=&quot;/admin&quot;
+             role=&quot;tab&quot;
+             tabindex=&quot;-1&quot;
            &gt;
-             &lt;a
-               aria-controls=&quot;tabpanel-6&quot;
-               aria-disabled=&quot;false&quot;
-               aria-selected=&quot;false&quot;
-               class=&quot;MuiButtonBase-root MuiTab-root MuiTab-textColorInherit MuiTab-labelIcon&quot;
-               data-testid=&quot;tab-6&quot;
-               href=&quot;/admin&quot;
-               role=&quot;tab&quot;
-               tabindex=&quot;-1&quot;
+             &lt;span
+               class=&quot;MuiTab-wrapper&quot;
              &gt;
-               &lt;span
-                 class=&quot;MuiTab-wrapper&quot;
-               &gt;
-                 &lt;svg&gt;
-                   settings-full.svg
-                 &lt;/svg&gt;
-                 Admin
-               &lt;/span&gt;
-               &lt;span
-                 class=&quot;MuiTouchRipple-root&quot;
-               /&gt;
-             &lt;/a&gt;
-           &lt;/div&gt;
+               &lt;svg&gt;
+                 settings-full.svg
+               &lt;/svg&gt;
+               Admin
+             &lt;/span&gt;
+             &lt;span
+               class=&quot;MuiTouchRipple-root&quot;
+             /&gt;
+           &lt;/a&gt;
          &lt;/div&gt;
          &lt;span
-           class=&quot;PrivateTabIndicator-root-11 PrivateTabIndicator-colorSecondary-13 MuiTabs-indicator PrivateTabIndicator-vertical-14&quot;
+           class=&quot;PrivateTabIndicator-root-13 PrivateTabIndicator-colorSecondary-15 MuiTabs-indicator PrivateTabIndicator-vertical-16&quot;
            style=&quot;top: 0px; height: 0px; display: flex;&quot;
          /&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\shared\Sidebar\Sidebar.test.tsx:44:23)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
    <testcase classname="Sidebar should render admin tab selected" name="Sidebar should render admin tab selected" time="0.031">
      <failure>Error: expect(received).toMatchSnapshot()

Snapshot name: `Sidebar should render admin tab selected 1`

- Snapshot
+ Received

@@ -1,11 +1,11 @@
  &lt;div&gt;
    &lt;div
-     class=&quot;makeStyles-container-15&quot;
+     class=&quot;makeStyles-container-17&quot;
    &gt;
      &lt;span
-       class=&quot;makeStyles-logo-16&quot;
+       class=&quot;makeStyles-logo-18&quot;
      &gt;
        &lt;svg&gt;
          fc.logo.svg
        &lt;/svg&gt;
      &lt;/span&gt;
@@ -152,41 +152,35 @@
              &lt;/span&gt;
              &lt;span
                class=&quot;MuiTouchRipple-root&quot;
              /&gt;
            &lt;/a&gt;
-           &lt;div
-             class=&quot;makeStyles-settingsTab-17&quot;
-             textcolor=&quot;inherit&quot;
-             value=&quot;6&quot;
+           &lt;a
+             aria-controls=&quot;tabpanel-6&quot;
+             aria-disabled=&quot;false&quot;
+             aria-selected=&quot;true&quot;
+             class=&quot;MuiButtonBase-root MuiTab-root MuiTab-textColorInherit Mui-selected MuiTab-labelIcon&quot;
+             data-testid=&quot;tab-6&quot;
+             href=&quot;/admin&quot;
+             role=&quot;tab&quot;
+             tabindex=&quot;0&quot;
            &gt;
-             &lt;a
-               aria-controls=&quot;tabpanel-6&quot;
-               aria-disabled=&quot;false&quot;
-               aria-selected=&quot;true&quot;
-               class=&quot;MuiButtonBase-root MuiTab-root MuiTab-textColorInherit Mui-selected MuiTab-labelIcon&quot;
-               data-testid=&quot;tab-6&quot;
-               href=&quot;/admin&quot;
-               role=&quot;tab&quot;
-               tabindex=&quot;0&quot;
+             &lt;span
+               class=&quot;MuiTab-wrapper&quot;
              &gt;
-               &lt;span
-                 class=&quot;MuiTab-wrapper&quot;
-               &gt;
-                 &lt;svg&gt;
-                   settings-full.svg
-                 &lt;/svg&gt;
-                 Admin
-               &lt;/span&gt;
-               &lt;span
-                 class=&quot;MuiTouchRipple-root&quot;
-               /&gt;
-             &lt;/a&gt;
-           &lt;/div&gt;
+               &lt;svg&gt;
+                 settings-full.svg
+               &lt;/svg&gt;
+               Admin
+             &lt;/span&gt;
+             &lt;span
+               class=&quot;MuiTouchRipple-root&quot;
+             /&gt;
+           &lt;/a&gt;
          &lt;/div&gt;
          &lt;span
-           class=&quot;PrivateTabIndicator-root-18 PrivateTabIndicator-colorSecondary-20 MuiTabs-indicator PrivateTabIndicator-vertical-21&quot;
+           class=&quot;PrivateTabIndicator-root-21 PrivateTabIndicator-colorSecondary-23 MuiTabs-indicator PrivateTabIndicator-vertical-24&quot;
            style=&quot;top: 0px; height: 0px; display: flex;&quot;
          /&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    at Object.&lt;anonymous&gt; (D:\projects\makinsense\fca-operations-web\src\modules\views\shared\Sidebar\Sidebar.test.tsx:56:23)
    at Object.asyncJestTest (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:102:37)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:43:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:26:19)
    at D:\projects\makinsense\fca-operations-web\node_modules\jest-jasmine2\build\queueRunner.js:73:41</failure>
    </testcase>
  </testsuite>
  <testsuite name="TopTenProjects Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:04" time="0.343" tests="3">
    <testcase classname="TopTenProjects Component should render" name="TopTenProjects Component should render" time="0.06">
    </testcase>
    <testcase classname="TopTenProjects Component should fetchProjectTopTen" name="TopTenProjects Component should fetchProjectTopTen" time="0.019">
    </testcase>
    <testcase classname="TopTenProjects Component should render loading" name="TopTenProjects Component should render loading" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Clients Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:05" time="0.365" tests="3">
    <testcase classname="Clients Component should render" name="Clients Component should render" time="0.05">
    </testcase>
    <testcase classname="Clients Component should fetchClientWidget" name="Clients Component should fetchClientWidget" time="0.024">
    </testcase>
    <testcase classname="Clients Component should render loading" name="Clients Component should render loading" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrintingSystem Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:05" time="0.322" tests="3">
    <testcase classname="BadgePrintingSystem Component should render" name="BadgePrintingSystem Component should render" time="0.034">
    </testcase>
    <testcase classname="BadgePrintingSystem Component should fetchBpsWidget" name="BadgePrintingSystem Component should fetchBpsWidget" time="0.024">
    </testcase>
    <testcase classname="BadgePrintingSystem Component should render loading" name="BadgePrintingSystem Component should render loading" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="NewClients Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:06" time="0.345" tests="3">
    <testcase classname="NewClients Component should render" name="NewClients Component should render" time="0.043">
    </testcase>
    <testcase classname="NewClients Component should fetchClientWidget" name="NewClients Component should fetchClientWidget" time="0.027">
    </testcase>
    <testcase classname="NewClients Component should render loading new clients" name="NewClients Component should render loading new clients" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByLocation Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:06" time="0.315" tests="3">
    <testcase classname="WorkersByLocation Component should render" name="WorkersByLocation Component should render" time="0.074">
    </testcase>
    <testcase classname="WorkersByLocation Component should fetchWorkersByLocation" name="WorkersByLocation Component should fetchWorkersByLocation" time="0.023">
    </testcase>
    <testcase classname="WorkersByLocation Component should render loading" name="WorkersByLocation Component should render loading" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByTradesMinority Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:06" time="0.306" tests="3">
    <testcase classname="WorkersByTradesMinority Component should render" name="WorkersByTradesMinority Component should render" time="0.067">
    </testcase>
    <testcase classname="WorkersByTradesMinority Component should fetchWorkersByTradesMinority" name="WorkersByTradesMinority Component should fetchWorkersByTradesMinority" time="0.023">
    </testcase>
    <testcase classname="WorkersByTradesMinority Component should render loading" name="WorkersByTradesMinority Component should render loading" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="ClientByTrades Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:07" time="0.31" tests="3">
    <testcase classname="ClientByTrades Component should render" name="ClientByTrades Component should render" time="0.069">
    </testcase>
    <testcase classname="ClientByTrades Component should fetchClientsByTrades" name="ClientByTrades Component should fetchClientsByTrades" time="0.018">
    </testcase>
    <testcase classname="ClientByTrades Component should render loading" name="ClientByTrades Component should render loading" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByTradesNonMinority Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:07" time="0.305" tests="3">
    <testcase classname="WorkersByTradesNonMinority Component should render" name="WorkersByTradesNonMinority Component should render" time="0.071">
    </testcase>
    <testcase classname="WorkersByTradesNonMinority Component should fetchWorkersByTradesNonMinority" name="WorkersByTradesNonMinority Component should fetchWorkersByTradesNonMinority" time="0.018">
    </testcase>
    <testcase classname="WorkersByTradesNonMinority Component should render loading" name="WorkersByTradesNonMinority Component should render loading" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystem Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:07" time="0.334" tests="3">
    <testcase classname="AccessControlSystem Component should render" name="AccessControlSystem Component should render" time="0.038">
    </testcase>
    <testcase classname="AccessControlSystem Component should fetchAcsWidget" name="AccessControlSystem Component should fetchAcsWidget" time="0.024">
    </testcase>
    <testcase classname="AccessControlSystem Component should render loading" name="AccessControlSystem Component should render loading" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByProject Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:08" time="0.318" tests="3">
    <testcase classname="WorkersByProject Component should render" name="WorkersByProject Component should render" time="0.069">
    </testcase>
    <testcase classname="WorkersByProject Component should fetchWorkersByProject" name="WorkersByProject Component should fetchWorkersByProject" time="0.019">
    </testcase>
    <testcase classname="WorkersByProject Component should render loading" name="WorkersByProject Component should render loading" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="LineWidget" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:08" time="0.299" tests="1">
    <testcase classname="LineWidget should render" name="LineWidget should render" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="AutocompleteFilter Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:08" time="0.294" tests="2">
    <testcase classname="AutocompleteFilter Component should render" name="AutocompleteFilter Component should render" time="0.023">
    </testcase>
    <testcase classname="AutocompleteFilter Component should change" name="AutocompleteFilter Component should change" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="ProjectInvitationContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:09" time="0.221" tests="6">
    <testcase classname="ProjectInvitationContainer should mapStateToProps, " name="ProjectInvitationContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProjectInvitationContainer should mapDispatchToProps" name="ProjectInvitationContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectInvitationContainer should dispatch fetchProjectStart start action" name="ProjectInvitationContainer should dispatch fetchProjectStart start action" time="0">
    </testcase>
    <testcase classname="ProjectInvitationContainer should dispatch acceptProjectInvitationStart start action" name="ProjectInvitationContainer should dispatch acceptProjectInvitationStart start action" time="0">
    </testcase>
    <testcase classname="ProjectInvitationContainer should dispatch clearPayment start action" name="ProjectInvitationContainer should dispatch clearPayment start action" time="0.001">
    </testcase>
    <testcase classname="ProjectInvitationContainer should dispatch navigate action" name="ProjectInvitationContainer should dispatch navigate action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Process Overview" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:09" time="1.071" tests="2">
    <testcase classname="Process Overview should render" name="Process Overview should render" time="0.094">
    </testcase>
    <testcase classname="Process Overview should call set step handler on button click" name="Process Overview should call set step handler on button click" time="0.568">
    </testcase>
  </testsuite>
  <testsuite name="DeleteEntityButton" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:10" time="0.22" tests="2">
    <testcase classname="DeleteEntityButton should render" name="DeleteEntityButton should render" time="0.013">
    </testcase>
    <testcase classname="DeleteEntityButton should click" name="DeleteEntityButton should click" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="WorkerWizardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:11" time="0.302" tests="17">
    <testcase classname="WorkerWizardContainer should mapStateToProps, " name="WorkerWizardContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="WorkerWizardContainer should mapDispatchToProps" name="WorkerWizardContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch saveWorker start action" name="WorkerWizardContainer should dispatch saveWorker start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch updateWorker start action" name="WorkerWizardContainer should dispatch updateWorker start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchWorker start action" name="WorkerWizardContainer should dispatch fetchWorker start action" time="0">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchEthnicityList start action" name="WorkerWizardContainer should dispatch fetchEthnicityList start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchLanguageList start action" name="WorkerWizardContainer should dispatch fetchLanguageList start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchJobTitleList start action" name="WorkerWizardContainer should dispatch fetchJobTitleList start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchTradeStatusList start action" name="WorkerWizardContainer should dispatch fetchTradeStatusList start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchSkilledTradeList start action" name="WorkerWizardContainer should dispatch fetchSkilledTradeList start action" time="0">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchIdentificationTypeList start action" name="WorkerWizardContainer should dispatch fetchIdentificationTypeList start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchSocJobTitleList start action" name="WorkerWizardContainer should dispatch fetchSocJobTitleList start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch searchClient start action" name="WorkerWizardContainer should dispatch searchClient start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch clearErrors start action" name="WorkerWizardContainer should dispatch clearErrors start action" time="0">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch clearWorkersMap start action" name="WorkerWizardContainer should dispatch clearWorkersMap start action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch navigate action" name="WorkerWizardContainer should dispatch navigate action" time="0.001">
    </testcase>
    <testcase classname="WorkerWizardContainer should dispatch fetchCompany start action" name="WorkerWizardContainer should dispatch fetchCompany start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TrainingsTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:11" time="0.279" tests="11">
    <testcase classname="TrainingsTabContainer should mapStateToProps, " name="TrainingsTabContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should mapDispatchToProps" name="TrainingsTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch addWorkerTraining start action" name="TrainingsTabContainer should dispatch addWorkerTraining start action" time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch fetchTrainingList start action" name="TrainingsTabContainer should dispatch fetchTrainingList start action" time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch fetchWorkerTrainingList start action" name="TrainingsTabContainer should dispatch fetchWorkerTrainingList start action" time="0.007">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch fetchWorkerTrainingDetail start action" name="TrainingsTabContainer should dispatch fetchWorkerTrainingDetail start action" time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch fetchProjectList start action" name="TrainingsTabContainer should dispatch fetchProjectList start action" time="0">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch addTrainingSuccess start action" name="TrainingsTabContainer should dispatch addTrainingSuccess start action" time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch fetchWorker start action" name="TrainingsTabContainer should dispatch fetchWorker start action" time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch clearLoading start action" name="TrainingsTabContainer should dispatch clearLoading start action" time="0.001">
    </testcase>
    <testcase classname="TrainingsTabContainer should dispatch fetchWorkerProjectList start action" name="TrainingsTabContainer should dispatch fetchWorkerProjectList start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ProjectsRevenueContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:11" time="0.222" tests="3">
    <testcase classname="ProjectsRevenueContainer should mapStateToProps" name="ProjectsRevenueContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectsRevenueContainer should mapDispatchToProps" name="ProjectsRevenueContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="ProjectsRevenueContainer should dispatch fetchGrossRevenueWidget start action" name="ProjectsRevenueContainer should dispatch fetchGrossRevenueWidget start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="EmergencyContact Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:12" time="0.27" tests="1">
    <testcase classname="EmergencyContact Component should show error messages" name="EmergencyContact Component should show error messages" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="ContactInformation Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:12" time="0.289" tests="1">
    <testcase classname="ContactInformation Component should show error messages" name="ContactInformation Component should show error messages" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="VisitorTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:12" time="0.254" tests="8">
    <testcase classname="VisitorTabContainer should mapStateToProps, " name="VisitorTabContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="VisitorTabContainer should mapDispatchToProps" name="VisitorTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="VisitorTabContainer should dispatch saveBadgeVisitor start action" name="VisitorTabContainer should dispatch saveBadgeVisitor start action" time="0.001">
    </testcase>
    <testcase classname="VisitorTabContainer should dispatch unassignBadgeVisitor start action" name="VisitorTabContainer should dispatch unassignBadgeVisitor start action" time="0.001">
    </testcase>
    <testcase classname="VisitorTabContainer should dispatch clearProjectMap start action" name="VisitorTabContainer should dispatch clearProjectMap start action" time="0.001">
    </testcase>
    <testcase classname="VisitorTabContainer should dispatch fetchProjectBadgeVisitorList start action" name="VisitorTabContainer should dispatch fetchProjectBadgeVisitorList start action" time="0">
    </testcase>
    <testcase classname="VisitorTabContainer should dispatch fetchBadgeVisitorEntityList start action" name="VisitorTabContainer should dispatch fetchBadgeVisitorEntityList start action" time="0.001">
    </testcase>
    <testcase classname="VisitorTabContainer should dispatch clearSaveBadgeLoading start action" name="VisitorTabContainer should dispatch clearSaveBadgeLoading start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Modal Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:13" time="0.3" tests="1">
    <testcase classname="Modal Component should render" name="Modal Component should render" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="NewWorkersContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:13" time="0.239" tests="3">
    <testcase classname="NewWorkersContainer should mapStateToProps" name="NewWorkersContainer should mapStateToProps" time="0.002">
    </testcase>
    <testcase classname="NewWorkersContainer should mapDispatchToProps" name="NewWorkersContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="NewWorkersContainer should dispatch fetchWorkersNewWorkers start action" name="NewWorkersContainer should dispatch fetchWorkersNewWorkers start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ControlledDatePicker" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:13" time="0.25" tests="3">
    <testcase classname="ControlledDatePicker should render" name="ControlledDatePicker should render" time="0.011">
    </testcase>
    <testcase classname="ControlledDatePicker should render past dates of startDate disabled" name="ControlledDatePicker should render past dates of startDate disabled" time="0.004">
    </testcase>
    <testcase classname="ControlledDatePicker should onChange" name="ControlledDatePicker should onChange" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByDemographicDataContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:14" time="0.245" tests="4">
    <testcase classname="WorkersByDemographicDataContainer should mapStateToProps" name="WorkersByDemographicDataContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByDemographicDataContainer should mapDispatchToProps" name="WorkersByDemographicDataContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByDemographicDataContainer should dispatch fetchWorkersByDemographicData start action" name="WorkersByDemographicDataContainer should dispatch fetchWorkersByDemographicData start action" time="0.001">
    </testcase>
    <testcase classname="WorkersByDemographicDataContainer should dispatch fetchWorkersByEthnicity start action" name="WorkersByDemographicDataContainer should dispatch fetchWorkersByEthnicity start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AssignClient" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:14" time="0.224" tests="3">
    <testcase classname="AssignClient should render" name="AssignClient should render" time="0.019">
    </testcase>
    <testcase classname="AssignClient should fetch mwbeList" name="AssignClient should fetch mwbeList" time="0.012">
    </testcase>
    <testcase classname="AssignClient should create client" name="AssignClient should create client" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="InvoicesTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:14" time="0.263" tests="10">
    <testcase classname="InvoicesTabContainer should mapStateToProps, " name="InvoicesTabContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="InvoicesTabContainer should mapDispatchToProps" name="InvoicesTabContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch fetchInvoiceList start action" name="InvoicesTabContainer should dispatch fetchInvoiceList start action" time="0">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch fetchProjectClientList start action" name="InvoicesTabContainer should dispatch fetchProjectClientList start action" time="0.001">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch saveInvoice start action" name="InvoicesTabContainer should dispatch saveInvoice start action" time="0.001">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch clearLoading start action" name="InvoicesTabContainer should dispatch clearLoading start action" time="0.001">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch clearConfirmLoading start action" name="InvoicesTabContainer should dispatch clearConfirmLoading start action" time="0.001">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch navigate start action" name="InvoicesTabContainer should dispatch navigate start action" time="0">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch fetchClientProjectList start action" name="InvoicesTabContainer should dispatch fetchClientProjectList start action" time="0.001">
    </testcase>
    <testcase classname="InvoicesTabContainer should dispatch fetchClientInvoiceList start action" name="InvoicesTabContainer should dispatch fetchClientInvoiceList start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CertificationTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:15" time="0.304" tests="11">
    <testcase classname="CertificationTabContainer should mapStateToProps, " name="CertificationTabContainer should mapStateToProps, " time="0.003">
    </testcase>
    <testcase classname="CertificationTabContainer should mapDispatchToProps" name="CertificationTabContainer should mapDispatchToProps" time="0.003">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch addWorkerCertification start action" name="CertificationTabContainer should dispatch addWorkerCertification start action" time="0.003">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch fetchCertificationList start action" name="CertificationTabContainer should dispatch fetchCertificationList start action" time="0.001">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch fetchWorkerCertificationList start action" name="CertificationTabContainer should dispatch fetchWorkerCertificationList start action" time="0.001">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch fetchWorkerCertificationDetail start action" name="CertificationTabContainer should dispatch fetchWorkerCertificationDetail start action" time="0.002">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch fetchProjectList start action" name="CertificationTabContainer should dispatch fetchProjectList start action" time="0.015">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch addCertificationSuccess start action" name="CertificationTabContainer should dispatch addCertificationSuccess start action" time="0.009">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch fetchWorker start action" name="CertificationTabContainer should dispatch fetchWorker start action" time="0.002">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch clearLoading start action" name="CertificationTabContainer should dispatch clearLoading start action" time="0.002">
    </testcase>
    <testcase classname="CertificationTabContainer should dispatch fetchWorkerProjectList start action" name="CertificationTabContainer should dispatch fetchWorkerProjectList start action" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="StatisticWidget" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:15" time="1.263" tests="6">
    <testcase classname="StatisticWidget should render" name="StatisticWidget should render" time="0.025">
    </testcase>
    <testcase classname="StatisticWidget should render with secondary values" name="StatisticWidget should render with secondary values" time="0.053">
    </testcase>
    <testcase classname="StatisticWidget should render with inline content" name="StatisticWidget should render with inline content" time="0.011">
    </testcase>
    <testcase classname="StatisticWidget should render with loading status" name="StatisticWidget should render with loading status" time="0.014">
    </testcase>
    <testcase classname="StatisticWidget should render with loading status with no auxContent" name="StatisticWidget should render with loading status with no auxContent" time="0.015">
    </testcase>
    <testcase classname="StatisticWidget should render with loading status and inline content" name="StatisticWidget should render with loading status and inline content" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="MenuPopover Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:17" time="0.265" tests="3">
    <testcase classname="MenuPopover Component should render" name="MenuPopover Component should render" time="0.015">
    </testcase>
    <testcase classname="MenuPopover Component open the popup" name="MenuPopover Component open the popup" time="0.022">
    </testcase>
    <testcase classname="MenuPopover Component close the popup when menu item is clicked" name="MenuPopover Component close the popup when menu item is clicked" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="NewActiveProjects Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:17" time="0.262" tests="3">
    <testcase classname="NewActiveProjects Component should render" name="NewActiveProjects Component should render" time="0.026">
    </testcase>
    <testcase classname="NewActiveProjects Component should fetchActiveProjects" name="NewActiveProjects Component should fetchActiveProjects" time="0.015">
    </testcase>
    <testcase classname="NewActiveProjects Component should render loading" name="NewActiveProjects Component should render loading" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="AutocompleteAddress Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:17" time="0.294" tests="3">
    <testcase classname="AutocompleteAddress Component should render" name="AutocompleteAddress Component should render" time="0.032">
    </testcase>
    <testcase classname="AutocompleteAddress Component should render with initalized location" name="AutocompleteAddress Component should render with initalized location" time="0.019">
    </testcase>
    <testcase classname="AutocompleteAddress Component should render with initalized map" name="AutocompleteAddress Component should render with initalized map" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Button Menu" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:18" time="0.301" tests="2">
    <testcase classname="Button Menu should render" name="Button Menu should render" time="0.031">
    </testcase>
    <testcase classname="Button Menu should render with secondary values" name="Button Menu should render with secondary values" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="SelectFilter Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:18" time="0.264" tests="2">
    <testcase classname="SelectFilter Component should render" name="SelectFilter Component should render" time="0.028">
    </testcase>
    <testcase classname="SelectFilter Component should change" name="SelectFilter Component should change" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="WorkerActivityTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:18" time="0.239" tests="2">
    <testcase classname="WorkerActivityTabContainer should mapStateToProps, " name="WorkerActivityTabContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="WorkerActivityTabContainer should mapDispatchToProps" name="WorkerActivityTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TrainingsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:18" time="0.227" tests="3">
    <testcase classname="TrainingsContainer should mapStateToProps" name="TrainingsContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="TrainingsContainer should mapDispatchToProps" name="TrainingsContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="TrainingsContainer should dispatch fetchWorkersTrainings start action" name="TrainingsContainer should dispatch fetchWorkersTrainings start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrintingSystemContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:19" time="0.236" tests="3">
    <testcase classname="BadgePrintingSystemContainer should mapStateToProps" name="BadgePrintingSystemContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="BadgePrintingSystemContainer should mapDispatchToProps" name="BadgePrintingSystemContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="BadgePrintingSystemContainer should dispatch fetchBpsWidget start action" name="BadgePrintingSystemContainer should dispatch fetchBpsWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ButtonFilter Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:19" time="0.257" tests="3">
    <testcase classname="ButtonFilter Component should render" name="ButtonFilter Component should render" time="0.024">
    </testcase>
    <testcase classname="ButtonFilter Component should toggle" name="ButtonFilter Component should toggle" time="0.018">
    </testcase>
    <testcase classname="ButtonFilter Component should close" name="ButtonFilter Component should close" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="NewActiveClients Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:19" time="0.267" tests="3">
    <testcase classname="NewActiveClients Component should render" name="NewActiveClients Component should render" time="0.024">
    </testcase>
    <testcase classname="NewActiveClients Component should fetchActiveClients" name="NewActiveClients Component should fetchActiveClients" time="0.017">
    </testcase>
    <testcase classname="NewActiveClients Component should render loading" name="NewActiveClients Component should render loading" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="ProjectsTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:20" time="0.238" tests="4">
    <testcase classname="ProjectsTabContainer should mapStateToProps, " name="ProjectsTabContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProjectsTabContainer should mapDispatchToProps" name="ProjectsTabContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="ProjectsTabContainer should dispatch fetchWorkerProjectList start action" name="ProjectsTabContainer should dispatch fetchWorkerProjectList start action" time="0">
    </testcase>
    <testcase classname="ProjectsTabContainer should dispatch push action" name="ProjectsTabContainer should dispatch push action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:20" time="0.269" tests="11">
    <testcase classname="AccessControlSystemTabContainer should mapStateToProps, " name="AccessControlSystemTabContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should mapDispatchToProps" name="AccessControlSystemTabContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch assignAccessControlSystem start action" name="AccessControlSystemTabContainer should dispatch assignAccessControlSystem start action" time="0">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch fetchProjectAccessControlSystem start action" name="AccessControlSystemTabContainer should dispatch fetchProjectAccessControlSystem start action" time="0">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemList start action" name="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemList start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch fetchProjectAccessControlSystemList start action" name="AccessControlSystemTabContainer should dispatch fetchProjectAccessControlSystemList start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemSummary start action" name="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemSummary start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch fetchProjectAccessControlSystemLocationList start action" name="AccessControlSystemTabContainer should dispatch fetchProjectAccessControlSystemLocationList start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch unAssignAccessControlSystem start action" name="AccessControlSystemTabContainer should dispatch unAssignAccessControlSystem start action" time="0">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch updateAccessControlSystem start action" name="AccessControlSystemTabContainer should dispatch updateAccessControlSystem start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch clearLoading start action" name="AccessControlSystemTabContainer should dispatch clearLoading start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Main Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:20" time="0.25" tests="1">
    <testcase classname="Main Component should render" name="Main Component should render" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="ProjectBadgeModalContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:21" time="0.258" tests="11">
    <testcase classname="ProjectBadgeModalContainer should mapStateToProps, " name="ProjectBadgeModalContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should mapDispatchToProps" name="ProjectBadgeModalContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch fetchBadge start action" name="ProjectBadgeModalContainer should dispatch fetchBadge start action" time="0.001">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch activateBadge start action" name="ProjectBadgeModalContainer should dispatch activateBadge start action" time="0.007">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch deactivateBadge start action" name="ProjectBadgeModalContainer should dispatch deactivateBadge start action" time="0.001">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch revokeBadge start action" name="ProjectBadgeModalContainer should dispatch revokeBadge start action" time="0">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch updateBadge start action" name="ProjectBadgeModalContainer should dispatch updateBadge start action" time="0.001">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch clearBadge start action" name="ProjectBadgeModalContainer should dispatch clearBadge start action" time="0.001">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch clearUpdateLoading start action" name="ProjectBadgeModalContainer should dispatch clearUpdateLoading start action" time="0.001">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch clearUpdateBadgeLoading start action" name="ProjectBadgeModalContainer should dispatch clearUpdateBadgeLoading start action" time="0">
    </testcase>
    <testcase classname="ProjectBadgeModalContainer should dispatch printWorkerBadge start action" name="ProjectBadgeModalContainer should dispatch printWorkerBadge start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BadgeEditor" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:21" time="0.233" tests="2">
    <testcase classname="BadgeEditor should render" name="BadgeEditor should render" time="0.026">
    </testcase>
    <testcase classname="BadgeEditor should render logo" name="BadgeEditor should render logo" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrintingSystemTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:21" time="0.237" tests="8">
    <testcase classname="BadgePrintingSystemTabContainer should mapStateToProps, " name="BadgePrintingSystemTabContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="BadgePrintingSystemTabContainer should mapDispatchToProps" name="BadgePrintingSystemTabContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="BadgePrintingSystemTabContainer should dispatch assignBadgePrintingSystem start action" name="BadgePrintingSystemTabContainer should dispatch assignBadgePrintingSystem start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrintingSystemTabContainer should dispatch fetchBadgePrintingSystemList start action" name="BadgePrintingSystemTabContainer should dispatch fetchBadgePrintingSystemList start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrintingSystemTabContainer should dispatch fetchBadgePrintingSystemSummary start action" name="BadgePrintingSystemTabContainer should dispatch fetchBadgePrintingSystemSummary start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrintingSystemTabContainer should dispatch unAssignBadgePrintingSystem start action" name="BadgePrintingSystemTabContainer should dispatch unAssignBadgePrintingSystem start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrintingSystemTabContainer should dispatch updateBadgePrintingSystemDate start action" name="BadgePrintingSystemTabContainer should dispatch updateBadgePrintingSystemDate start action" time="0.007">
    </testcase>
    <testcase classname="BadgePrintingSystemTabContainer should dispatch fetchProjectBadgePrintingSystemList start action" name="BadgePrintingSystemTabContainer should dispatch fetchProjectBadgePrintingSystemList start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DashboardWidget" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:22" time="0.242" tests="3">
    <testcase classname="DashboardWidget should render with primary header" name="DashboardWidget should render with primary header" time="0.016">
    </testcase>
    <testcase classname="DashboardWidget should render with primary header and secondary values" name="DashboardWidget should render with primary header and secondary values" time="0.015">
    </testcase>
    <testcase classname="DashboardWidget should render with secondary header" name="DashboardWidget should render with secondary header" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="ConsentFormContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:22" time="0.601" tests="6">
    <testcase classname="ConsentFormContainer should mapStateToProps, " name="ConsentFormContainer should mapStateToProps, " time="0.003">
    </testcase>
    <testcase classname="ConsentFormContainer should mapDispatchToProps" name="ConsentFormContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="ConsentFormContainer should dispatch saveConsentForm start action" name="ConsentFormContainer should dispatch saveConsentForm start action" time="0.002">
    </testcase>
    <testcase classname="ConsentFormContainer should dispatch saveConsentForm start action" name="ConsentFormContainer should dispatch saveConsentForm start action" time="0.002">
    </testcase>
    <testcase classname="ConsentFormContainer should dispatch clearErrors start action" name="ConsentFormContainer should dispatch clearErrors start action" time="0.002">
    </testcase>
    <testcase classname="ConsentFormContainer should dispatch downloadConsentForm start action" name="ConsentFormContainer should dispatch downloadConsentForm start action" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="DuplicatedWorkerModalContent" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:23" time="0.876" tests="1">
    <testcase classname="DuplicatedWorkerModalContent should render" name="DuplicatedWorkerModalContent should render" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="VisitorBadgeModalContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:24" time="0.239" tests="9">
    <testcase classname="VisitorBadgeModalContainer should mapStateToProps, " name="VisitorBadgeModalContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should mapDispatchToProps" name="VisitorBadgeModalContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should dispatch fetchBadge start action" name="VisitorBadgeModalContainer should dispatch fetchBadge start action" time="0.001">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should dispatch revokeBadge start action" name="VisitorBadgeModalContainer should dispatch revokeBadge start action" time="0.001">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should dispatch clearBadge action" name="VisitorBadgeModalContainer should dispatch clearBadge action" time="0.001">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should dispatch clearUpdateLoading action" name="VisitorBadgeModalContainer should dispatch clearUpdateLoading action" time="0">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should dispatch printVisitorBadge action" name="VisitorBadgeModalContainer should dispatch printVisitorBadge action" time="0.001">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should dispatch updateBadge action" name="VisitorBadgeModalContainer should dispatch updateBadge action" time="0.001">
    </testcase>
    <testcase classname="VisitorBadgeModalContainer should dispatch clearUpdateBadgeLoading action" name="VisitorBadgeModalContainer should dispatch clearUpdateBadgeLoading action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewProjectsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:24" time="0.232" tests="3">
    <testcase classname="NewProjectsContainer should mapStateToProps" name="NewProjectsContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewProjectsContainer should mapDispatchToProps" name="NewProjectsContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="NewProjectsContainer should dispatch fetchProjectWidget start action" name="NewProjectsContainer should dispatch fetchProjectWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="WorkersTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:25" time="0.229" tests="7">
    <testcase classname="WorkersTabContainer should mapStateToProps" name="WorkersTabContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should mapDispatchToProps" name="WorkersTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch fetchProjectWorkerListStart start action" name="WorkersTabContainer should dispatch fetchProjectWorkerListStart start action" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch fetchWorkerList start action" name="WorkersTabContainer should dispatch fetchWorkerList start action" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch assignWorker start action" name="WorkersTabContainer should dispatch assignWorker start action" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch clearWorkerMap start action" name="WorkersTabContainer should dispatch clearWorkerMap start action" time="0">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch fetchProjectClientList start action" name="WorkersTabContainer should dispatch fetchProjectClientList start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:25" time="0.209" tests="6">
    <testcase classname="AccessControlSystemTabContainer should mapStateToProps" name="AccessControlSystemTabContainer should mapStateToProps" time="0.007">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should mapDispatchToProps" name="AccessControlSystemTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemList start action" name="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemList start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemSummary start action" name="AccessControlSystemTabContainer should dispatch fetchAccessControlSystemSummary start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch deleteAccessControlSystem start action" name="AccessControlSystemTabContainer should dispatch deleteAccessControlSystem start action" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemTabContainer should dispatch navigate action" name="AccessControlSystemTabContainer should dispatch navigate action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="DashboardTableRow Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:25" time="0.24" tests="2">
    <testcase classname="DashboardTableRow Component should render" name="DashboardTableRow Component should render" time="0.025">
    </testcase>
    <testcase classname="DashboardTableRow Component should navigate" name="DashboardTableRow Component should navigate" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="WorkerListContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:26" time="0.218" tests="8">
    <testcase classname="WorkerListContainer should mapStateToProps" name="WorkerListContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkerListContainer should mapDispatchToProps" name="WorkerListContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="WorkerListContainer should dispatch navigate action" name="WorkerListContainer should dispatch navigate action" time="0">
    </testcase>
    <testcase classname="WorkerListContainer should dispatch fetchWorkerList action" name="WorkerListContainer should dispatch fetchWorkerList action" time="0.001">
    </testcase>
    <testcase classname="WorkerListContainer should dispatch fetchWorkerStatistics action" name="WorkerListContainer should dispatch fetchWorkerStatistics action" time="0.001">
    </testcase>
    <testcase classname="WorkerListContainer should dispatch clearWorkerMap action" name="WorkerListContainer should dispatch clearWorkerMap action" time="0.001">
    </testcase>
    <testcase classname="WorkerListContainer should dispatch clearWorkerStatistics action" name="WorkerListContainer should dispatch clearWorkerStatistics action" time="0">
    </testcase>
    <testcase classname="WorkerListContainer should dispatch searchCompanies action" name="WorkerListContainer should dispatch searchCompanies action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceTableContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:26" time="0.232" tests="12">
    <testcase classname="InvoiceTableContainer should mapStateToProps" name="InvoiceTableContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should mapDispatchToProps" name="InvoiceTableContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch navigate action" name="InvoiceTableContainer should dispatch navigate action" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch saveInvoice action" name="InvoiceTableContainer should dispatch saveInvoice action" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch fetchInvoiceSummary action" name="InvoiceTableContainer should dispatch fetchInvoiceSummary action" time="0">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch deleteInvoice action" name="InvoiceTableContainer should dispatch deleteInvoice action" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch markAsPaidInvoice action" name="InvoiceTableContainer should dispatch markAsPaidInvoice action" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch markAsVoidInvoice action" name="InvoiceTableContainer should dispatch markAsVoidInvoice action" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch payInvoice action" name="InvoiceTableContainer should dispatch payInvoice action" time="0">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch confirmInvoice action" name="InvoiceTableContainer should dispatch confirmInvoice action" time="0.002">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch fetchInvoice action" name="InvoiceTableContainer should dispatch fetchInvoice action" time="0.001">
    </testcase>
    <testcase classname="InvoiceTableContainer should dispatch editInvoice action" name="InvoiceTableContainer should dispatch editInvoice action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AccessControlSystemContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:26" time="0.221" tests="3">
    <testcase classname="AccessControlSystemContainer should mapStateToProps" name="AccessControlSystemContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemContainer should mapDispatchToProps" name="AccessControlSystemContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="AccessControlSystemContainer should dispatch fetchAcsWidget start action" name="AccessControlSystemContainer should dispatch fetchAcsWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ButtonPrinter" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:27" time="0.243" tests="3">
    <testcase classname="ButtonPrinter should render" name="ButtonPrinter should render" time="0.025">
    </testcase>
    <testcase classname="ButtonPrinter should render loading" name="ButtonPrinter should render loading" time="0.016">
    </testcase>
    <testcase classname="ButtonPrinter should render disabled" name="ButtonPrinter should render disabled" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="ObservationsTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:27" time="0.245" tests="5">
    <testcase classname="ObservationsTabContainer should mapStateToProps, " name="ObservationsTabContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ObservationsTabContainer should mapDispatchToProps" name="ObservationsTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ObservationsTabContainer should dispatch fetchWorkerObservations action" name="ObservationsTabContainer should dispatch fetchWorkerObservations action" time="0.001">
    </testcase>
    <testcase classname="ObservationsTabContainer should dispatch fetchWorkerProjectList action" name="ObservationsTabContainer should dispatch fetchWorkerProjectList action" time="0">
    </testcase>
    <testcase classname="ObservationsTabContainer should dispatch fetchObservationDetail action" name="ObservationsTabContainer should dispatch fetchObservationDetail action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ClientsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:27" time="0.237" tests="3">
    <testcase classname="ClientsContainer should mapStateToProps" name="ClientsContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="ClientsContainer should mapDispatchToProps" name="ClientsContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ClientsContainer should dispatch fetchClientWidget start action" name="ClientsContainer should dispatch fetchClientWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BadgeTemplate" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:27" time="0.242" tests="2">
    <testcase classname="BadgeTemplate should render" name="BadgeTemplate should render" time="0.036">
    </testcase>
    <testcase classname="BadgeTemplate should toggle view" name="BadgeTemplate should toggle view" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="NewClientsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:28" time="0.236" tests="3">
    <testcase classname="NewClientsContainer should mapStateToProps" name="NewClientsContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewClientsContainer should mapDispatchToProps" name="NewClientsContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="NewClientsContainer should dispatch fetchClientWidget start action" name="NewClientsContainer should dispatch fetchClientWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewWorkersContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:28" time="0.225" tests="3">
    <testcase classname="NewWorkersContainer should mapStateToProps" name="NewWorkersContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewWorkersContainer should mapDispatchToProps" name="NewWorkersContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="NewWorkersContainer should dispatch fetchWorkersActivityWidget start action" name="NewWorkersContainer should dispatch fetchWorkersActivityWidget start action" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="WorkersActivityContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:28" time="0.509" tests="3">
    <testcase classname="WorkersActivityContainer should mapStateToProps" name="WorkersActivityContainer should mapStateToProps" time="0.002">
    </testcase>
    <testcase classname="WorkersActivityContainer should mapDispatchToProps" name="WorkersActivityContainer should mapDispatchToProps" time="0.003">
    </testcase>
    <testcase classname="WorkersActivityContainer should dispatch fetchWorkersActivity start action" name="WorkersActivityContainer should dispatch fetchWorkersActivity start action" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ClientsRevenueContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:29" time="1.332" tests="3">
    <testcase classname="ClientsRevenueContainer should mapStateToProps" name="ClientsRevenueContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="ClientsRevenueContainer should mapDispatchToProps" name="ClientsRevenueContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ClientsRevenueContainer should dispatch fetchClientRevenueWidget start action" name="ClientsRevenueContainer should dispatch fetchClientRevenueWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ButtonLoader Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:31" time="0.234" tests="2">
    <testcase classname="ButtonLoader Component should render" name="ButtonLoader Component should render" time="0.019">
    </testcase>
    <testcase classname="ButtonLoader Component should render with loader" name="ButtonLoader Component should render with loader" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="ButtonTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:31" time="0.226" tests="2">
    <testcase classname="ButtonTab should render" name="ButtonTab should render" time="0.023">
    </testcase>
    <testcase classname="ButtonTab should change filter" name="ButtonTab should change filter" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="ControlledTimePicker" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:31" time="0.205" tests="2">
    <testcase classname="ControlledTimePicker should render" name="ControlledTimePicker should render" time="0.005">
    </testcase>
    <testcase classname="ControlledTimePicker should onChange" name="ControlledTimePicker should onChange" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Controlled Multiple Select" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:31" time="0.237" tests="2">
    <testcase classname="Controlled Multiple Select should render" name="Controlled Multiple Select should render" time="0.009">
    </testcase>
    <testcase classname="Controlled Multiple Select should handle item change" name="Controlled Multiple Select should handle item change" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="WorkersTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:32" time="0.21" tests="6">
    <testcase classname="WorkersTabContainer should mapStateToProps, " name="WorkersTabContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should mapDispatchToProps" name="WorkersTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch fetchWorkerList start action" name="WorkersTabContainer should dispatch fetchWorkerList start action" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch searchProjectStart start action" name="WorkersTabContainer should dispatch searchProjectStart start action" time="0.001">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch clearWorkerMap start action" name="WorkersTabContainer should dispatch clearWorkerMap start action" time="0">
    </testcase>
    <testcase classname="WorkersTabContainer should dispatch clearRelationMap start action" name="WorkersTabContainer should dispatch clearRelationMap start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="UsersTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:32" time="0.233" tests="5">
    <testcase classname="UsersTabContainer should mapStateToProps, " name="UsersTabContainer should mapStateToProps, " time="0.007">
    </testcase>
    <testcase classname="UsersTabContainer should mapDispatchToProps" name="UsersTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="UsersTabContainer should dispatch clearUserMap start action" name="UsersTabContainer should dispatch clearUserMap start action" time="0">
    </testcase>
    <testcase classname="UsersTabContainer should dispatch fetchUserList start action" name="UsersTabContainer should dispatch fetchUserList start action" time="0.001">
    </testcase>
    <testcase classname="UsersTabContainer should dispatch fetchProjectClientList start action" name="UsersTabContainer should dispatch fetchProjectClientList start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="StatusChip" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:32" time="0.2" tests="1">
    <testcase classname="StatusChip should render" name="StatusChip should render" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="NewAssignedWorkersContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:33" time="0.231" tests="3">
    <testcase classname="NewAssignedWorkersContainer should mapStateToProps" name="NewAssignedWorkersContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewAssignedWorkersContainer should mapDispatchToProps" name="NewAssignedWorkersContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="NewAssignedWorkersContainer should dispatch fetchWorkersWidget start action" name="NewAssignedWorkersContainer should dispatch fetchWorkersWidget start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrintingSystemSummary" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:33" time="0.234" tests="2">
    <testcase classname="BadgePrintingSystemSummary should render" name="BadgePrintingSystemSummary should render" time="0.021">
    </testcase>
    <testcase classname="BadgePrintingSystemSummary should print notes" name="BadgePrintingSystemSummary should print notes" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="AssignSubContractorContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:33" time="0.224" tests="6">
    <testcase classname="AssignSubContractorContainer should mapStateToProps, " name="AssignSubContractorContainer should mapStateToProps, " time="0.007">
    </testcase>
    <testcase classname="AssignSubContractorContainer should mapDispatchToProps" name="AssignSubContractorContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="AssignSubContractorContainer should dispatch fetchSubContractorList start action" name="AssignSubContractorContainer should dispatch fetchSubContractorList start action" time="0.001">
    </testcase>
    <testcase classname="AssignSubContractorContainer should dispatch assignSubcontractor start action" name="AssignSubContractorContainer should dispatch assignSubcontractor start action" time="0.001">
    </testcase>
    <testcase classname="AssignSubContractorContainer should dispatch searchCompanies start action" name="AssignSubContractorContainer should dispatch searchCompanies start action" time="0.001">
    </testcase>
    <testcase classname="AssignSubContractorContainer should dispatch clearRelationMap start action" name="AssignSubContractorContainer should dispatch clearRelationMap start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AssignVisitorBadgeModalContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:33" time="0.202" tests="4">
    <testcase classname="AssignVisitorBadgeModalContainer should mapStateToProps, " name="AssignVisitorBadgeModalContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="AssignVisitorBadgeModalContainer should mapDispatchToProps" name="AssignVisitorBadgeModalContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="AssignVisitorBadgeModalContainer should dispatch searchCompanies start action" name="AssignVisitorBadgeModalContainer should dispatch searchCompanies start action" time="0.001">
    </testcase>
    <testcase classname="AssignVisitorBadgeModalContainer should dispatch assignBadgeVisitor start action" name="AssignVisitorBadgeModalContainer should dispatch assignBadgeVisitor start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PhoneNumberInput" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:34" time="0.192" tests="2">
    <testcase classname="PhoneNumberInput should render Phone Input Component" name="PhoneNumberInput should render Phone Input Component" time="0.014">
    </testcase>
    <testcase classname="PhoneNumberInput should add and remove focus class when the input is focused/blurred" name="PhoneNumberInput should add and remove focus class when the input is focused/blurred" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceFormContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:34" time="0.212" tests="6">
    <testcase classname="InvoiceFormContainer should mapStateToProps, " name="InvoiceFormContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="InvoiceFormContainer should mapDispatchToProps" name="InvoiceFormContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="InvoiceFormContainer should dispatch searchCompanies start action" name="InvoiceFormContainer should dispatch searchCompanies start action" time="0.001">
    </testcase>
    <testcase classname="InvoiceFormContainer should dispatch searchProjects start action" name="InvoiceFormContainer should dispatch searchProjects start action" time="0.001">
    </testcase>
    <testcase classname="InvoiceFormContainer should dispatch fetchServices start action" name="InvoiceFormContainer should dispatch fetchServices start action" time="0.001">
    </testcase>
    <testcase classname="InvoiceFormContainer should dispatch clearRelationMap start action" name="InvoiceFormContainer should dispatch clearRelationMap start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="RegisterContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:34" time="0.213" tests="5">
    <testcase classname="RegisterContainer should mapStateToProps, " name="RegisterContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="RegisterContainer should mapDispatchToProps" name="RegisterContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="RegisterContainer should dispatch validateToken action" name="RegisterContainer should dispatch validateToken action" time="0.001">
    </testcase>
    <testcase classname="RegisterContainer should dispatch createAccount start action" name="RegisterContainer should dispatch createAccount start action" time="0.001">
    </testcase>
    <testcase classname="RegisterContainer should dispatch navigate action" name="RegisterContainer should dispatch navigate action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="AssignSubContractorTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:35" time="0.206" tests="2">
    <testcase classname="AssignSubContractorTabContainer should mapDispatchToProps" name="AssignSubContractorTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="AssignSubContractorTabContainer should dispatch clearClientMap start action" name="AssignSubContractorTabContainer should dispatch clearClientMap start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Step Icon" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:35" time="0.189" tests="1">
    <testcase classname="Step Icon should render" name="Step Icon should render" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="ControlledError" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:35" time="0.45" tests="2">
    <testcase classname="ControlledError should render" name="ControlledError should render" time="0.018">
    </testcase>
    <testcase classname="ControlledError should not render errors" name="ControlledError should not render errors" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="Controlled Input" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:36" time="0.903" tests="2">
    <testcase classname="Controlled Input should render with mark" name="Controlled Input should render with mark" time="0.02">
    </testcase>
    <testcase classname="Controlled Input should render without mark" name="Controlled Input should render without mark" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ToastList" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:37" time="0.196" tests="1">
    <testcase classname="ToastList should render" name="ToastList should render" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByLocationContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:37" time="0.189" tests="3">
    <testcase classname="WorkersByLocationContainer should mapStateToProps" name="WorkersByLocationContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByLocationContainer should mapDispatchToProps" name="WorkersByLocationContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByLocationContainer should dispatch fetchWorkersByLocation start action" name="WorkersByLocationContainer should dispatch fetchWorkersByLocation start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BadgePrinterSystemTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:37" time="0.205" tests="6">
    <testcase classname="BadgePrinterSystemTabContainer should mapStateToProps" name="BadgePrinterSystemTabContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemTabContainer should mapDispatchToProps" name="BadgePrinterSystemTabContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="BadgePrinterSystemTabContainer should dispatch fetchBadgePrinterSystemList start action" name="BadgePrinterSystemTabContainer should dispatch fetchBadgePrinterSystemList start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemTabContainer should dispatch fetchBadgePrinterSystemSummary start action" name="BadgePrinterSystemTabContainer should dispatch fetchBadgePrinterSystemSummary start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemTabContainer should dispatch deleteBadgePrinterSystem start action" name="BadgePrinterSystemTabContainer should dispatch deleteBadgePrinterSystem start action" time="0.001">
    </testcase>
    <testcase classname="BadgePrinterSystemTabContainer should dispatch navigate action" name="BadgePrinterSystemTabContainer should dispatch navigate action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Popover" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:38" time="0.198" tests="2">
    <testcase classname="Popover should render" name="Popover should render" time="0.006">
    </testcase>
    <testcase classname="Popover should render with secondary values" name="Popover should render with secondary values" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="PaymentMethodsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:38" time="0.202" tests="3">
    <testcase classname="PaymentMethodsContainer should mapStateToProps, " name="PaymentMethodsContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="PaymentMethodsContainer should mapDispatchToProps" name="PaymentMethodsContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="PaymentMethodsContainer should dispatch fetchPaymentMethods action" name="PaymentMethodsContainer should dispatch fetchPaymentMethods action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PaymentMethodsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:38" time="0.206" tests="6">
    <testcase classname="PaymentMethodsContainer should mapStateToProps, " name="PaymentMethodsContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="PaymentMethodsContainer should mapDispatchToProps" name="PaymentMethodsContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="PaymentMethodsContainer should dispatch fetchPaymentMethods action" name="PaymentMethodsContainer should dispatch fetchPaymentMethods action" time="0.001">
    </testcase>
    <testcase classname="PaymentMethodsContainer should dispatch deletePaymentMethod action" name="PaymentMethodsContainer should dispatch deletePaymentMethod action" time="0.001">
    </testcase>
    <testcase classname="PaymentMethodsContainer should dispatch replacePaymentMethod action" name="PaymentMethodsContainer should dispatch replacePaymentMethod action" time="0.001">
    </testcase>
    <testcase classname="PaymentMethodsContainer should dispatch clearLoading action" name="PaymentMethodsContainer should dispatch clearLoading action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="StatusWidget" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:39" time="0.17" tests="2">
    <testcase classname="StatusWidget should render" name="StatusWidget should render" time="0.008">
    </testcase>
    <testcase classname="StatusWidget should render loading" name="StatusWidget should render loading" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="RegisterContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:39" time="0.211" tests="4">
    <testcase classname="RegisterContainer should mapStateToProps, " name="RegisterContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="RegisterContainer should mapDispatchToProps" name="RegisterContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="RegisterContainer should dispatch confirmResetPassword action" name="RegisterContainer should dispatch confirmResetPassword action" time="0.001">
    </testcase>
    <testcase classname="RegisterContainer should dispatch clearLoading action" name="RegisterContainer should dispatch clearLoading action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BulletLabel Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:39" time="0.194" tests="1">
    <testcase classname="BulletLabel Component should render with content" name="BulletLabel Component should render with content" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="ProtectedRouteContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:39" time="0.193" tests="3">
    <testcase classname="ProtectedRouteContainer should mapStateToProps, " name="ProtectedRouteContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProtectedRouteContainer should mapDispatchToProps" name="ProtectedRouteContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProtectedRouteContainer should dispatch recoverSession action" name="ProtectedRouteContainer should dispatch recoverSession action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LoginContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:40" time="0.188" tests="3">
    <testcase classname="LoginContainer should mapStateToProps, " name="LoginContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="LoginContainer should mapDispatchToProps" name="LoginContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="LoginContainer should dispatch login start action" name="LoginContainer should dispatch login start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewBadgesByProjectContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:40" time="0.177" tests="3">
    <testcase classname="NewBadgesByProjectContainer should mapStateToProps" name="NewBadgesByProjectContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewBadgesByProjectContainer should mapDispatchToProps" name="NewBadgesByProjectContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="NewBadgesByProjectContainer should dispatch fetchBadgeProject start action" name="NewBadgesByProjectContainer should dispatch fetchBadgeProject start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="InvoiceInformationContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:40" time="0.184" tests="4">
    <testcase classname="InvoiceInformationContainer should mapStateToProps" name="InvoiceInformationContainer should mapStateToProps" time="0.002">
    </testcase>
    <testcase classname="InvoiceInformationContainer should mapDispatchToProps" name="InvoiceInformationContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="InvoiceInformationContainer should dispatch fetchInvoiceInformation start action" name="InvoiceInformationContainer should dispatch fetchInvoiceInformation start action" time="0.001">
    </testcase>
    <testcase classname="InvoiceInformationContainer should dispatch downloadInvoice start action" name="InvoiceInformationContainer should dispatch downloadInvoice start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:40" time="0.196" tests="5">
    <testcase classname="FileUploadContainer should mapStateToProps, " name="FileUploadContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="FileUploadContainer should mapDispatchToProps" name="FileUploadContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="FileUploadContainer should dispatch addFileList action" name="FileUploadContainer should dispatch addFileList action" time="0.001">
    </testcase>
    <testcase classname="FileUploadContainer should dispatch removeFile action" name="FileUploadContainer should dispatch removeFile action" time="0.001">
    </testcase>
    <testcase classname="FileUploadContainer should dispatch clearFileMap action" name="FileUploadContainer should dispatch clearFileMap action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LinkTab" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:41" time="0.188" tests="1">
    <testcase classname="LinkTab should render" name="LinkTab should render" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="ClientsByTradesContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:41" time="0.177" tests="3">
    <testcase classname="ClientsByTradesContainer should mapStateToProps" name="ClientsByTradesContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="ClientsByTradesContainer should mapDispatchToProps" name="ClientsByTradesContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ClientsByTradesContainer should dispatch fetchClientsByTrades start action" name="ClientsByTradesContainer should dispatch fetchClientsByTrades start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Loader" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:41" time="0.198" tests="1">
    <testcase classname="Loader should render" name="Loader should render" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="BadgeHistoryTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:41" time="0.184" tests="4">
    <testcase classname="BadgeHistoryTabContainer should mapStateToProps, " name="BadgeHistoryTabContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="BadgeHistoryTabContainer should mapDispatchToProps" name="BadgeHistoryTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="BadgeHistoryTabContainer should dispatch fetchBadgeHistory start action" name="BadgeHistoryTabContainer should dispatch fetchBadgeHistory start action" time="0.001">
    </testcase>
    <testcase classname="BadgeHistoryTabContainer should dispatch clearBadgeHistory start action" name="BadgeHistoryTabContainer should dispatch clearBadgeHistory start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Logo Component" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:42" time="0.198" tests="2">
    <testcase classname="Logo Component should render" name="Logo Component should render" time="0.009">
    </testcase>
    <testcase classname="Logo Component should render with custom props" name="Logo Component should render with custom props" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Skeleton" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:42" time="0.185" tests="2">
    <testcase classname="Skeleton should render" name="Skeleton should render" time="0.003">
    </testcase>
    <testcase classname="Skeleton should show loading" name="Skeleton should show loading" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="ProjectsTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:42" time="0.187" tests="4">
    <testcase classname="ProjectsTabContainer should mapStateToProps, " name="ProjectsTabContainer should mapStateToProps, " time="0.001">
    </testcase>
    <testcase classname="ProjectsTabContainer should mapDispatchToProps" name="ProjectsTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectsTabContainer should mapDispatchToProps" name="ProjectsTabContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="ProjectsTabContainer should dispatch fetchUserList start action" name="ProjectsTabContainer should dispatch fetchUserList start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByTradesMinorityContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:42" time="0.173" tests="3">
    <testcase classname="WorkersByTradesMinorityContainer should mapStateToProps" name="WorkersByTradesMinorityContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByTradesMinorityContainer should mapDispatchToProps" name="WorkersByTradesMinorityContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="WorkersByTradesMinorityContainer should dispatch fetchWorkersByTradesMinority start action" name="WorkersByTradesMinorityContainer should dispatch fetchWorkersByTradesMinority start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ProjectsTabContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:43" time="0.385" tests="4">
    <testcase classname="ProjectsTabContainer should mapStateToProps, " name="ProjectsTabContainer should mapStateToProps, " time="0.004">
    </testcase>
    <testcase classname="ProjectsTabContainer should mapDispatchToProps" name="ProjectsTabContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="ProjectsTabContainer should mapDispatchToProps" name="ProjectsTabContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="ProjectsTabContainer should dispatch fetchProjectList start action" name="ProjectsTabContainer should dispatch fetchProjectList start action" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="TopTenProjectsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:43" time="1.355" tests="3">
    <testcase classname="TopTenProjectsContainer should mapStateToProps" name="TopTenProjectsContainer should mapStateToProps" time="0.002">
    </testcase>
    <testcase classname="TopTenProjectsContainer should mapDispatchToProps" name="TopTenProjectsContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="TopTenProjectsContainer should dispatch fetchProjectTopTen start action" name="TopTenProjectsContainer should dispatch fetchProjectTopTen start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CertificationsByWorkersContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:45" time="0.198" tests="3">
    <testcase classname="CertificationsByWorkersContainer should mapStateToProps" name="CertificationsByWorkersContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="CertificationsByWorkersContainer should mapDispatchToProps" name="CertificationsByWorkersContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="CertificationsByWorkersContainer should dispatch fetchWorkersCertifications start action" name="CertificationsByWorkersContainer should dispatch fetchWorkersCertifications start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByClientContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:45" time="0.19" tests="3">
    <testcase classname="WorkersByClientContainer should mapStateToProps" name="WorkersByClientContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByClientContainer should mapDispatchToProps" name="WorkersByClientContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="WorkersByClientContainer should dispatch fetchWorkersByClient start action" name="WorkersByClientContainer should dispatch fetchWorkersByClient start action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="NewBadgesByLocationContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:45" time="0.192" tests="3">
    <testcase classname="NewBadgesByLocationContainer should mapStateToProps" name="NewBadgesByLocationContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewBadgesByLocationContainer should mapDispatchToProps" name="NewBadgesByLocationContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="NewBadgesByLocationContainer should dispatch fetchWorkersObservations start action" name="NewBadgesByLocationContainer should dispatch fetchWorkersObservations start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="HirearchyViewContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:46" time="0.195" tests="5">
    <testcase classname="HirearchyViewContainer should mapStateToProps, " name="HirearchyViewContainer should mapStateToProps, " time="0.002">
    </testcase>
    <testcase classname="HirearchyViewContainer should mapDispatchToProps" name="HirearchyViewContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="HirearchyViewContainer should dispatch fetchProjectClientHirearchyList start action" name="HirearchyViewContainer should dispatch fetchProjectClientHirearchyList start action" time="0.001">
    </testcase>
    <testcase classname="HirearchyViewContainer should dispatch clearClientMap start action" name="HirearchyViewContainer should dispatch clearClientMap start action" time="0">
    </testcase>
    <testcase classname="HirearchyViewContainer should dispatch navigate action" name="HirearchyViewContainer should dispatch navigate action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewActiveClientsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:46" time="0.181" tests="3">
    <testcase classname="NewActiveClientsContainer should mapStateToProps" name="NewActiveClientsContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewActiveClientsContainer should mapDispatchToProps" name="NewActiveClientsContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="NewActiveClientsContainer should dispatch fetchActiveClients start action" name="NewActiveClientsContainer should dispatch fetchActiveClients start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewActiveProjectsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:46" time="0.173" tests="3">
    <testcase classname="NewActiveProjectsContainer should mapStateToProps" name="NewActiveProjectsContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="NewActiveProjectsContainer should mapDispatchToProps" name="NewActiveProjectsContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="NewActiveProjectsContainer should dispatch fetchActiveProjects start action" name="NewActiveProjectsContainer should dispatch fetchActiveProjects start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByProjectContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:47" time="0.183" tests="3">
    <testcase classname="WorkersByProjectContainer should mapStateToProps" name="WorkersByProjectContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByProjectContainer should mapDispatchToProps" name="WorkersByProjectContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByProjectContainer should dispatch fetchWorkersByProject start action" name="WorkersByProjectContainer should dispatch fetchWorkersByProject start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NewBadgesByLocationContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:47" time="0.187" tests="3">
    <testcase classname="NewBadgesByLocationContainer should mapStateToProps" name="NewBadgesByLocationContainer should mapStateToProps" time="0.002">
    </testcase>
    <testcase classname="NewBadgesByLocationContainer should mapDispatchToProps" name="NewBadgesByLocationContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="NewBadgesByLocationContainer should dispatch fetchBadgeLocation start action" name="NewBadgesByLocationContainer should dispatch fetchBadgeLocation start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="WorkersByTradesNonMinorityContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:47" time="0.186" tests="3">
    <testcase classname="WorkersByTradesNonMinorityContainer should mapStateToProps" name="WorkersByTradesNonMinorityContainer should mapStateToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByTradesNonMinorityContainer should mapDispatchToProps" name="WorkersByTradesNonMinorityContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WorkersByTradesNonMinorityContainer should dispatch fetchWorkersByTradesNonMinority start action" name="WorkersByTradesNonMinorityContainer should dispatch fetchWorkersByTradesNonMinority start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TopTenClientsContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:47" time="0.205" tests="4">
    <testcase classname="TopTenClientsContainer should mapStateToProps" name="TopTenClientsContainer should mapStateToProps" time="0.002">
    </testcase>
    <testcase classname="TopTenClientsContainer should mapDispatchToProps" name="TopTenClientsContainer should mapDispatchToProps" time="0">
    </testcase>
    <testcase classname="TopTenClientsContainer should dispatch fetchClientTopTen start action" name="TopTenClientsContainer should dispatch fetchClientTopTen start action" time="0.001">
    </testcase>
    <testcase classname="TopTenClientsContainer should dispatch navigate start action" name="TopTenClientsContainer should dispatch navigate start action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ToastListContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:48" time="0.191" tests="1">
    <testcase classname="ToastListContainer should mapStateToProps, " name="ToastListContainer should mapStateToProps, " time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SidebarContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:48" time="0.191" tests="1">
    <testcase classname="SidebarContainer should mapStateToProps, " name="SidebarContainer should mapStateToProps, " time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="RolePill" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:48" time="0.188" tests="3">
    <testcase classname="RolePill should render DEV" name="RolePill should render DEV" time="0.008">
    </testcase>
    <testcase classname="RolePill should render GC" name="RolePill should render GC" time="0.003">
    </testcase>
    <testcase classname="RolePill should render SUB" name="RolePill should render SUB" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="RoleGuardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:49" time="0.193" tests="1">
    <testcase classname="RoleGuardContainer should mapStateToProps, " name="RoleGuardContainer should mapStateToProps, " time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ControlledButton" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:49" time="0.19" tests="2">
    <testcase classname="ControlledButton should render" name="ControlledButton should render" time="0.014">
    </testcase>
    <testcase classname="ControlledButton should call disable and enable focus" name="ControlledButton should call disable and enable focus" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Controlled Mask Input" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:49" time="0.16" tests="2">
    <testcase classname="Controlled Mask Input should render with mask" name="Controlled Mask Input should render with mask" time="0.009">
    </testcase>
    <testcase classname="Controlled Mask Input should render without mask" name="Controlled Mask Input should render without mask" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="WizardContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:49" time="0.185" tests="3">
    <testcase classname="WizardContainer should mapDispatchToProps" name="WizardContainer should mapDispatchToProps" time="0.001">
    </testcase>
    <testcase classname="WizardContainer should dispatch push action" name="WizardContainer should dispatch push action" time="0.001">
    </testcase>
    <testcase classname="WizardContainer should clearLoadingMap action" name="WizardContainer should clearLoadingMap action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ButtonPrinterContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:49" time="0.161" tests="2">
    <testcase classname="ButtonPrinterContainer should mapDispatchToProps" name="ButtonPrinterContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="ButtonPrinterContainer should dispatch destroyPrinter action" name="ButtonPrinterContainer should dispatch destroyPrinter action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DashboardTableRowContainer" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:50" time="0.154" tests="2">
    <testcase classname="DashboardTableRowContainer should mapDispatchToProps" name="DashboardTableRowContainer should mapDispatchToProps" time="0.002">
    </testcase>
    <testcase classname="DashboardTableRowContainer should dispatch navigate start action" name="DashboardTableRowContainer should dispatch navigate start action" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ErrorBoundaryTest" errors="0" failures="0" skipped="0" timestamp="2021-05-14T18:18:50" time="0.1" tests="2">
    <testcase classname="ErrorBoundaryTest renders child" name="ErrorBoundaryTest renders child" time="0.009">
    </testcase>
    <testcase classname="ErrorBoundaryTest renders placeholder when child render fails" name="ErrorBoundaryTest renders placeholder when child render fails" time="0.003">
    </testcase>
  </testsuite>
</testsuites>